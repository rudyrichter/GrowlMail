/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct WKPageContextMenuClient {
    int _field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    void *_field6;
    void *_field7;
    void *_field8;
};

struct WKPageFindMatchesClient {
    int _field1;
    void *_field2;
    void *_field3;
    void *_field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

/*
 * File: /System/Library/PrivateFrameworks/MailUI.framework/Versions/A/MailUI
 * UUID: 3936526D-97D1-3DDD-8391-FAA0A1B90CD4
 * Arch: x86_64
 *       Current version: 1812.0.0, Compatibility version: 1.0.0
 *       Source version: 1812.0.0.0.0
 *       Minimum Mac OS X version: 10.9.0
 *       SDK version: 10.9.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@protocol CNAutocompleteFetchDelegate <NSObject>
- (void)autocompleteFetch:(id)arg1 didFailWithError:(id)arg2;
- (void)autocompleteFetch:(id)arg1 didReceiveResults:(id)arg2;

@optional
- (void)autocompleteFetchDidEndNetworkActivity:(id)arg1;
- (void)autocompleteFetchDidBeginNetworkActivity:(id)arg1;
- (void)autocompleteFetchDidFinish:(id)arg1;
@end

@protocol CNContactPickerDelegate <NSObject>

@optional
- (void)contactPickerDidClose:(id)arg1;
- (void)contactPickerWillClose:(id)arg1;
- (void)contactPicker:(id)arg1 didChooseContact:(id)arg2 key:(id)arg3 value:(id)arg4;
@end

@protocol MCCIDURLProtocolDataProvider <NSObject>
@property(readonly) NSString *mimeType;
@property(readonly) NSData *data;
@property(readonly) NSURL *cidURL;

@optional
@property(readonly) long long fileSize;
@end

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (id)debugDescription;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

@optional
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (void)sharingService:(id)arg1 willShareItems:(id)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(id)arg1 didChooseSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextFinderAsynchronousDocumentFindMatch <NSObject>
@property(readonly, nonatomic) NSArray *textRects;
@property(readonly, nonatomic) NSView *containingView;
- (void)generateTextImage:(id)arg1;
@end

@protocol NSTextFinderClient <NSObject>

@optional
@property(readonly) NSArray *visibleCharacterRanges;
@property(copy) NSArray *selectedRanges;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) NSString *string;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isSelectable) BOOL selectable;
- (void)drawCharactersInRange:(struct _NSRange)arg1 forContentView:(id)arg2;
- (id)rectsForCharacterRange:(struct _NSRange)arg1;
- (id)contentViewAtIndex:(unsigned long long)arg1 effectiveCharacterRange:(struct _NSRange *)arg2;
- (void)didReplaceCharacters;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (BOOL)shouldReplaceCharactersInRanges:(id)arg1 withStrings:(id)arg2;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (unsigned long long)stringLength;
- (id)stringAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 endsWithSearchBoundary:(char *)arg3;
@end

@protocol NSTokenFieldDelegate <NSTextFieldDelegate>

@optional
- (unsigned long long)tokenField:(id)arg1 styleForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (BOOL)tokenField:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)tokenField:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)tokenField:(id)arg1 editingStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenField:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(id)arg1;
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillExitVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (struct CGSize)window:(id)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenOnScreen:(id)arg2 withDuration:(double)arg3;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1 onScreen:(id)arg2;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewPanelDataSource
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
@end

@protocol QLSeamlessCloserDelegate <NSObject>

@optional
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (id)seamlessCloserSourcePreviewViewForPreviewItem:(id)arg1;
@end

@protocol QLSeamlessOpenerDelegate <NSObject>

@optional
- (id)seamlessOpener:(id)arg1 transientWindowForItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transientImageAtFrame:(struct CGRect *)arg2 forItem:(id)arg3;
- (void)seamlessOpener:(id)arg1 failedToOpenItems:(id)arg2 withError:(id)arg3;
- (void)seamlessOpener:(id)arg1 openedItem:(id)arg2 seamlessly:(BOOL)arg3;
- (id)seamlessOpenerTransientWindow:(id)arg1 level:(long long *)arg2;
- (int)seamlessOpener:(id)arg1 supportForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourceBubbleForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
@end

@protocol WKBrowsingContextLoadDelegate <NSObject>

@optional
- (void)browsingContextControllerDidFailLoad:(id)arg1 withError:(id)arg2;
- (void)browsingContextControllerDidFinishLoad:(id)arg1;
- (void)browsingContextControllerDidCommitLoad:(id)arg1;
- (void)browsingContextControllerDidFailProvisionalLoad:(id)arg1 withError:(id)arg2;
- (void)browsingContextControllerDidReceiveServerRedirectForProvisionalLoad:(id)arg1;
- (void)browsingContextControllerDidStartProvisionalLoad:(id)arg1;
@end

@protocol WKConnectionDelegate <NSObject>
- (void)connectionDidClose:(id)arg1;
- (void)connection:(id)arg1 didReceiveMessageWithName:(id)arg2 body:(id)arg3;
@end

@protocol WKProcessGroupDelegate <NSObject>
- (void)processGroup:(id)arg1 didCreateConnectionToWebProcessPlugIn:(id)arg2;

@optional
- (id)processGroupWillCreateConnectionToWebProcessPlugIn:(id)arg1;
@end

@interface _MUIAddContactsButton : NSButton
{
}

- (BOOL)acceptsFirstResponder;

@end

@interface MUIAddressFieldScrollDocumentView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface MUIAddressField : NSControl <CNContactPickerDelegate, CNAutocompleteFetchDelegate, NSTableViewDataSource, NSTableViewDelegate, NSTokenFieldDelegate>
{
    SEL _action;
    id _target;
    unsigned long long _style;
    BOOL _ignoreCompletionForTextChange;
    BOOL _isShowingContactPicker;
    BOOL _shouldDrawFocusRing;
    BOOL _isBoundToTokenField;
    BOOL _isShowingSelectedCompletion;
    NSString *_senderDomain;
    NSScrollView *_scrollView;
    MUITokenAddressField *_tokenField;
    NSProgressIndicator *_progressIndicator;
    NSButton *_addContactButton;
    NSWindow *_completionWindow;
    NSTableView *_completionTableView;
    NSScrollView *_completionTableScrollView;
    CNAutocompleteResult *_selectedResult;
    NSMutableArray *_completionResults;
    id <CNCancelable> _currentSearchRequest;
    NSString *_previousPartialString;
    double _completionStartTime;
    long long _addressDisplayMode;
    id _tokenValue;
    NSLayoutConstraint *_addContactButtonWidthConstraint;
    NSLayoutConstraint *_addContactButtonTrailingConstraint;
    NSLayoutConstraint *_tokenFieldTrailingConstraint;
    NSLayoutConstraint *_tokenFieldBottomConstraint;
    NSLayoutConstraint *_addressFieldHeightConstraint;
    NSMapTable *_representedObjectsCache;
    NSMutableArray *_autocompletionOperations;
    NSView *_progressIndicatorContainer;
    id <MUITokenAddressDelegate> _tokenAddressDelegate;
    struct _NSRange _completionHighlightRange;
}

+ (id)_contactPicker;
+ (id)keyPathsForValuesAffectingAddresses;
@property(nonatomic) BOOL isShowingSelectedCompletion; // @synthesize isShowingSelectedCompletion=_isShowingSelectedCompletion;
@property(nonatomic) BOOL isBoundToTokenField; // @synthesize isBoundToTokenField=_isBoundToTokenField;
@property(nonatomic) id <MUITokenAddressDelegate> tokenAddressDelegate; // @synthesize tokenAddressDelegate=_tokenAddressDelegate;
@property(nonatomic) BOOL shouldDrawFocusRing; // @synthesize shouldDrawFocusRing=_shouldDrawFocusRing;
@property(retain, nonatomic) NSView *progressIndicatorContainer; // @synthesize progressIndicatorContainer=_progressIndicatorContainer;
@property(retain, nonatomic) NSMutableArray *autocompletionOperations; // @synthesize autocompletionOperations=_autocompletionOperations;
@property(retain, nonatomic) NSMapTable *representedObjectsCache; // @synthesize representedObjectsCache=_representedObjectsCache;
@property(retain, nonatomic) NSLayoutConstraint *addressFieldHeightConstraint; // @synthesize addressFieldHeightConstraint=_addressFieldHeightConstraint;
@property(nonatomic) NSLayoutConstraint *tokenFieldBottomConstraint; // @synthesize tokenFieldBottomConstraint=_tokenFieldBottomConstraint;
@property(nonatomic) NSLayoutConstraint *tokenFieldTrailingConstraint; // @synthesize tokenFieldTrailingConstraint=_tokenFieldTrailingConstraint;
@property(nonatomic) NSLayoutConstraint *addContactButtonTrailingConstraint; // @synthesize addContactButtonTrailingConstraint=_addContactButtonTrailingConstraint;
@property(nonatomic) NSLayoutConstraint *addContactButtonWidthConstraint; // @synthesize addContactButtonWidthConstraint=_addContactButtonWidthConstraint;
@property(nonatomic) BOOL isShowingContactPicker; // @synthesize isShowingContactPicker=_isShowingContactPicker;
@property(retain, nonatomic) id tokenValue; // @synthesize tokenValue=_tokenValue;
@property(nonatomic) long long addressDisplayMode; // @synthesize addressDisplayMode=_addressDisplayMode;
@property(nonatomic) BOOL ignoreCompletionForTextChange; // @synthesize ignoreCompletionForTextChange=_ignoreCompletionForTextChange;
@property(nonatomic) struct _NSRange completionHighlightRange; // @synthesize completionHighlightRange=_completionHighlightRange;
@property(nonatomic) double completionStartTime; // @synthesize completionStartTime=_completionStartTime;
@property(copy, nonatomic) NSString *previousPartialString; // @synthesize previousPartialString=_previousPartialString;
@property(retain, nonatomic) id <CNCancelable> currentSearchRequest; // @synthesize currentSearchRequest=_currentSearchRequest;
@property(retain, nonatomic) NSMutableArray *completionResults; // @synthesize completionResults=_completionResults;
@property(retain, nonatomic) CNAutocompleteResult *selectedResult; // @synthesize selectedResult=_selectedResult;
@property(retain, nonatomic) NSScrollView *completionTableScrollView; // @synthesize completionTableScrollView=_completionTableScrollView;
@property(retain, nonatomic) NSTableView *completionTableView; // @synthesize completionTableView=_completionTableView;
@property(retain, nonatomic) NSWindow *completionWindow; // @synthesize completionWindow=_completionWindow;
@property(retain, nonatomic) NSButton *addContactButton; // @synthesize addContactButton=_addContactButton;
@property(retain, nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) MUITokenAddressField *tokenField; // @synthesize tokenField=_tokenField;
@property(retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(copy, nonatomic) NSString *senderDomain; // @synthesize senderDomain=_senderDomain;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilitySetOverrideValue:(id)arg1 forAttribute:(id)arg2;
- (void)drawFocusRingMask;
- (struct CGRect)focusRingMaskBounds;
- (BOOL)_addressFieldNeedsToBeScrollable;
- (void)_resizeFieldIfNeeded;
- (void)updateConstraints;
- (BOOL)_hasFocus;
- (void)contactPickerDidClose:(id)arg1;
- (void)contactPickerWillClose:(id)arg1;
- (void)contactPicker:(id)arg1 didChooseContact:(id)arg2 key:(id)arg3 value:(id)arg4;
- (void)_showContactPicker:(id)arg1;
- (void)_tokenFieldGainedFocus:(id)arg1;
- (void)_completeSelection:(id)arg1;
- (void)_selectTableViewRow:(unsigned long long)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)_completionTableView;
- (void)_presentCompletionWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)_completionStringForSelectedRecord;
- (BOOL)tokenField:(id)arg1 characterAtIndex:(unsigned long long)arg2 shouldTerminateString:(id)arg3;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (BOOL)tokenField:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (unsigned long long)tokenField:(id)arg1 styleForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 editingStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenField:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)tokenField:(id)arg1 setUpTokenAttachmentCell:(id)arg2 forRepresentedObject:(id)arg3;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeKeyView;
- (void)setNextKeyView:(id)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
@property(nonatomic) unsigned long long style;
- (void)autocompleteFetchDidEndNetworkActivity:(id)arg1;
- (void)autocompleteFetchDidBeginNetworkActivity:(id)arg1;
- (void)autocompleteFetch:(id)arg1 didFailWithError:(id)arg2;
- (void)_cleanUpOperationArray;
- (void)autocompleteFetch:(id)arg1 didReceiveResults:(id)arg2;
- (id)_tokensWithGroupTokensExpandedIfNecessary:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_addAddress:(id)arg1 contact:(id)arg2;
@property(retain, nonatomic) NSArray *addresses;
@property(readonly) BOOL isEmpty;
- (void)_refreshAddressDisplayMode;
- (void)_sharedPreferencesChanged:(id)arg1;
- (void)_showSelectedCompletionInField;
- (void)_cancelCompletion;
- (void)_startCompleting;
- (void)_updateTrailingConstraints;
- (void)_scrollerStyleDidChange:(id)arg1;
- (void)_configureConstraints;
- (void)_configureAddContactButton;
- (void)_configureProgressIndicator;
- (void)_configureTokenField;
- (void)_configureScrollView;
- (void)_windowDidChangeKeyStatus:(id)arg1;
- (void)_bindOrUnbindToTokenField:(BOOL)arg1;
- (void)viewDidMoveToSuperview;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;
- (void)_registerForNotifications;
- (void)dealloc;
- (void)_muiAddressFieldCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MUIAddressTokenAttachmentCell : NSTokenAttachmentCell
{
    BOOL _isForGroup;
    BOOL _drawAsMain;
    NSView *_containerView;
    double _lineFragmentPadding;
    long long _tokenAddressStyle;
    NSString *_title;
    NSString *_alternateTitle;
    struct CGRect _cellFrame;
}

+ (id)colorForExternalDomain;
+ (BOOL)addressIsExternal:(id)arg1;
@property(nonatomic) BOOL drawAsMain; // @synthesize drawAsMain=_drawAsMain;
@property(nonatomic) struct CGRect cellFrame; // @synthesize cellFrame=_cellFrame;
@property(copy, nonatomic) NSString *alternateTitle; // @synthesize alternateTitle=_alternateTitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long tokenAddressStyle; // @synthesize tokenAddressStyle=_tokenAddressStyle;
@property(nonatomic) double lineFragmentPadding; // @synthesize lineFragmentPadding=_lineFragmentPadding;
@property(nonatomic) BOOL isForGroup; // @synthesize isForGroup=_isForGroup;
@property(nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)tokenBackgroundColor;
- (id)tokenForegroundColor;
- (id)_textAttributes;
- (id)_contents;
- (struct CGRect)pullDownRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGPoint)cellBaselineOffset;
- (struct CGRect)_titleBoundingRectWithSize:(struct CGSize)arg1;
- (id)pullDownImage;
@property(readonly, nonatomic) BOOL isRTL;
- (void)setFont:(id)arg1;
- (void)dealloc;
- (void)_addressTokenAttachmentCellCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;

@end

@interface MUIBundleResourceURLProtocol : NSURLProtocol
{
}

+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface MUIContextMenuController : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate>
{
    MUIWKViewController *_viewController;
    NSMenu *_shareMenu;
    NSSharingServicePicker *_picker;
    NSDictionary *_applicationDictionary;
    NSMapTable *_sharingItems;
}

@property(retain, nonatomic) NSMapTable *sharingItems; // @synthesize sharingItems=_sharingItems;
@property(retain, nonatomic) NSDictionary *applicationDictionary; // @synthesize applicationDictionary=_applicationDictionary;
@property(retain, nonatomic) NSSharingServicePicker *picker; // @synthesize picker=_picker;
@property(retain, nonatomic) NSMenu *shareMenu; // @synthesize shareMenu=_shareMenu;
@property(nonatomic) MUIWKViewController *viewController; // @synthesize viewController=_viewController;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (void)_handleClickedItem:(struct OpaqueWKContextMenuItem *)arg1;
- (void)_addProposedContextMenuItems:(struct OpaqueWKArray *)arg1 toMenu:(struct OpaqueWKArray **)arg2;
- (id)_applicationNameFromIdentifier:(id)arg1;
- (struct WKPageContextMenuClient)contextMenuClient;
- (void)dealloc;

@end

@interface MUIJSNotification : NSObject
{
    NSString *_notificationName;
    NSString *_identifier;
    NSDictionary *_userInfo;
}

@property(readonly, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSString *notificationName; // @synthesize notificationName=_notificationName;
- (void)dealloc;
- (id)initWithName:(id)arg1 identifier:(id)arg2 userInfo:(id)arg3;

@end

@interface _MUIJSNotificationCenterObserverRegistration : NSObject
{
    id _observer;
    SEL _selector;
    NSString *_identifier;
}

@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(nonatomic) id observer; // @synthesize observer=_observer;

@end

@interface MUIJSNotificationCenter : NSObject
{
    NSTimer *_pollTimer;
    NSMutableDictionary *_observerRegistrations;
    MUIWKViewController *_viewController;
}

@property(nonatomic) MUIWKViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSMutableDictionary *observerRegistrations; // @synthesize observerRegistrations=_observerRegistrations;
@property(retain, nonatomic) NSTimer *pollTimer; // @synthesize pollTimer=_pollTimer;
- (void)_poll;
- (void)_receiveNotificationNamed:(id)arg1 identifier:(id)arg2 userInfo:(id)arg3;
- (void)removeObserver:(id)arg1 name:(id)arg2 identifier:(id)arg3;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 identifier:(id)arg4;
- (void)dealloc;
- (void)tearDown;
- (id)init;
- (id)initWithViewController:(id)arg1;

@end

@interface MUIFramework : NSObject
{
}

+ (id)bundle;

@end

@interface MUIMIMEDocumentGenerator : NSObject
{
    NSArray *_mimeParts;
    NSAttributedString *_plainTextAlternative;
    MUIWebDocumentView *_webDocumentView;
}

@property(retain, nonatomic) MUIWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(retain, nonatomic) NSAttributedString *plainTextAlternative; // @synthesize plainTextAlternative=_plainTextAlternative;
@property(retain, nonatomic) NSArray *mimeParts; // @synthesize mimeParts=_mimeParts;
- (void)asyncGenerateHTMLDocument:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithWebDocument:(id)arg1;
- (id)initWithWebDocumentView:(id)arg1;

@end

@interface MUITokenAddress : NSObject <NSCopying, CNAutocompleteFetchDelegate>
{
    BOOL _shouldRefreshNameIfPossible;
    id <MUITokenAddressDelegate> _delegate;
    NSTokenField *_tokenField;
    NSTextView *_textView;
    CNContact *_contact;
    CNGroup *_group;
    NSArray *_groupMembers;
    NSString *_recentRawAddress;
    NSString *_recentName;
    NSString *_currentRawAddress;
    NSString *_currentName;
    long long _tokenStyle;
    id <CNCancelable> _autocompletionSearchRequest;
}

+ (id)_contactsCache;
+ (void)writeTokens:(id)arg1 toPasteboard:(id)arg2;
@property(retain, nonatomic) id <CNCancelable> autocompletionSearchRequest; // @synthesize autocompletionSearchRequest=_autocompletionSearchRequest;
@property(nonatomic) BOOL shouldRefreshNameIfPossible; // @synthesize shouldRefreshNameIfPossible=_shouldRefreshNameIfPossible;
@property(nonatomic) long long tokenStyle; // @synthesize tokenStyle=_tokenStyle;
@property(copy) NSString *currentName; // @synthesize currentName=_currentName;
@property(copy) NSString *currentRawAddress; // @synthesize currentRawAddress=_currentRawAddress;
@property(copy) NSString *recentName; // @synthesize recentName=_recentName;
@property(copy) NSString *recentRawAddress; // @synthesize recentRawAddress=_recentRawAddress;
@property(retain) NSArray *groupMembers; // @synthesize groupMembers=_groupMembers;
@property(retain) CNGroup *group; // @synthesize group=_group;
@property(retain) CNContact *contact; // @synthesize contact=_contact;
@property(nonatomic) NSTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) NSTokenField *tokenField; // @synthesize tokenField=_tokenField;
@property(nonatomic) id <MUITokenAddressDelegate> delegate; // @synthesize delegate=_delegate;
- (void)searchForToken:(id)arg1;
- (void)removeFromAddressHistory:(id)arg1;
- (void)expandGroupAddress:(id)arg1;
- (void)openNewMessage:(id)arg1;
- (void)addToVIPSenders:(id)arg1;
- (void)removeFromVIPSenders:(id)arg1;
- (void)openInContacts:(id)arg1;
- (void)openPersonCard:(id)arg1;
- (void)addToContacts:(id)arg1;
- (void)copyAddressToClipboard:(id)arg1;
- (void)removeAddress:(id)arg1;
- (void)editAddress:(id)arg1;
- (void)changeAddress:(id)arg1;
- (id)_tokenForTokenAddress:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menu;
- (id)expandedTokens;
- (void)autocompleteFetch:(id)arg1 didFailWithError:(id)arg2;
- (void)autocompleteFetch:(id)arg1 didReceiveResults:(id)arg2;
- (void)_refreshToken;
- (void)_contactsChanged:(id)arg1;
- (id)_contactForEmail:(id)arg1;
- (void)_getRecordsFromGroup;
- (void)_getAddressAndNameFromRecord;
- (void)_getRecordFromAddress;
- (void)getRecordFromAddress;
- (id)_contactsOperationQueue;
- (void)writeToPasteboard:(id)arg1;
- (void)_writeToPasteboard:(id)arg1 forceAddressOnly:(BOOL)arg2;
- (BOOL)writeToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)_writeToPasteboard:(id)arg1 type:(id)arg2 forceAddressOnly:(BOOL)arg3;
- (id)writablePasteboardTypes;
- (id)_suggestionSerializedRepresentation;
- (id)suggestionWithGenius:(id)arg1;
- (id)_vCardRepresentation;
- (id)toolTipWithMode:(long long)arg1;
- (id)displayStringWithMode:(long long)arg1;
- (id)formattedAddress;
- (id)_contactNameFormatter;
- (id)_formattedRecentAddress;
- (id)_formattedCurrentAddress;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)_initBasic;
- (id)initWithGroup:(id)arg1;
- (id)initWithAddress:(id)arg1 isRecent:(BOOL)arg2 contact:(id)arg3;
- (id)initWithAddress:(id)arg1 contact:(id)arg2;

@end

@interface MUITokenAddressField : NSTokenField
{
    MUITokenAddressTextView *_addressTextView;
    NSView *_parentAddressField;
}

+ (Class)cellClass;
@property(nonatomic) NSView *parentAddressField; // @synthesize parentAddressField=_parentAddressField;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)designatedFocusRingView;
- (struct CGSize)intrinsicContentSize;
- (void)setFrameSize:(struct CGSize)arg1;
- (double)minimumHeight;
- (void)refreshField;
- (void)didAddSubview:(id)arg1;
- (id)_addressTextView;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (unsigned long long)textView:(id)arg1 dragOperationForDraggingInfo:(id)arg2 type:(id)arg3;
- (BOOL)becomeFirstResponder;
- (void)dealloc;

@end

@interface MUITokenAddressFieldCell : NSTokenFieldCell
{
}

- (BOOL)_needRedrawOnWindowChangedKeyState;
- (BOOL)tokenAttachment:(id)arg1 doubleClickedInRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (id)_fieldEditor;

@end

@interface MUITokenAddressTextStorage : NSConcreteTextStorage
{
}

- (BOOL)stripsFontAndColorFromAttachments;

@end

@interface MUITokenAddressTextView : NSTokenTextView
{
    MUIAddressField *_addressField;
}

@property(nonatomic) MUIAddressField *addressField; // @synthesize addressField=_addressField;
- (void)noteFocusRingMaskChanged;
- (id)designatedFocusRingView;
- (BOOL)performDragOperation:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MUIWebAttachment : NSObject <NSCoding, NSPasteboardWriting>
{
    NSString *_mimeType;
    NSString *_uti;
    NSImage *_iconImage;
    NSString *_contentID;
    NSFileWrapper *_fileWrapper;
    NSURL *_cidURL;
    NSURL *_fileURL;
}

@property(retain, nonatomic) NSURL *cidURL; // @synthesize cidURL=_cidURL;
@property(readonly, nonatomic) NSFileWrapper *fileWrapper; // @synthesize fileWrapper=_fileWrapper;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)writeToURL:(id)arg1;
- (void)startDownloadingIfNeededWithProgress:(id)arg1 completionBlock:(id)arg2;
@property(readonly, nonatomic) NSProgress *downloadProgress;
@property(readonly, nonatomic) BOOL shouldAlwaysAutomaticallyDownload;
@property(readonly, nonatomic) BOOL isDataDownloaded;
@property(readonly, nonatomic) NSURL *downloadDirectory;
@property(readonly, nonatomic) BOOL isAutoArchiveAttachment;
@property(readonly, nonatomic) NSString *filename;
@property(readonly, nonatomic) NSImage *iconImage;
@property(readonly, nonatomic) unsigned long long fileSize;
@property(readonly, nonatomic) NSString *uti; // @synthesize uti=_uti;
@property(readonly, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(copy, nonatomic) NSString *contentID;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_muiWebAttachmentCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFileWrapper:(id)arg1;
- (id)init;

@end

@interface _MUIWebAttachmentIconPrintingDataProvider : NSObject <MCCIDURLProtocolDataProvider>
{
    NSImage *_iconImage;
    NSURL *_cidURL;
}

@property(retain) NSURL *cidURL; // @synthesize cidURL=_cidURL;
@property(retain) NSImage *iconImage; // @synthesize iconImage=_iconImage;
@property(readonly) NSData *data;
@property(readonly) NSString *mimeType;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

// Remaining properties
@property(readonly) long long fileSize;

@end

@interface MUIWebAttachmentController : NSObject <QLPreviewItem, MCCIDURLProtocolDataProvider>
{
    unsigned long long _displayState;
    BOOL _canBeDisplayedInline;
    MUIWebAttachment *_webAttachment;
    MUIWKViewController *_controller;
    NSString *_markup;
    _MUIWebAttachmentIconPrintingDataProvider *_iconPrintingDataProvider;
    NSImage *_cachedSnapshot;
    long long _downloadedState;
    NSURL *_alternateCIDURL;
    NSProgress *_downloadProgress;
    struct CGRect _cachedFrame;
    struct CGRect _cachedIconFrame;
}

@property(nonatomic) BOOL canBeDisplayedInline; // @synthesize canBeDisplayedInline=_canBeDisplayedInline;
@property(retain, nonatomic) NSProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(retain, nonatomic) NSURL *alternateCIDURL; // @synthesize alternateCIDURL=_alternateCIDURL;
@property(nonatomic) long long downloadedState; // @synthesize downloadedState=_downloadedState;
@property(retain, nonatomic) NSImage *cachedSnapshot; // @synthesize cachedSnapshot=_cachedSnapshot;
@property(retain, nonatomic) _MUIWebAttachmentIconPrintingDataProvider *iconPrintingDataProvider; // @synthesize iconPrintingDataProvider=_iconPrintingDataProvider;
@property(nonatomic) struct CGRect cachedIconFrame; // @synthesize cachedIconFrame=_cachedIconFrame;
@property(nonatomic) struct CGRect cachedFrame; // @synthesize cachedFrame=_cachedFrame;
@property(readonly, nonatomic) NSString *markup; // @synthesize markup=_markup;
@property(nonatomic) MUIWKViewController *controller; // @synthesize controller=_controller;
@property(readonly, nonatomic) MUIWebAttachment *webAttachment; // @synthesize webAttachment=_webAttachment;
- (void)startDownloadingIfNeededWithProgress:(id)arg1 completionBlock:(id)arg2;
@property(readonly) NSString *mimeType;
@property(readonly) NSURL *cidURL;
@property(readonly) NSData *data;
- (void)setImageScale:(unsigned long long)arg1;
- (struct CGRect)frameForPreview;
- (id)transitionImageForPreview;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
- (id)deletionScriptString;
- (id)creationScriptStringForDropPoint:(struct CGPoint)arg1;
- (id)creationScriptString;
- (id)registrationScriptString;
- (id)_couponAttachmentMarkup:(id)arg1;
- (id)_genericAttachmentMarkup:(id)arg1 downloadedState:(long long)arg2;
- (void)_generateAttachmentMarkup;
- (void)_refreshAttachmentMarkup;
- (BOOL)_displayedInline;
@property(nonatomic) unsigned long long displayState;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithWebAttachment:(id)arg1 controller:(id)arg2;

// Remaining properties
@property(readonly) long long fileSize;
@property(readonly) id previewItemDisplayState;

@end

@interface MUIWebDocument : NSObject <NSCoding>
{
    NSString *_html;
    BOOL _loadRemoteContent;
    BOOL _hasBlockedRemoteContent;
    NSArray *_attachments;
    Class _webAttachmentClass;
    unsigned long long _imageScale;
    NSURL *_baseURL;
    NSDictionary *_dataDetectorsContext;
    NSMutableDictionary *_jsDocumentContext;
    NSError *_parseError;
    unsigned long long _originalEncoding;
}

@property(nonatomic) unsigned long long originalEncoding; // @synthesize originalEncoding=_originalEncoding;
@property(nonatomic) BOOL hasBlockedRemoteContent; // @synthesize hasBlockedRemoteContent=_hasBlockedRemoteContent;
@property(nonatomic) BOOL loadRemoteContent; // @synthesize loadRemoteContent=_loadRemoteContent;
@property(retain, nonatomic) NSError *parseError; // @synthesize parseError=_parseError;
@property(readonly, nonatomic) NSMutableDictionary *jsDocumentContext; // @synthesize jsDocumentContext=_jsDocumentContext;
@property(copy, nonatomic) NSDictionary *dataDetectorsContext; // @synthesize dataDetectorsContext=_dataDetectorsContext;
@property(readonly, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(nonatomic) unsigned long long imageScale; // @synthesize imageScale=_imageScale;
@property(retain, nonatomic) Class webAttachmentClass; // @synthesize webAttachmentClass=_webAttachmentClass;
@property(retain, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) NSString *html;
- (id)attachmentForContentID:(id)arg1;
- (id)description;
- (id)_defaultDocumentHTML;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_muiWebDocumentCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface _MUISnapshotView : NSView
{
}

- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)isFlipped;

@end

@interface MUIWebDocumentView : NSView
{
    unsigned long long _loadedState;
    struct CGSize _contentSize;
    BOOL _preparingToLayoutSynchronously;
    NSView *_snapshotView;
    MUIWKViewController *_wkViewController;
    id _prepareToLayoutSynchronouslyCompletionHandler;
}

+ (id)keyPathsForValuesAffectingEditable;
+ (id)keyPathsForValuesAffectingPageZoom;
+ (id)keyPathsForValuesAffectingViewGroup;
+ (id)keyPathsForValuesAffectingWebDocument;
+ (BOOL)requiresConstraintBasedLayout;
@property(copy, nonatomic) id prepareToLayoutSynchronouslyCompletionHandler; // @synthesize prepareToLayoutSynchronouslyCompletionHandler=_prepareToLayoutSynchronouslyCompletionHandler;
@property(nonatomic) BOOL preparingToLayoutSynchronously; // @synthesize preparingToLayoutSynchronously=_preparingToLayoutSynchronously;
@property(retain, nonatomic) MUIWKViewController *wkViewController; // @synthesize wkViewController=_wkViewController;
@property(readonly, nonatomic) NSView *snapshotView; // @synthesize snapshotView=_snapshotView;
- (void)exportAttachmentsToiPhoto;
- (BOOL)canExportAttachmentsToiPhoto;
- (void)saveAttachments:(id)arg1 toDirectory:(id)arg2;
- (void)saveAttachmentsWithPanel:(id)arg1;
- (void)quickLookAttachments:(id)arg1;
- (id)_attachmentControllersForAttachments:(id)arg1;
- (id)description;
- (BOOL)shouldHandleClickForURL:(id)arg1;
- (void)getSelectedText:(id)arg1;
- (void)selectFindMatch:(id)arg1 completionHandler:(id)arg2;
- (void)findMatchesForString:(id)arg1 findOptions:(unsigned long long)arg2 maxResults:(unsigned long long)arg3 resultCollector:(id)arg4;
- (void)generateSelectionWebDocument:(id)arg1;
- (void)generateStyleInlinedWebDocument:(id)arg1;
- (void)removeAttachment:(id)arg1 completionHandler:(id)arg2;
- (void)appendAttributedString:(id)arg1 completionHandler:(id)arg2;
- (void)appendString:(id)arg1 completionHandler:(id)arg2;
- (void)appendAttachment:(id)arg1 completionHandler:(id)arg2;
- (void)setAttachments:(id)arg1 asHidden:(BOOL)arg2 completionHandler:(id)arg3;
@property(nonatomic) BOOL editable;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)mui_cancelSynchronousLayout;
- (void)mui_performLayoutSynchronously;
- (void)_readyToLayoutSynchronously;
- (void)mui_prepareToLayoutSynchronously:(id)arg1;
- (void)mui_cancelAnimation;
- (void)mui_performAnimation;
- (void)mui_prepareToAnimate:(id)arg1;
- (void)mui_didCacheDisplayInRect;
- (void)mui_prepareToCacheDisplayInRect:(struct CGRect)arg1 completionHandler:(id)arg2;
- (id)printOperationWithPrintInfo:(id)arg1;
- (void)prepareTilesInRect:(struct CGRect)arg1;
- (void)evaluateJavascript:(id)arg1 completionHandler:(id)arg2;
- (void)setShouldPaintToBounds:(BOOL)arg1;
- (BOOL)shouldPaintToBounds;
@property(nonatomic) double preferredMinLayoutWidth;
@property(nonatomic) double pageZoom;
- (void)setViewGroup:(id)arg1;
- (id)viewGroup;
@property(retain, nonatomic) MUIWebDocument *webDocument;
@property(nonatomic) unsigned long long loadedState;
@property(nonatomic) struct CGSize contentSize;
- (id)contentView;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (struct CGSize)intrinsicContentSize;
- (BOOL)isFlipped;
- (void)dealloc;
- (void)_muiWebDocumentViewCommonInitWithViewGroup:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 viewGroup:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1 viewGroup:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface MUIWebDocumentViewGroup : NSObject <WKConnectionDelegate, WKProcessGroupDelegate>
{
    NSString *_userStyleSheet;
    NSArray *_userScripts;
    NSString *_processGroupName;
    unsigned long long _maxProcessCount;
    NSMutableArray *_processGroups;
    unsigned long long _processRotator;
    WKBrowsingContextGroup *_browsingContextGroup;
    NSMapTable *_wkConnectionsByProcessGroup;
}

+ (id)_defaultUserStyleSheet;
@property(retain, nonatomic) NSMapTable *wkConnectionsByProcessGroup; // @synthesize wkConnectionsByProcessGroup=_wkConnectionsByProcessGroup;
@property(retain, nonatomic) WKBrowsingContextGroup *browsingContextGroup; // @synthesize browsingContextGroup=_browsingContextGroup;
@property(nonatomic) unsigned long long processRotator; // @synthesize processRotator=_processRotator;
@property(retain, nonatomic) NSMutableArray *processGroups; // @synthesize processGroups=_processGroups;
@property(readonly, nonatomic) unsigned long long maxProcessCount; // @synthesize maxProcessCount=_maxProcessCount;
@property(readonly, nonatomic) NSString *processGroupName; // @synthesize processGroupName=_processGroupName;
@property(copy, nonatomic) NSArray *userScripts;
- (void)_refreshUserScripts;
- (id)_defaultUserScripts;
- (id)effectiveUserStyle;
@property(copy, nonatomic) NSString *userStyleSheet;
- (void)_refreshUserStyleSheet;
- (void)connectionDidClose:(id)arg1;
- (void)connection:(id)arg1 didReceiveMessageWithName:(id)arg2 body:(id)arg3;
- (void)processGroup:(id)arg1 didCreateConnectionToWebProcessPlugIn:(id)arg2;
- (id)processGroup;
- (void)dealloc;
- (id)initWithMaxProcessCount:(unsigned long long)arg1 groupName:(id)arg2;
- (id)init;

@end

@interface MUIWebFindController : NSObject <NSTextFinderClient, NSUserInterfaceValidations>
{
    MUIWKViewController *_viewController;
    NSTextFinder *_textFinder;
    BOOL _findIsRequested;
    NSString *_currentFindString;
    unsigned long long *_currentMaxResults;
    unsigned long long _currentFindOptions;
    NSProgress *_currentProgress;
    id _resultCollector;
    NSMutableArray *_findStringMatchesCompletionHandlers;
    NSMutableArray *_getImageForMatchResultCompletionHandlers;
}

@property(retain, nonatomic) NSMutableArray *getImageForMatchResultCompletionHandlers; // @synthesize getImageForMatchResultCompletionHandlers=_getImageForMatchResultCompletionHandlers;
@property(retain, nonatomic) NSMutableArray *findStringMatchesCompletionHandlers; // @synthesize findStringMatchesCompletionHandlers=_findStringMatchesCompletionHandlers;
@property(copy, nonatomic) id resultCollector; // @synthesize resultCollector=_resultCollector;
@property(nonatomic) BOOL findIsRequested; // @synthesize findIsRequested=_findIsRequested;
@property(retain, nonatomic) NSProgress *currentProgress; // @synthesize currentProgress=_currentProgress;
@property(nonatomic) unsigned long long currentFindOptions; // @synthesize currentFindOptions=_currentFindOptions;
@property(nonatomic) unsigned long long *currentMaxResults; // @synthesize currentMaxResults=_currentMaxResults;
@property(copy, nonatomic) NSString *currentFindString; // @synthesize currentFindString=_currentFindString;
- (void)generateImageForMatch:(id)arg1 completionHandler:(id)arg2;
- (void)scrollFindMatchToVisible:(id)arg1;
- (void)getSelectedText:(id)arg1;
- (id)documentContainerView;
- (void)selectFindMatch:(id)arg1 completionHandler:(id)arg2;
- (void)_addFindStringMatchesCompletionHandler;
- (void)_beginFind;
- (void)findMatchesForString:(id)arg1 findOptions:(unsigned long long)arg2 maxResults:(unsigned long long)arg3 resultCollector:(id)arg4;
@property(readonly, nonatomic) NSTextFinder *textFinder;
- (void)performTextFinderAction:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) MUIWKViewController *viewController;
- (void)dealloc;
- (struct WKPageFindMatchesClient)findMatchesClient;

// Remaining properties
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) NSArray *visibleCharacterRanges;

@end

@interface _MUIWebFindMatch : NSObject <NSTextFinderAsynchronousDocumentFindMatch>
{
    int _matchIndex;
    NSView *_containingView;
    NSArray *_textRects;
    MUIWebFindController *_findController;
}

@property(nonatomic) int matchIndex; // @synthesize matchIndex=_matchIndex;
@property(nonatomic) MUIWebFindController *findController; // @synthesize findController=_findController;
@property(retain, nonatomic) NSArray *textRects; // @synthesize textRects=_textRects;
@property(retain, nonatomic) NSView *containingView; // @synthesize containingView=_containingView;
- (void)generateTextImage:(id)arg1;
- (void)dealloc;

@end

@interface MUIWKView : WKView <NSDraggingDestination, NSDraggingSource, QLPreviewPanelDataSource, QLPreviewPanelDelegate, QLSeamlessCloserDelegate, QLSeamlessOpenerDelegate>
{
    BOOL _isDragging;
    BOOL _isDraggingAttachments;
    NSArray *_attachmentControllersToQuicklook;
    MUIWKViewController *_controller;
    NSDraggingSession *_dragSession;
    WKProcessGroup *_processGroup;
}

@property(retain, nonatomic) WKProcessGroup *processGroup; // @synthesize processGroup=_processGroup;
@property(nonatomic) BOOL isDraggingAttachments; // @synthesize isDraggingAttachments=_isDraggingAttachments;
@property(nonatomic) BOOL isDragging; // @synthesize isDragging=_isDragging;
@property(retain, nonatomic) NSDraggingSession *dragSession; // @synthesize dragSession=_dragSession;
@property(nonatomic) MUIWKViewController *controller; // @synthesize controller=_controller;
@property(retain, nonatomic) NSArray *attachmentControllersToQuicklook; // @synthesize attachmentControllersToQuicklook=_attachmentControllersToQuicklook;
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (void)seamlessOpener:(id)arg1 failedToOpenItems:(id)arg2 withError:(id)arg3;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (BOOL)quickLookAttachmentControllers:(id)arg1;
- (void)_displayAlertForUndownloadedAttachments:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)printOperationWithPrintInfo:(id)arg1;
- (id)selectionAndClickInformation;
- (id)selectedAndClickedAttachmentControllersFromSelectionAndClickInformation:(id)arg1;
- (id)_allSelectedAndClickedAttachmentControllers;
- (struct CGRect)_rectFromComponentString:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (void)viewDidMoveToSuperview;
- (BOOL)autoscroll:(id)arg1;
- (void)updateLayer;
- (BOOL)resignFirstResponder;
- (BOOL)canBecomeKeyView;
- (id)defaultStringForToolTip:(long long)arg1 view:(id)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)showWebInspector:(id)arg1;
- (BOOL)_shouldUseTiledDrawingArea;
- (void)scrollWheel:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 processGroup:(id)arg2 browsingContextGroup:(id)arg3;

@end

@interface MUIWKViewController : NSViewController <WKBrowsingContextLoadDelegate>
{
    BOOL _editable;
    BOOL _ignoreKVOHTMLChanges;
    MUIWebDocumentView *_webDocumentView;
    MUIWebDocumentViewGroup *_viewGroup;
    NSMapTable *_attachmentControllersByAttachment;
    MUIJSNotificationCenter *_jsNotificationCenter;
    NSMutableArray *_pendingRequests;
    MUIContextMenuController *_contextMenuController;
    MUIWebFindController *_findController;
    id _generateWebDocumentCompletionHandler;
    id _cacheDisplayInRectCompletionHandler;
    NSString *_bundleReplyMessageString;
    id <NSObject><NSSecureCoding> _bundleReplyMessageData;
    NSPort *_javascriptPort;
    NSPort *_bundleMessageReplyPort;
}

+ (id)newReplyMessageNameForMessageName:(id)arg1;
@property(readonly, nonatomic) NSPort *bundleMessageReplyPort; // @synthesize bundleMessageReplyPort=_bundleMessageReplyPort;
@property(readonly, nonatomic) NSPort *javascriptPort; // @synthesize javascriptPort=_javascriptPort;
@property(retain, nonatomic) id <NSObject><NSSecureCoding> bundleReplyMessageData; // @synthesize bundleReplyMessageData=_bundleReplyMessageData;
@property(copy, nonatomic) NSString *bundleReplyMessageString; // @synthesize bundleReplyMessageString=_bundleReplyMessageString;
@property(copy, nonatomic) id cacheDisplayInRectCompletionHandler; // @synthesize cacheDisplayInRectCompletionHandler=_cacheDisplayInRectCompletionHandler;
@property(copy, nonatomic) id generateWebDocumentCompletionHandler; // @synthesize generateWebDocumentCompletionHandler=_generateWebDocumentCompletionHandler;
@property(retain, nonatomic) MUIWebFindController *findController; // @synthesize findController=_findController;
@property(retain, nonatomic) MUIContextMenuController *contextMenuController; // @synthesize contextMenuController=_contextMenuController;
@property(nonatomic) BOOL ignoreKVOHTMLChanges; // @synthesize ignoreKVOHTMLChanges=_ignoreKVOHTMLChanges;
@property(readonly, nonatomic) NSMutableArray *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(retain, nonatomic) MUIJSNotificationCenter *jsNotificationCenter; // @synthesize jsNotificationCenter=_jsNotificationCenter;
@property(retain, nonatomic) NSMapTable *attachmentControllersByAttachment; // @synthesize attachmentControllersByAttachment=_attachmentControllersByAttachment;
@property(retain, nonatomic) MUIWebDocumentViewGroup *viewGroup; // @synthesize viewGroup=_viewGroup;
@property(nonatomic) MUIWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
- (void)_didReceiveCacheDisplayData:(id)arg1;
- (void)cancelPendingCacheDisplayInRect;
- (void)cacheDisplayInRect:(struct CGRect)arg1 completionHandler:(id)arg2;
- (void)_noteFileSystemChanged:(id)arg1;
- (void)setAttachments:(id)arg1 asHidden:(BOOL)arg2 completionHandler:(id)arg3;
- (void)exportAttachmentsToiPhoto:(id)arg1;
- (BOOL)canExportAttachmentsToiPhoto:(id)arg1;
- (id)_imageAttachments;
- (void)saveAttachments:(id)arg1 toDirectory:(id)arg2;
- (void)_saveAttachment:(id)arg1 toDirectory:(id)arg2 filename:(id)arg3;
- (void)saveAttachmentsWithPanel:(id)arg1;
- (void)_completeWebDocumentPasteboardType;
- (void)_didGenerateSelectionWebDocument:(id)arg1;
- (void)generateSelectionWebDocument:(id)arg1;
- (void)_didGenerateStyleInlinedWebDocument:(id)arg1;
- (void)generateStyleInlinedWebDocument:(id)arg1;
- (void)removeAttachment:(id)arg1 completionHandler:(id)arg2;
- (void)_attachmentDeleted:(id)arg1;
- (void)_documentContentChanged:(id)arg1;
- (id)_stringByRemovingCharactersInSet:(id)arg1 fromString:(id)arg2;
- (void)appendAttributedString:(id)arg1 completionHandler:(id)arg2;
- (void)appendString:(id)arg1 completionHandler:(id)arg2;
- (void)appendAttachment:(id)arg1 completionHandler:(id)arg2;
@property(nonatomic) BOOL editable;
- (BOOL)performDragOperation:(id)arg1;
- (void)_ddExternalUIRequested:(id)arg1;
- (id)sendMessageToWebProcessControllerSynchronously:(id)arg1 messageBody:(id)arg2;
- (void)sendMessageToWebProcessController:(id)arg1 messageBody:(id)arg2;
- (void)receiveMessageFromWebProcessController:(id)arg1 messageBody:(id)arg2 wkObject:(id)arg3;
- (void)_runPendingAsyncRequests;
- (void)_evaluateAsyncRequest:(id)arg1;
- (id)evaluateJavascriptSynchronously:(id)arg1;
- (void)evaluateJavascript:(id)arg1 completionHandler:(id)arg2;
- (void)_didLoadMainFrameTimeout;
- (void)_webProcessDidPaintContent:(id)arg1;
- (void)_webProcessDidLayoutContent:(id)arg1;
- (void)browsingContextControllerDidFinishLoad:(id)arg1;
- (void)_updateDebuggingPreferences;
- (void)_updateFontPreferences;
- (void)_updateImageScaling;
- (void)_reloadDocument;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (id)view;
- (void)loadView;
- (void)tearDown;
- (void)dealloc;
- (void)_muiWKViewControllerCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface NSView (MUIAdditions)
- (void)mui_cancelSynchronousLayout;
- (void)mui_performLayoutSynchronously;
- (void)mui_prepareToLayoutSynchronously:(id)arg1;
- (void)mui_cancelAnimation;
- (void)mui_performAnimation;
- (void)mui_prepareToAnimate:(id)arg1;
- (void)mui_didCacheDisplayInRect;
- (void)mui_prepareToCacheDisplayInRect:(struct CGRect)arg1 completionHandler:(id)arg2;
- (void)mui_cacheDisplayInRect:(struct CGRect)arg1 completionHandler:(id)arg2;
@end


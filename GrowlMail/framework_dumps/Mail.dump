/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "MailFramework.dump"
#import "MailCoreFramework.dump"

#pragma mark Named Structures

struct QuotaSimpleSortDescriptor {
    void *comparator;
    char ascending;
};

struct menuItemInfo {
    long long _field1;
    long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    double top;
    double left;
    double bottom;
    double right;
} CDStruct_3c058996;

#pragma mark -

/*
 * File: /Applications/Mail.app/Contents/MacOS/Mail
 * UUID: 1FFE9444-794D-31F2-8BC2-9AA2301B5647
 * Arch: x86_64
 *       Source version: 1812.0.0.0.0
 *       Minimum Mac OS X version: 10.9.0
 *       SDK version: 10.9.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@protocol AccountInfoTabOwner <NSObject>
- (id)view;
- (void)accountInfoWillShowView:(id)arg1;
- (void)accountInfoWillHideView:(id)arg1;
@end

@protocol AccountStatusDataSourceDelegate <NSObject>

@optional
- (void)configureMenuItem:(id)arg1 forAccount:(id)arg2;
- (void)showConnectionDoctor:(id)arg1;
- (void)editServerList:(id)arg1 selectedAccount:(id)arg2;
- (void)toggleAccountLock:(id)arg1;
- (void)addServer:(id)arg1;
- (void)setSelectedAccount:(id)arg1;
@end

@protocol AssistantDelegate <NSObject>
- (void)assistantDidFinish:(id)arg1;
@end

@protocol ClippedItemsIndicatorDelegate <NSObject>
- (id)menuItemsForClippedItemsIndicator:(id)arg1;
@end

@protocol ComposeViewControllerDelegate <NSObject>
- (void)composeViewDidSaveSuccessfully:(BOOL)arg1;
- (BOOL)composeViewShouldAllowUserToIgnoreSaveFailure;
- (void)composeViewDidSend;
- (void)composeViewFinishedEditing;
@end

@protocol ConversationViewDelegate <NSObject>

@optional
- (void)conversationView:(id)arg1 didEndScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didBeginScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didDeselectIndex:(unsigned long long)arg2;
- (void)conversationView:(id)arg1 didSelectIndex:(unsigned long long)arg2;
- (void)conversationView:(id)arg1 didRemoveCellView:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)conversationView:(id)arg1 didAddCellView:(id)arg2 atIndex:(unsigned long long)arg3;
- (double)conversationView:(id)arg1 initialHeightOfCellAtIndex:(unsigned long long)arg2;
@end

@protocol DOMEventListener <NSObject>
- (void)handleEvent:(id)arg1;
@end

@protocol DynamicErrorWindowDelegate <NSObject>
- (unsigned long long)helpTopicForDiagnosis:(long long)arg1;
- (void)rightActionSelectedWithDiagnosis:(long long)arg1;
- (void)leftActionSelectedWithDiagnosis:(long long)arg1;
- (id)rightButtonTextForErrorDiagnosis:(long long)arg1;
- (id)leftButtonTextForErrorDiagnosis:(long long)arg1;
- (id)errorDescriptionForErrorDiagnosis:(long long)arg1;
- (id)errorMessageForErrorDiagnosis:(long long)arg1;
- (BOOL)displayIndeterminateProgress;
@end

@protocol EditingMessageWebViewDelegate <NSObject>
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (BOOL)selectionIsInList;
- (void)removeSelectedLink;
- (void)editLink;
- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)allowsRichText;
- (BOOL)allowQuoting;

@optional
- (void)webViewWillInsertContentsOfWebpage:(id)arg1;
- (BOOL)webViewShouldReplaceSelectionWithContentsOfWebpage:(id)arg1;
- (void)webViewMainDocumentBaseURIDidChange:(id)arg1;
- (BOOL)webView:(id)arg1 canInsertFromPasteboard:(id)arg2 forDrag:(BOOL)arg3;
- (BOOL)webView:(id)arg1 canInsertFromDraggingInfo:(id)arg2;
- (id)webView:(id)arg1 shouldReplaceSelectionWithWebArchive:(id)arg2 givenAction:(int)arg3;
- (void)webView:(id)arg1 willRemoveMailAttachment:(id)arg2;
- (void)webView:(id)arg1 didAddMailAttachment:(id)arg2;
- (void)webView:(id)arg1 willReplaceSelectionWithFragment:(id *)arg2 pasteboard:(id)arg3 type:(id)arg4 options:(int *)arg5;
- (void)webViewDidEndLiveResize:(id)arg1;
- (void)webViewWillStartLiveResize:(id)arg1;
@end

@protocol FavoritesMenuDelegateProtocol

@optional
- (void)menuDidClose;
- (void)menuDidPresent;
- (void)menuDidSelectMailbox:(id)arg1;
- (id)selectedMailbox;
@end

@protocol FlaggedStatusToolbarItemDelegate <NSObject>

@optional
- (void)toggleFlaggedStatus:(BOOL)arg1;
- (BOOL)validateFlaggedStatusToolbarItem:(id)arg1;
@end

@protocol HeaderLayoutManagerDelegate <NSLayoutManagerDelegate>

@optional
- (void)layoutManager:(id)arg1 textContainerChangedGeometry:(id)arg2;
@end

@protocol IMAPUserAgent <NSObject>
- (BOOL)doParentalControlProcessingForMessage:(id)arg1;
- (BOOL)addInvitationsToCalendarAutomatically;
- (void)addInvitationsToCalendarFromMessages:(id)arg1;
- (id)headersRequiredForParentalControl;
- (id)headersRequiredForRouting;
@end

@protocol ImageResizerDelegate
- (void)imageResizer:(id)arg1 didFinishResizingWithResultCode:(long long)arg2;
@end

@protocol MCActivityTarget <NSObject>

@optional
- (BOOL)isSmartMailbox;
- (id)displayName;
@end

@protocol MCConnectionLogging <NSObject>
- (void)flushLog;
- (void)logBytes:(const void *)arg1 length:(unsigned long long)arg2;
@end

@protocol MCMessageDataSource <MCActivityTarget, NSCopying>
@property(readonly) BOOL isReadOnly;
- (id)uniquedString:(id)arg1;
- (void)flushAllCaches;
- (void)invalidateMessage:(id)arg1;
- (void)sendResponseType:(BOOL)arg1 forMeetingMessage:(id)arg2;
- (id)routeMessages:(id)arg1;
- (void)doCompact;
- (BOOL)canCompact;
- (id)undeleteMessages:(id)arg1 movedToStore:(id)arg2 newMessageIDs:(id)arg3;
- (void)undeleteMessages:(id)arg1;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (void)saveSnippetsForMessages:(id)arg1;
- (id)snippetsForMessages:(id)arg1;
- (BOOL)supportsSnippets;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3 forMessage:(id)arg4;
- (id)attachmentsDirectoryForMessage:(id)arg1;
- (void)setColor:(id)arg1 highlightTextOnly:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3 userRecorded:(BOOL)arg4;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2;
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;
- (id)async_setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)dataForMimePart:(id)arg1;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
- (id)fullBodyDataForMessage:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1;
- (id)headersForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headersForMessage:(id)arg1;
- (id)messageForMessageID:(id)arg1;
- (id)mailbox;
- (id)account;

@optional
- (id)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)async_deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
@end

@protocol MCUserAgent <NSObject>
- (id)localAttachmentFilesDirectory;
- (id)junkStringFromHTMLData:(id)arg1 textEncodingName:(id)arg2 context:(id)arg3;
- (long long)junkMailBehavior;
- (void)setIsInTimeMachineMode:(BOOL)arg1;
- (BOOL)isInTimeMachineMode;
@end

@protocol MFAddProgressMonitor <NSObject>
- (void)setFractionDone:(double)arg1;
@end

@protocol MFLibraryUpgraderDelegate <NSObject>
- (void)upgrader:(id)arg1 didFailWithError:(id)arg2;
- (void)upgraderDidFinish:(id)arg1;
@end

@protocol MFMessageSortContext <NSObject>
- (long long)compareByNumberMessage:(id)arg1 andMessage:(id)arg2 sortedAscending:(BOOL)arg3;
@end

@protocol MFMessageSortingValueDelegate
- (unsigned int)sortingMessageFlagsForMessage:(id)arg1;
- (unsigned long long)sortingSizeForMessage:(id)arg1;
@end

@protocol MFUIMailbox <NSObject>
@property int type;
- (BOOL)isDescendantOfMailboxWithType:(int)arg1;
- (BOOL)isPlaceholder;
- (id)accountURLString;
- (id)account;
- (BOOL)isSmartMailbox;
- (BOOL)isStore;
- (id)children;
- (BOOL)hasChildren;
- (unsigned long long)numberOfChildren;
- (unsigned long long)displayCount;
- (BOOL)isContainer;
- (id)extendedDisplayName;
- (id)displayName;
- (id)persistentIdentifier;
@end

@protocol MFUserAgent <NSObject>
- (void)informUserOfBusyDatabaseWithRecoverer:(id)arg1 diagnosis:(long long *)arg2;
- (void)informUserOfIOErrorWithStateIn:(long long *)arg1;
- (BOOL)openTemporaryAttachments:(id)arg1 applicationBundle:(id)arg2;
- (void)relaunchAndQuitWithAdditionalArguments:(id)arg1;
- (void)relaunchAndQuit;
- (BOOL)isTerminating;
- (void)storeBeingInvalidated:(id)arg1;
- (long long)queryUserForBigMessageAction:(id)arg1;
- (long long)runAlertPanelWithTitle:(id)arg1 firstButtonTitle:(id)arg2 secondButtonTitle:(id)arg3 thirdButtonTitle:(id)arg4 message:(id)arg5;
- (BOOL)queryUserWithMessageText:(id)arg1 informativeText:(id)arg2 defaultButton:(id)arg3 alternateButton:(id)arg4;
- (void)informUserOfError:(id)arg1;
- (void)resetSuppressedAccount:(id)arg1;
- (BOOL)promptForPassword:(id)arg1;
@end

@protocol MTMMailboxControllerProtocol <NSObject>
@property(readonly) NSURL *tocURL;
@property(readonly) NSURL *mailLibraryURL;
- (id)revisionIDForURL:(id)arg1;
- (id)accountForAccountID:(id)arg1;
- (id)messageWithID:(id)arg1;
- (void)mailboxListWasUpdated:(id)arg1;
- (void)mailboxListWillBeUpdated:(id)arg1;
@end

@protocol MUITokenAddressDelegate <NSObject>
- (BOOL)tokenAddressIsVIP:(id)arg1;
- (void)tokenAddress:(id)arg1 didSelectAction:(long long)arg2;
@end

@protocol MVMailboxSelectionOwner <NSObject>
- (id)mailboxSelectionWindow;
- (void)revealMailbox:(id)arg1;
- (BOOL)sectionIsExpanded:(id)arg1;
- (BOOL)mailboxIsExpanded:(id)arg1;
- (void)selectPathsToMailboxes:(id)arg1;
- (BOOL)isSelectedMailboxSpecial;
- (id)sortedSectionItemsForTimeMachine;
- (id)selectedMailbox;
- (id)selectedMailboxes;

@optional
- (void)didCloseContextMenu:(id)arg1;
- (void)willShowContextMenu:(id)arg1;
- (id)expandedItems;
@end

@protocol MVSelectionOwner
- (BOOL)transferSelectionToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (id)messageStore;
- (id)messageThatUserIsProbablyReading;
- (id)currentDisplayedMessage;
- (void)selectMessages:(id)arg1;
- (id)selectionExpandingThreadsAndHiddenCopies:(BOOL)arg1;
- (id)selection;
@end

@protocol MVTerminationHandler <NSObject>
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;

@optional
- (BOOL)needsToPromptUserBeforeTermination:(id)arg1;
@end

@protocol MailFullScreenWindowDelegate <NSWindowDelegate>
- (void)restoreFrame;
- (BOOL)mailFullScreenWindowShouldClose:(id)arg1;
- (id)windowForMailFullScreen;
@end

@protocol MailTableViewDelegateDelegate <NSObject>

@optional
- (id)tableHeaderViewGetDefaultMenu:(id)arg1;
@end

@protocol MailboxOutlineItemControllerDelegate <NSObject>
- (void)mailbox:(id)arg1 nameUpdated:(id)arg2;
- (unsigned long long)badgeCountForItem:(id)arg1;
@end

@protocol MailboxOutlineItemViewDelegate <NSObject>
- (id)mailboxOutlineItemViewShouldDisplayImage:(id)arg1;
@end

@protocol MailboxTextFieldDelegate <NSTextFieldDelegate>

@optional
- (void)mailboxTextFieldEndedEditingSession;
- (void)mailboxTextFieldBeganEditingSession;
@end

@protocol MailboxesOutlineViewControllerDelegate <NSObject>
- (long long)viewerNumber;
- (void)focusMessages;
- (void)selectAllMessages;

@optional
- (void)mailboxSelectionChanged:(id)arg1;
@end

@protocol MailboxesOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (void)outlineViewDidReload:(id)arg1;
- (void)setFirstResponderAfterMouseDownOnOutlineView:(id)arg1;
- (void)selectAllInOutlineView:(id)arg1;
@end

@protocol MessageDeletionTransfer
- (void)beginTransfer;
- (BOOL)canBeginTransfer;
@end

@protocol MessageMall <MCMessageDataSource>
- (BOOL)supportsSearching;
- (unsigned int)messageFlagsForMessage:(id)arg1 size:(unsigned long long *)arg2 appliedFlagColors:(id *)arg3;
- (unsigned long long)sizeForMessage:(id)arg1;
- (id)allMessagesForConversationID:(long long)arg1;
- (id)primaryMessagesForConversationID:(long long)arg1;
- (BOOL)hasNonDuplicateRelatedMessages:(id)arg1;
- (id)allRelatedMessagesForMessage:(id)arg1;
- (id)unfilteredThreadForMessage:(id)arg1;
- (id)filteredThreadForMessage:(id)arg1;
- (id)parentOfMessage:(id)arg1;
- (id)repliesToMessage:(id)arg1;
- (void)addMessagesInSameThreadAsMessage:(id)arg1 toSet:(id)arg2;
- (void)routeMessages:(id)arg1 fromMailboxes:(id)arg2;
- (void)reload:(id)arg1;
- (void)closeAllThreads;
- (void)openAllThreads;
- (BOOL)openThreadsWithIDs:(id)arg1;
- (id)quietlyCloseThreadAtIndex:(unsigned long long)arg1;
- (BOOL)closeThreadAtIndex:(long long)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (id)quietlyOpenThreadAtIndex:(unsigned long long)arg1;
- (BOOL)openThreadAtIndex:(long long)arg1 andSelectMessage:(id)arg2 animate:(BOOL)arg3;
- (void)prepareToDisplayThread:(id)arg1;
- (void)toggleThreadedMode;
- (void)setIsInThreadedMode:(BOOL)arg1;
- (BOOL)isInThreadedModeExcludingSearch;
- (BOOL)isInThreadedMode;
- (void)setDisplayingToColumn:(BOOL)arg1;
- (BOOL)displayingToColumn;
- (void)sortMessages:(id)arg1;
- (BOOL)isSortedAscending;
- (id)sortOrder;
- (void)setSortOrder:(id)arg1 ascending:(BOOL)arg2;
- (void)setIncludeDeleted:(BOOL)arg1;
- (BOOL)includeDeleted;
- (id)expandedSelectedMailboxesAllowingSearch;
- (id)stores;
- (id)expandedSelectedMailboxes;
- (id)selectedMailboxes;
- (id)allMailboxes;
- (void)setMailboxes:(id)arg1;
- (BOOL)deletedFlagForMessage:(id)arg1;
- (id)unhideMessages:(id)arg1;
- (id)hideMessages:(id)arg1;
- (void)doCompact;
- (BOOL)canCompact;
- (void)rebuildTableOfContentsAsynchronously;
- (BOOL)canRebuild;
- (BOOL)isOpened;
- (BOOL)isReadOnly;
- (id)messageForMessageID:(id)arg1;
- (unsigned long long)totalCount;
- (unsigned long long)unreadCount;
- (id)smartMailboxMemberMessagesForMessages:(id)arg1;
- (BOOL)filteredListIncludesAllMessages;
- (id)originalOfMessage:(id)arg1;
- (id)messagesIncludingHiddenCopies:(id)arg1;
- (void)hideAllCopiesOfMessages:(id)arg1;
- (void)showAllCopiesOfMessage:(id)arg1;
- (id)messageIDsToShowAllCopiesOf;
- (unsigned int)loadOptions;
- (BOOL)messageIsPartOfAThread:(id)arg1;
- (id)threadForMessageID:(id)arg1;
- (void)setFocusedMessages:(id)arg1;
- (BOOL)isFocused;
- (void)clearSearch;
- (void)clearFilteredMessagesAndUpdateImmediately:(BOOL)arg1;
- (void)clearFilteredMessages;
- (id)filteredThreads;
- (unsigned long long)indexOfMessage:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1 isChildOfThread:(char *)arg2;
- (id)numberForMessage:(id)arg1;
- (unsigned long long)indexOfFilteredDocument:(id)arg1;
- (unsigned long long)indexOfFilteredMessage:(id)arg1;
- (id)filteredMessagesInRange:(struct _NSRange)arg1;
- (id)filteredMessages;
- (id)filteredMessagesAtIndexes:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1;
- (unsigned long long)filteredMessagesCount;
- (void)unregisterForNotifications;

@optional
- (void)clearPreviousQueryString;
- (int)currentSearchTarget;
- (long long)currentSearchField;
- (BOOL)isStillSearching;
- (BOOL)isShowingSearchResults;
- (void)searchForString:(id)arg1 in:(int)arg2 withOptions:(long long)arg3;
- (void)searchForSuggestions:(id)arg1 in:(int)arg2 withOptions:(long long)arg3 fromSuggestionsSearchField:(id)arg4;
@end

@protocol MessageTransferDelegate <NSObject>
- (void)messageTransferDidUndoTransferOfMessages:(id)arg1;
- (void)messageTransferDidTransferMessages:(id)arg1;
- (void)unhideMessagesForMessageTransfer:(id)arg1;
- (void)hideMessagesForMessageTransfer:(id)arg1;
- (id)undoManagerForMessageTransfer:(id)arg1;
- (void)transfer:(id)arg1 didCompleteWithError:(id)arg2;
@end

@protocol MessageViewerSearchFieldFocusDelegate <NSObject>
- (void)searchFieldDidEndSearching:(id)arg1;
@end

@protocol NSInspectorBarClient <NSObject>
- (id)inspectorBarItemIdentifiers;
@end

@protocol NSInspectorBarDelegate <NSObject>

@optional
- (id)inspectorBar:(id)arg1 shouldLayoutItem:(id)arg2;
- (id)inspectorBar:(id)arg1 itemForIdentifier:(id)arg2;
@end

@protocol NSInspectorBarItemController <NSObject>
- (id)viewForInspectorBarItem:(id)arg1;
@end

@protocol NSScrollViewDelegate <NSObject>

@optional
- (void)scrollView:(id)arg1 didChangePresentationOrigin:(struct CGPoint)arg2 active:(BOOL)arg3;
- (double)scrollView:(id)arg1 pageAlignedOriginOnAxis:(long long)arg2 forProposedDestination:(double)arg3 currentOrigin:(double)arg4 initialOrigin:(double)arg5 velocity:(double)arg6;
- (void)didEndScrollInScrollView:(id)arg1;
- (void)didScrollInScrollView:(id)arg1;
- (void)didBeginScrollInScrollView:(id)arg1;
@end

@protocol NSTokenAttachmentDelegate

@optional
- (id)menuForTokenAttachment:(id)arg1;
- (BOOL)hasMenuForTokenAttachment:(id)arg1;
- (BOOL)tokenAttachment:(id)arg1 doubleClickedInRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (id)tokenAttachment:(id)arg1 shouldUseTokenAttachmentCell:(id)arg2;
@end

@protocol QLPreviewPanelDataSource
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
@end

@protocol QLSeamlessOpenerDelegate <NSObject>

@optional
- (id)seamlessOpener:(id)arg1 transientWindowForItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transientImageAtFrame:(struct CGRect *)arg2 forItem:(id)arg3;
- (void)seamlessOpener:(id)arg1 failedToOpenItems:(id)arg2 withError:(id)arg3;
- (void)seamlessOpener:(id)arg1 openedItem:(id)arg2 seamlessly:(BOOL)arg3;
- (id)seamlessOpenerTransientWindow:(id)arg1 level:(long long *)arg2;
- (int)seamlessOpener:(id)arg1 supportForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourceBubbleForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
@end

@protocol RichMessageListSortViewProtocol <NSObject>
- (void)sortViewDidMouseDown:(id)arg1;
@end

@protocol SGTSearchFieldQueryScopeDelegate <NSObject>
- (id)searchFieldWidenScopeMenuSpinnerTitleString:(id)arg1;
- (id)searchFieldWidenScopeMenuItemTitleString:(id)arg1;
- (id)searchFieldWidenScopeMenuTitleString:(id)arg1;
- (void)searchFieldWidenQueryScope:(id)arg1;
- (BOOL)searchField:(id)arg1 hasResultsForQuery:(id)arg2;
- (BOOL)searchFieldUsesRestrictedQueryScope:(id)arg1;
@end

@protocol SearchScopeDelegate <NSObject>
- (void)saveSearch:(id)arg1;
- (void)performSearch:(id)arg1;
- (id)selectedMailboxes;
@end

@protocol SlidingAnimationDelegate <NSObject>

@optional
- (void)finishedSlidingAnimation:(id)arg1;
@end

@protocol SoundPopUpButtonDelegate <NSObject>
- (id)titleForSoundFile:(id)arg1;
@end

@protocol StackDataSource
- (void)stackController:(id)arg1 loadDataForItem:(id)arg2 inLayer:(id)arg3;
- (BOOL)stackController:(id)arg1 isDataLoadedForItem:(id)arg2 inLayer:(id)arg3;
- (id)stackController:(id)arg1 layerForItem:(id)arg2;
- (id)stackContainerView;
- (id)stackContainerLayerForStackController:(id)arg1;
@end

@protocol StackDelegate <NSObject>

@optional
- (void)stackController:(id)arg1 willRemoveLayerForItem:(id)arg2;
- (void)stackController:(id)arg1 willDisplayLayer:(id)arg2 forItem:(id)arg3;
- (void)stackController:(id)arg1 willStackLayer:(id)arg2 forItem:(id)arg3;
- (void)stackController:(id)arg1 dataLoadTimedOutInLayer:(id)arg2 forItem:(id)arg3;
- (void)stackControllerDidStopAnimatingLayers:(id)arg1;
- (void)stackControllerWillStartAnimatingLayers:(id)arg1;
- (void)stackControllerDidStopStackingLayers:(id)arg1;
- (void)stackControllerWillStartStackingLayers:(id)arg1;
@end

@protocol StackElementDelegate
- (void)stackElement:(id)arg1 targetStateDidChangeFrom:(int)arg2 to:(int)arg3;
- (void)stackElement:(id)arg1 currentStateDidChangeFrom:(int)arg2 to:(int)arg3;
- (void)stackElement:(id)arg1 willRemoveLayer:(id)arg2;
- (id)layerForStackElement:(id)arg1;
- (BOOL)stackIsTerminating;
- (struct CGSize)stackCenterOffset;
- (id)stackContainerLayer;
@end

@protocol StackRevealGroupDelegate <NSObject>

@optional
- (id)stackContainerView;
- (id)stackContainerLayer;
- (void)stackRevealGroupDidFinish:(id)arg1;
- (void)stackRevealGroupDidReveal:(id)arg1;
- (void)stackRevealGroupWillReveal:(id)arg1;
@end

@interface AccountCell : NSActionCell
{
    NSString *_subtitle;
    MFMailAccount *_account;
    NSImage *_icon;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;
- (id)title;
- (id)subtitle;
- (void)setSubtitle:(id)arg1;
- (void)setAccount:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;

@end

@interface AccountDetails : NSObject
{
    NSTextField *_portNumberField;
    NSButton *_sslSwitch;
    SpecialMailboxes *_specialMailboxes;
    MFMailAccount *_account;
    Class _accountClass;
    MCAuthScheme *_authScheme;
    NSView *_detailView;
    NSButton *_autoFetch;
    NSPopUpButton *_authenticationPopup;
    NSTextField *_domainLabel;
    NSTextField *_domainField;
}

+ (id)accountDetailsNibName;
+ (id)accountDetailsForAccountClass:(Class)arg1;
@property(nonatomic) NSTextField *domainField; // @synthesize domainField=_domainField;
@property(nonatomic) NSTextField *domainLabel; // @synthesize domainLabel=_domainLabel;
@property(nonatomic) NSPopUpButton *authenticationPopup; // @synthesize authenticationPopup=_authenticationPopup;
@property(nonatomic) NSButton *sslSwitch; // @synthesize sslSwitch=_sslSwitch;
@property(nonatomic) NSButton *autoFetch; // @synthesize autoFetch=_autoFetch;
@property(nonatomic) NSTextField *portNumberField; // @synthesize portNumberField=_portNumberField;
@property(retain, nonatomic) NSView *detailView; // @synthesize detailView=_detailView;
- (void)_specialMailboxesDidChange:(id)arg1;
- (void)authenticationChanged:(id)arg1;
- (void)sslChanged:(id)arg1;
- (id)portFieldForSSLCheckBox:(id)arg1;
- (void)didDisplayTabViewItem:(id)arg1;
- (id)setupSpecialMailboxesUIFromValuesInAccount:(id)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (void)setupAccountFromValuesInSpecialMailboxesUI:(id)arg1;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;
- (void)_updateDomainUI;
- (void)setupAccountFromValuesInUI:(id)arg1 forValidation:(BOOL)arg2;
- (Class)accountClass;
- (void)dealloc;
- (id)init;
- (id)initWithAccountClass:(Class)arg1;

@end

@interface AuthSchemeBindingProxy : NSObject
{
    BOOL _isSeparator;
    MCAuthScheme *_authScheme;
}

+ (id)separatorProxy;
+ (id)noneProxy;
@property BOOL isSeparator; // @synthesize isSeparator=_isSeparator;
@property(retain) MCAuthScheme *authScheme; // @synthesize authScheme=_authScheme;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)name;
- (id)humanReadableName;
- (void)dealloc;
- (id)initWithAuthScheme:(id)arg1;
- (id)init;

@end

@interface AuthSchemeValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface AccountInfo : NSObject <NSTabViewDelegate, NSWindowDelegate>
{
    NSTabView *_tabView;
    NSPopUpButton *_accountPopup;
    NSTabViewItem *_mailboxListTab;
    NSTabViewItem *_outOfOfficeTab;
    AccountSummary *_summary;
    SpecialMailboxes *_specialMailboxes;
    NSView *_specialMailboxesView;
    Quota *_quota;
    OofPanelController *_oofController;
    IMAPMailboxes *_mailboxes;
    MFMailAccount *_account;
    NSMutableSet *_tabViewItemsThatHaveBeenSetup;
    struct CGRect _oldFrame;
    struct CGRect _newFrame;
    NSWindow *_window;
    NSView *_topView;
}

+ (void)showForAccount:(id)arg1 withTab:(id)arg2;
@property(retain, nonatomic) NSView *topView; // @synthesize topView=_topView;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)windowWillClose:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)_handleOofError:(id)arg1;
- (void)accountPopupChanged:(id)arg1;
- (void)_showWithTab:(id)arg1;
- (void)_specialMailboxesDidChange:(id)arg1;
- (void)_accountsDidChange:(id)arg1;
- (void)_commitSpecialMailboxesChanges;
- (void)_setupTabViewItem:(id)arg1 oldTabViewItem:(id)arg2;
- (id)_getOwnerFromIdentifier:(id)arg1;
- (void)_setAccount:(id)arg1 setupSelectedTab:(BOOL)arg2;
- (id)_selectedAccount;
- (void)_configureAccountPopupSelectingAccount:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithMailAccount:(id)arg1;

@end

@interface AccountPreferences : NSPreferencesModule <AccountStatusDataSourceDelegate, MVTerminationHandler, NSTableViewDataSource, NSTableViewDelegate, NSTabViewDelegate>
{
    NSMutableArray *_accounts;
    AccountDetails *_accountDetails;
    NSTabView *_detailTabView;
    NSTableView *_accountsTable;
    NSSegmentedControl *_addRemoveAccountControl;
    NSButton *_helpButton;
    NSButton *_enableAccountCheckbox;
    NSPopUpButton *_accountTypePopup;
    NSTextField *_accountTypeString;
    NSTextField *_accountName;
    NSTextField *_fullNameField;
    NSTextField *_emailAddressField;
    NSTextField *_username;
    NSTextField *_hostnameLabel;
    NSTextField *_hostname;
    NSTextField *_externalHostnameLabel;
    NSTextField *_externalHostname;
    NSTextField *_password;
    AccountStatusDataSource *_deliveryASDS;
    NSTextField *_deliveryAccountLabel;
    NSPopUpButton *_smtpAccountPopup;
    NSButton *_lockDeliveryAccountButton;
    NSView *_outlookWebAccessView;
    NSTextField *_outlookWebAccessServerName;
    NSTextField *_aliasLabel;
    NSPopUpButton *_aliasPopup;
    NSView *_tlsCertificatesView;
    NSPopUpButton *_tlsCertificatesPopup;
    NSButton *_ewsAutodiscoveryCheckbox;
    MFMailAccount *_accountBeingEdited;
    MFMailAccount *_accountBeingValidated;
    BOOL _accountBeingEditedWasEnabledWhenEditingStarted;
    BOOL _creatingNewAccount;
    BOOL _passwordFieldHasBeenTouched;
    long long _indexOfNewAccount;
    struct {
        unsigned int userWantsToQuit:1;
        unsigned int userWantsToClosePrefsPanel:1;
        unsigned int userWantsToChangeSelection:1;
        unsigned int userWantsToCreateNewAccount:1;
        unsigned int userWantsToOpenNewAccountAssistant:1;
    } _flags;
    NSIndexSet *_selectedRows;
    NSString *_selectedToolbarIdentifier;
    BOOL _ignoreTableViewSelectionCallbacks;
    BOOL _registeredForNotifications;
    BOOL _lastPopupSelectionWasAOS;
    NSMutableDictionary *_userEnteredInfo;
    NSTextView *_accountSupportURLField;
    NSTextField *_passwordLabel;
}

+ (id)ispAccountInfoOfSelectedItemInAccountTypePopup:(id)arg1;
+ (Class)accountClassOfSelectedItemInAccountTypePopup:(id)arg1;
+ (void)selectAccoutType:(Class)arg1 inTypePopup:(id)arg2;
+ (void)configureAccountTypePopUp:(id)arg1;
+ (void)editServerList:(id)arg1 selectedAccount:(id)arg2;
+ (void)focusAccount:(id)arg1;
+ (void)initialize;
+ (void)_addAccountType:(id)arg1 class:(Class)arg2;
@property(nonatomic) NSTextField *passwordLabel; // @synthesize passwordLabel=_passwordLabel;
- (Class)_classForNewAccount;
- (id)_nameForNewAccount;
- (void)controlTextDidChange:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_accountAtRow:(long long)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)editServerList:(id)arg1 selectedAccount:(id)arg2;
- (void)editAliases:(id)arg1;
- (void)setAlias:(id)arg1;
- (void)customAlias:(id)arg1;
- (void)accountTypeChanged:(id)arg1;
- (void)_accountTypePopupWillPopup:(id)arg1;
- (BOOL)_newSettingsAreValid;
- (void)_synchronizeAliasPopup;
- (void)_updateAliasPopup;
- (void)_updateAccountTypePopup;
- (void)_setupAccountFromValuesInUI:(id)arg1 forValidation:(BOOL)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)_saveAccountBeingEdited;
- (void)_runAccountDetailPanelForAccount:(id)arg1;
- (void)_setupUIForAccountBeingEdited;
- (void)_reloadDeliveryAccountPopup:(id)arg1;
- (void)_clearAccountUI;
- (void)_setUIElementsEnabled:(BOOL)arg1;
- (void)toggleEWSAutodiscovery:(id)arg1;
- (void)_tableDidResize:(id)arg1;
- (BOOL)_allowSwitchingAwayFromSelectedAccount;
- (void)_handleRequestToSwitchAwayFromSelectedAccountWithResponse:(BOOL)arg1;
- (BOOL)_isAccountInformationDirty;
- (void)editMailAccount:(id)arg1;
- (void)editAccount:(id)arg1;
- (void)_removeAccountBeingCreated;
- (void)addRemoveAccountClick:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleIncludeWhenCheckingForNewMail:(id)arg1;
- (void)toggleAccountEnabled:(id)arg1;
- (void)_saveAccountInfo;
- (BOOL)preferencesWindowShouldClose;
- (BOOL)moduleCanBeRemoved;
- (void)moduleWasInstalled;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)initializeFromDefaults;
- (id)init;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)_accountDidChange:(id)arg1;
- (void)_accountsDidChange:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;

@end

@interface _AccountDisplayCell : NSTextFieldCell
{
    AccountPreferences *_accountPreferences;
    NSTextFieldCell *_descriptionTextCell;
    NSTextFieldCell *_activeTextCell;
    NSImageCell *_imageCell;
    MFMailAccount *_account;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)willBeDisplayed;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setMailAccount:(id)arg1;
- (void)setAccountPreferences:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)_accountDisplayCellCommonInitWithAccountPreferences:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initWithAccountPreferences:(id)arg1;

@end

@interface AccountSetupManager : NSObject
{
}

+ (void)showAddAccountSheetInWindow:(id)arg1 completionHandler:(id)arg2;

@end

@interface AccountStatusDataSource : NSObject <NSMenuDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    NSPopUpButton *_popUp;
    NSTableView *_table;
    NSTextView *_ispInfoField;
    NSMutableDictionary *_progressIndicators;
    id <AccountStatusDataSourceDelegate> _delegate;
    MFAccountStatus *_statusProvider;
    NSArray *_accounts;
    MFAccount *_selectedAccount;
    MFAccount *_dynamicAccount;
    unsigned long long _accountFlags;
    BOOL _disabled;
    BOOL _usesOfflineStatusString;
    BOOL _allowNone;
    BOOL _allowEditServerList;
    BOOL _omitStatus;
    BOOL _selectedAccountIsLocked;
    BOOL _delegateWantsTableDataSourceInvocations;
    BOOL _allowAccountLocking;
    BOOL _beConservative;
}

+ (id)keyPathsForValuesAffectingTotalNumberOfAccounts;
@property BOOL beConservative; // @synthesize beConservative=_beConservative;
@property BOOL allowAccountLocking; // @synthesize allowAccountLocking=_allowAccountLocking;
@property BOOL delegateWantsTableDataSourceInvocations; // @synthesize delegateWantsTableDataSourceInvocations=_delegateWantsTableDataSourceInvocations;
@property BOOL selectedAccountIsLocked; // @synthesize selectedAccountIsLocked=_selectedAccountIsLocked;
@property BOOL omitStatus; // @synthesize omitStatus=_omitStatus;
@property BOOL allowEditServerList; // @synthesize allowEditServerList=_allowEditServerList;
@property BOOL allowNone; // @synthesize allowNone=_allowNone;
- (void)_updateUIWithAccountState:(id)arg1;
- (void)_updateUI;
- (void)_removeUI:(id)arg1;
- (void)_addUI:(id)arg1;
- (void)_reloadAccounts:(id)arg1;
- (void)_accountInfoDidChange:(id)arg1;
- (void)_didUpdateAccountStatus:(id)arg1;
- (void)_willRefreshStatusForAllAccounts:(id)arg1;
- (void)_tableViewDoubleClickAction:(id)arg1;
- (void)_removeAllIndicators:(id)arg1;
- (id)_accountForTableRow:(long long)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (unsigned long long)tableRowIndexOfAccount:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableViewWillHide:(id)arg1;
- (void)tableViewWillBecomeVisible:(id)arg1;
- (void)configureTable:(id)arg1 ispInfoField:(id)arg2 handleDoubleClick:(BOOL)arg3 useOfflineStatusString:(BOOL)arg4;
- (void)toggleAccountLock:(id)arg1;
- (void)editServerList:(id)arg1;
- (void)_selectAccount:(id)arg1;
- (void)_synchronizePopUpWithSelectedAccount;
- (void)_popUpButtonWillPopUp:(id)arg1;
- (void)_configureMenuItem:(id)arg1 forAccount:(id)arg2;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (unsigned long long)menuItemIndexOfAccount:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (double)popUpSizeToFitWidth:(id)arg1;
- (void)configurePopUpButton:(id)arg1;
- (void)disable;
- (void)enable;
- (void)refresh;
- (id)_displayStringWithOfflineStatusForAccount:(id)arg1;
- (void)_resetObservedAccounts;
- (void)setDelegate:(id)arg1;
@property(readonly) unsigned long long totalNumberOfAccounts;
- (void)selectAnyAccount;
@property(retain) MFAccount *selectedAccount;
@property(retain) MFAccount *dynamicAccount;
@property(copy) NSArray *accounts;
@property(retain) MFAccountStatus *statusProvider;
- (void)dealloc;
- (id)init;
- (id)initWithDelegate:(id)arg1 forAccounts:(unsigned long long)arg2;

@end

@interface AccountSummary : NSObject
{
    NSTextField *_accountDescription;
    NSTextField *_fullname;
    NSTextField *_emailAddress;
    NSTextField *_userName;
    NSTextField *_incomingServer;
    NSTextField *_incomingServerSSLMode;
    NSTextField *_outgoingServer;
    NSTextField *_outgoingServerSSLMode;
    NSTextField *_outlookServer;
    NSTextField *_outlookServerLabel;
    NSView *_view;
}

@property(retain, nonatomic) NSView *view; // @synthesize view=_view;
- (void)setupUIWithAccount:(id)arg1;
- (void)setupUIWithAccount:(id)arg1 deliveryAccount:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface HeaderTextContainer : NSTextContainer
{
    NSMutableSet *_views;
}

- (BOOL)containsPoint:(struct CGPoint)arg1;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 sweepDirection:(unsigned long long)arg2 movementDirection:(unsigned long long)arg3 remainingRect:(struct CGRect *)arg4;
- (BOOL)isSimpleRectangularTextContainer;
- (void)_viewFrameChanged:(id)arg1;
- (void)removeView:(id)arg1;
- (void)addView:(id)arg1;
- (void)dealloc;
- (id)initWithContainerSize:(struct CGSize)arg1;

@end

@interface ActivityAggregateView : NSView
{
    NSTextField *_nameTextField;
    NSTextField *_statusTextField;
    NSButton *_stopButton;
    NSProgressIndicator *_progressIndicator;
    double _nameTextFieldSpace;
    double _statusTextFieldSpace;
    double _progressIndicatorSpace;
    MCActivityAggregate *_activityAggregate;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateNameTextField;
- (void)awakeFromNib;
- (void)setActivityAggregate:(id)arg1;
- (id)activityAggregate;
- (void)dealloc;
- (void)_activityAggregateViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface ActivityProgressPanel : NSObject
{
    MCActivityMonitor *_monitor;
    NSTimer *_timer;
    NSPanel *_progressPanel;
    NSProgressIndicator *_progressBar;
    NSTextField *_statusMessageField;
}

@property(nonatomic) NSTextField *statusMessageField; // @synthesize statusMessageField=_statusMessageField;
@property(nonatomic) NSProgressIndicator *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) NSPanel *progressPanel; // @synthesize progressPanel=_progressPanel;
- (void)cancel:(id)arg1;
- (void)_activityEnded:(id)arg1;
- (void)_activityStarted:(id)arg1;
- (void)_updateProgressBar;
- (void)setStatusMessage:(id)arg1;
- (id)statusMessage;
- (void)setActivityMonitor:(id)arg1;
- (id)activityMonitor;
- (void)dealloc;
- (void)_invalidateTimer;
- (id)init;

@end

@interface ActivityViewController : NSObject <NSAnimationDelegate>
{
    NSMutableArray *_views;
    NSMutableArray *_viewQueue;
    NSMutableSet *_viewsPendingHide;
    double _activityViewHeight;
    double _mailActivityViewHeight;
    BOOL _loadingAggregateView;
    NSTextField *_titleTextField;
    SourceListBackgroundView *_contentView;
    NSButton *_mailActivityToggleButton;
    MailboxPaneBottomShadowView *_bottomShadowView;
    NSOutlineView *_mailboxesOutline;
    NSView *_mailboxesContent;
    ActivityAggregateView *_aggregateView;
    NSView *_inView;
    NSView *_outView;
    NSView *_saveView;
    NSLayoutConstraint *_activityViewHeightConstraint;
}

@property NSLayoutConstraint *activityViewHeightConstraint; // @synthesize activityViewHeightConstraint=_activityViewHeightConstraint;
@property(retain, nonatomic) NSView *saveView; // @synthesize saveView=_saveView;
@property(retain, nonatomic) NSView *outView; // @synthesize outView=_outView;
@property(retain, nonatomic) NSView *inView; // @synthesize inView=_inView;
@property(nonatomic) BOOL loadingAggregateView; // @synthesize loadingAggregateView=_loadingAggregateView;
@property(retain, nonatomic) ActivityAggregateView *aggregateView; // @synthesize aggregateView=_aggregateView;
@property(retain, nonatomic) NSView *mailboxesContent; // @synthesize mailboxesContent=_mailboxesContent;
@property(nonatomic) NSOutlineView *mailboxesOutline; // @synthesize mailboxesOutline=_mailboxesOutline;
@property(nonatomic) MailboxPaneBottomShadowView *bottomShadowView; // @synthesize bottomShadowView=_bottomShadowView;
@property(nonatomic) NSButton *mailActivityToggleButton; // @synthesize mailActivityToggleButton=_mailActivityToggleButton;
@property(nonatomic) SourceListBackgroundView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) NSTextField *titleTextField; // @synthesize titleTextField=_titleTextField;
- (void)_mailboxesHeightChanged:(id)arg1;
- (BOOL)_shouldHideShadow;
- (double)_activityAnimationDuration;
- (void)_setActivityViewHeight:(double)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_hideViews:(id)arg1;
- (void)_hideView:(id)arg1;
- (void)_showView:(id)arg1;
- (BOOL)removeViewFromQueue:(id)arg1;
- (void)addViewToQueue:(id)arg1;
- (id)_layoutString;
- (void)toggleDisplay:(id)arg1;
- (void)configureTitleTextField;
- (void)configureActivityAggegateViews;
- (id)_activityAggregateViewForAggregate:(id)arg1 withKeyPathToObserve:(id)arg2;
- (id)_loadActivityAggregateView;
- (void)_setVisible:(BOOL)arg1;
- (void)_unregisterObservedKeyPaths;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface ActivityViewEntry : NSObject
{
    MCActivityMonitor *_activity;
    int _lastChangeCount;
    ActivityViewer *_viewer;
    NSView *_box;
    NSProgressIndicator *_progressBar;
    NSTextField *_statusField;
    NSButton *_stopButton;
    NSTextField *_taskNameField;
}

@property(nonatomic) NSTextField *taskNameField; // @synthesize taskNameField=_taskNameField;
@property(nonatomic) NSButton *stopButton; // @synthesize stopButton=_stopButton;
@property(nonatomic) NSTextField *statusField; // @synthesize statusField=_statusField;
@property(nonatomic) NSProgressIndicator *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) NSView *box; // @synthesize box=_box;
- (void)setupUI;
- (BOOL)inUse;
- (void)stop:(id)arg1;
- (void)_handleActivityEnded:(id)arg1;
- (void)update;
- (id)monitoredActivity;
- (void)setMonitoredActivity:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initForViewer:(id)arg1;

@end

@interface ActivityViewer : NSObject <MVTerminationHandler, NSWindowDelegate>
{
    NSMutableArray *_entries;
    long long _numActiveEntries;
    NSTimer *_updateTimer;
    BOOL _userIsBeingPromptedForTermination;
    FlippedView *_docView;
    NSScrollView *_scrollView;
    NSPanel *_window;
}

@property(retain, nonatomic) NSPanel *window; // @synthesize window=_window;
@property(nonatomic) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) FlippedView *docView; // @synthesize docView=_docView;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (id)statusMessageForTarget:(id)arg1;
- (void)toggleActivityViewerVisible;
- (BOOL)isActivityViewerVisible;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)_promptUserForTermination;
- (BOOL)needsToPromptUserBeforeTermination:(id)arg1;
- (long long)countOfBackgroundActivities;
- (BOOL)hasBackgroundActivity;
- (void)_tileViews;
- (void)removeEntry:(id)arg1;
- (void)_appendEntry:(id)arg1;
- (void)_addViewToViewerWindow:(id)arg1;
- (void)_updateAllEntries;
- (void)_handleNewActivity:(id)arg1;
- (void)awakeFromNib;
- (void)initializeFromDefaults;
- (void)dealloc;
- (id)init;

@end

@interface FlippedView : NSView
{
}

- (BOOL)isOpaque;
- (BOOL)isFlipped;

@end

@interface ActivityViewerMailSound : NSObject
{
    BOOL _fetchWasRequested;
    BOOL _waitingForServerResponse;
    BOOL _shouldPlayNoMailSound;
    long long _backgroundFetchesInProgress;
}

- (void)_mailFetchComplete;
- (BOOL)_isActivityInteresting:(id)arg1 isStarting:(BOOL)arg2;
- (void)_monitoredActivityEnded:(id)arg1;
- (void)_monitoredActivityStarted:(id)arg1;
- (void)beginFetch:(BOOL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface AddressHistoryController : NSObject <NSTableViewDataSource, NSTableViewDelegate>
{
    NSMutableArray *_historyRecords;
    NSString *_sortColumn;
    BOOL _sortIsAscending;
    NSImage *_addressBookPersonImage;
    NSTableView *_historyTableView;
    NSButton *_addToContactsButton;
    NSWindow *_window;
    NSSearchField *_searchField;
    NSMutableDictionary *_abRecordMap;
    NSOperationQueue *_fetchQueue;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly) NSOperationQueue *fetchQueue; // @synthesize fetchQueue=_fetchQueue;
@property(retain, nonatomic) NSMutableDictionary *abRecordMap; // @synthesize abRecordMap=_abRecordMap;
@property(nonatomic) NSSearchField *searchField; // @synthesize searchField=_searchField;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
@property(nonatomic) NSButton *addToContactsButton; // @synthesize addToContactsButton=_addToContactsButton;
@property(nonatomic) NSTableView *historyTableView; // @synthesize historyTableView=_historyTableView;
- (id)_recordForAddress:(id)arg1;
- (void)_addressBookDidChange:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)_showColumnSortIndicator;
- (void)_sortHistoryData;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)openContacts:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)_cancelSearch:(id)arg1;
- (void)search:(id)arg1;
- (void)searchIndex:(id)arg1;
- (void)deleteFromHistory:(id)arg1;
- (void)addToContacts:(id)arg1;
- (void)showAddressHistory;
- (void)_fetchRecentsDataWithCompletionBlock:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface AddressPicker : NSWindowController <NSWindowDelegate>
{
    ABPeoplePickerView *_pickerView;
    BOOL _selectionIsValid;
}

+ (void)restoreFromDefaults;
+ (void)showOrHideAddressPicker;
@property(nonatomic) BOOL selectionIsValid; // @synthesize selectionIsValid=_selectionIsValid;
- (void)_ensureSelectionIsValid:(id)arg1;
- (id)_formattedAddressForRecord:(id)arg1;
- (void)_putSelectionInHeader:(id)arg1;
- (void)putSelectionInBestHeader:(id)arg1;
- (void)putSelectionInBCC:(id)arg1;
- (void)putSelectionInCC:(id)arg1;
- (void)putSelectionInTo:(id)arg1;
- (id)windowNibName;
- (void)awakeFromNib;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)_showOrHideWindow;

@end

@interface AppleScriptPopUpButton : NSPopUpButton
{
    NSMenu *_appleScriptFilesMenu;
    BOOL _amIAwake;
    NSString *_previouslySelectedItem;
    NSURL *_applicationScriptsDirectoryURL;
    id _delegate;
}

@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain) NSURL *applicationScriptsDirectoryURL; // @synthesize applicationScriptsDirectoryURL=_applicationScriptsDirectoryURL;
@property(retain) NSString *previouslySelectedItem; // @synthesize previouslySelectedItem=_previouslySelectedItem;
- (void)_invalidateAppleScriptFilesMenu;
- (void)_popupMenuChanged:(id)arg1;
- (void)resetPopUp;
- (id)selectedAppleScriptPath;
- (void)selectAppleScriptPath:(id)arg1;
- (void)_configureAppleScriptFilesMenu;
- (id)_appleScriptFilesFromMagicDirectory;
- (void)viewDidMoveToWindow;
- (id)menu;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface Assistant : NSObject
{
    NSView *_parentView;
    NSButton *_backButton;
    NSButton *_forwardButton;
    NSButton *_cancelButton;
    NSButton *_helpButton;
    id <AssistantDelegate> _delegate;
}

- (void)setupKeyViewLoop;
- (id)windowTitle;
- (void)weAreDone;
- (BOOL)shouldStop;
- (void)goBackward;
- (void)goForward;
- (void)stop;
- (void)start;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithAssistentManager:(id)arg1;

@end

@interface MVLinkButton : NSButton
{
}

- (void)resetCursorRects;

@end

@interface AssistantManager : NSObject <AssistantDelegate>
{
    NSView *_assistantContainerView;
    NSButton *_backButton;
    NSButton *_forwardButton;
    NSButton *_cancelButton;
    NSButton *_helpButton;
    long long _type;
    Assistant *_assistant;
    BOOL _userWantsToQuit;
    NSWindow *_window;
    NSEvent *_libraryUpgradeCompletedEvent;
    AssistantManager *_me;
}

+ (BOOL)isImporting;
+ (id)openAssistantOfType:(long long)arg1 modalForWindow:(id)arg2 userWantsToQuit:(char *)arg3;
+ (id)openAssistantOfType:(long long)arg1 modalForWindow:(id)arg2;
@property(retain, nonatomic) AssistantManager *me; // @synthesize me=_me;
@property(retain, nonatomic) NSEvent *libraryUpgradeCompletedEvent; // @synthesize libraryUpgradeCompletedEvent=_libraryUpgradeCompletedEvent;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)assistantDidFinish:(id)arg1;
- (void)_moveWindowToFront:(id)arg1;
- (void)_terminate;
- (void)_sheetWillBegin:(id)arg1;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_showInWindow:(id)arg1;
- (void)_start;
- (BOOL)_userWantsToQuit;
- (void)cancel:(id)arg1;
- (void)forward:(id)arg1;
- (void)back:(id)arg1;
- (id)helpButton;
- (id)cancelButton;
- (id)forwardButton;
- (id)backButton;
- (id)assistantContainerView;
- (void)dealloc;
- (id)_initWithType:(long long)arg1;
@property(retain, nonatomic) Assistant *assistant;
- (id)init;
- (id)_newAssistantOfType:(long long)arg1;

@end

@interface AttachmentDragSession : NSObject
{
    NSView *_sourceView;
    NSMutableArray *_attachments;
}

- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)startDragFromPoint:(struct CGPoint)arg1 event:(id)arg2 image:(id)arg3;
- (id)attachments;
- (id)sourceView;
- (id)initWithSourceView:(id)arg1 attachments:(id)arg2;
- (void)dealloc;

@end

@interface _AttachmentQueueEntry : NSObject
{
    MFAttachmentViewController *_attachmentController;
    MCAttachment *_attachment;
    NSURL *_opSpecific_applicationURL;
    NSString *_opSpecific_savePath;
    int _reason;
    NSWindow *_window;
    MCMimeBody *_body;
    NSString *_attachDir;
}

+ (id)newWithWindow:(id)arg1 attachment:(id)arg2 reason:(int)arg3 opSpecific:(id)arg4 attachmentDirectory:(id)arg5;
+ (id)newWithWindow:(id)arg1 attachmentController:(id)arg2 reason:(int)arg3 opSpecific:(id)arg4 attachmentDirectory:(id)arg5;
@property(retain, nonatomic) NSString *attachDir; // @synthesize attachDir=_attachDir;
@property(nonatomic) int reason; // @synthesize reason=_reason;
@property(retain, nonatomic) MCMimeBody *body; // @synthesize body=_body;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
@property(retain, nonatomic) MFAttachmentViewController *attachmentController;
@property(retain, nonatomic) MCAttachment *attachment;

@end

@interface AttachmentLoader : NSObject <MCActivityTarget>
{
    id <MCMessageDataSource> _store;
    MCActivityMonitor *_monitor;
    NSMutableArray *_entries;
}

+ (id)_makeLoaderForStore:(id)arg1;
+ (id)_loaderForStore:(id)arg1;
+ (void)cancelInlineLoads:(id)arg1 window:(id)arg2;
+ (void)startLoadingInlineAttachments:(id)arg1 window:(id)arg2 delegate:(id)arg3;
+ (id)loaderForSavingAttachment:(id)arg1 window:(id)arg2 path:(id)arg3;
+ (id)loaderForAttachmentViewController:(id)arg1 window:(id)arg2 reason:(int)arg3 application:(id)arg4 attachmentDirectory:(id)arg5;
+ (id)loaderForAttachment:(id)arg1 window:(id)arg2 reason:(int)arg3 application:(id)arg4 attachmentDirectory:(id)arg5;
- (BOOL)_addOrReprioritizeEntryEqualTo:(id)arg1;
- (void)_addAttachmentsToFetch:(id)arg1 fromWindow:(id)arg2 delegate:(id)arg3;
- (void)_startBackgroundThreadIfNeeded;
- (void)_setStore:(id)arg1;
- (void)_mailboxBecameInvalid;
- (void)_monitorQuit:(id)arg1;
- (void)_setMonitor:(id)arg1;
- (void)_processAttachmentQueue;
- (void)_didFetchDataForQueueEntry:(id)arg1;
- (void)_cancelInlineLoadsForWindow:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface AttachmentManager : NSObject <MCActivityTarget, MVTerminationHandler, NSSharingServiceDelegate, NSSharingServicePickerDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate, QLSeamlessOpenerDelegate>
{
    NSMutableArray *_openedAttachmentPaths;
    NSMutableDictionary *_openedAttachmentMessageIDs;
    NSMutableArray *_messageIDPurgeQueue;
    NSTimer *_purgeTimer;
    long long _purgeBehavior;
    NSMutableDictionary *_quickLookAttachments;
    MCInvocationQueue *_deletionHandlerQueue;
    BOOL _isDirty;
    MFAttachmentViewController *_controllerForImageToShare;
}

+ (BOOL)attachmentPurgingIsEnabled;
+ (id)_openedAttachmentListPath;
+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(retain, nonatomic) MFAttachmentViewController *controllerForImageToShare; // @synthesize controllerForImageToShare=_controllerForImageToShare;
- (void)_noteFileSystemChanged:(id)arg1;
- (id)_fileForSavedFileWrapper:(id)arg1 directory:(id)arg2 makePathUnique:(BOOL)arg3;
- (BOOL)_immediatelyOpenAttachment:(id)arg1 withApplicationURL:(id)arg2 window:(id)arg3 attachmentDirectory:(id)arg4 reason:(int)arg5;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)_handleMessageDeleted:(id)arg1;
- (void)_messageDeleted:(id)arg1;
- (void)_schedulePurgeOfMessageIDs:(id)arg1;
- (void)_scheduleMessageIDPurge;
- (void)_purgeMessageIDs;
- (void)_purgeAttachments:(id)arg1;
- (void)_reallyPurgeAttachments;
- (void)_finishTerminatingAttachmentPurge;
- (void)_synchronouslyPurgeAttachments;
- (BOOL)_allMessagesWithMessageIDAreDeletedOrTrashed:(id)arg1;
- (void)_saveOpenedAttachmentsList;
- (void)_scheduleAttachmentListSave;
- (void)_setDirty:(BOOL)arg1;
- (void)_addPurgeEntryForAttachmentAtPath:(id)arg1 modDate:(id)arg2 messageID:(id)arg3 partNumber:(id)arg4;
- (void)_addOrReplaceEntry:(id)arg1 inAttachmentList:(id)arg2;
- (void)_setupOpenedAttachmentsMessageIDMap;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)_immediatelyOpenAttachment:(id)arg1 path:(id)arg2 window:(id)arg3 application:(id)arg4 reason:(int)arg5 exists:(BOOL)arg6;
- (BOOL)_sameAttachmentAsBefore:(id)arg1 path:(id)arg2;
- (BOOL)_saveAttachmentsFromMessages:(id)arg1 toDirectory:(id)arg2 error:(id *)arg3;
- (void)_saveAttachmentsFromMessages:(id)arg1 toDirectory:(id)arg2;
- (BOOL)_saveAttachments:(id)arg1 toDirectory:(id)arg2 makePathsUnique:(BOOL)arg3 error:(id *)arg4;
- (void)_saveAttachments:(id)arg1 toDirectory:(id)arg2 makePathsUnique:(BOOL)arg3;
- (void)_saveAttachment:(id)arg1 toPath:(id)arg2 window:(id)arg3;
- (void)_immediatelySaveFileWrapper:(id)arg1 path:(id)arg2 window:(id)arg3;
- (void)_openPathsForAttachmentsWithDictionary:(id)arg1;
- (int)_openFullPath:(id)arg1 withAppURL:(struct __CFURL *)arg2 options:(unsigned int)arg3;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (void)writeImageAttachmentToPasteboard:(id)arg1;
- (void)saveAttachments:(id)arg1 toDirectory:(id)arg2 makePathsUnique:(BOOL)arg3 window:(id)arg4;
- (id)contextualMenuForAttachments:(id)arg1 clickedAttachment:(id)arg2 forEditing:(BOOL)arg3;
- (void)_configureOpenWithMenu:(id)arg1 forAttachments:(id)arg2;
- (BOOL)openFileAtPath:(id)arg1 withApplication:(id)arg2 stayInBackground:(BOOL)arg3;
- (BOOL)openFileURL:(id)arg1 stayInBackground:(BOOL)arg2 window:(id)arg3;
- (void)chooseApplicationToOpenAttachments:(id)arg1 needsSave:(BOOL)arg2 window:(id)arg3 delegate:(id)arg4;
- (BOOL)openInvitationAttachments:(id)arg1 openImmediately:(BOOL)arg2;
- (BOOL)openTemporaryAttachments:(id)arg1 applicationBundle:(id)arg2 window:(id)arg3;
- (void)saveAttachmentsToDownloadDirectory:(id)arg1 window:(id)arg2;
- (void)_runSavePanelForAttachments:(id)arg1 messages:(id)arg2 window:(id)arg3;
- (void)runSavePanelForAttachments:(id)arg1 window:(id)arg2;
- (void)saveAttachmentsFromMessages:(id)arg1 window:(id)arg2;
- (void)_openAttachmentsWithDictionary:(id)arg1;
- (void)openAttachments:(id)arg1 applicationURL:(id)arg2 window:(id)arg3 delegate:(id)arg4;
- (void)downloadAttachments:(id)arg1 window:(id)arg2;
- (void)quickLookAttachmentsFromMessages:(id)arg1 window:(id)arg2;
- (void)quickLookAttachments:(id)arg1 window:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (BOOL)previewPanel:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (void)_addAttachmentToQuickLookPanel:(id)arg1 attachmentDirectory:(id)arg2 window:(id)arg3;
- (BOOL)_addAttachmentForQuickLook:(id)arg1 attachmentDirectory:(id)arg2;
- (void)_tellControllerAttachmentIsDownloaded:(id)arg1;
- (void)_downloadCompleted:(id)arg1;
- (void)_openFromDownloadedNotification:(id)arg1;
- (id)pathsForDraggedAttachments:(id)arg1 fromView:(id)arg2;
- (BOOL)dragAttachments:(id)arg1 startPoint:(struct CGPoint)arg2 view:(id)arg3 event:(id)arg4 image:(id)arg5 delegate:(id)arg6;
- (void)cancelLoadingInlineAttachmentsForDisplay:(id)arg1;
- (void)beginLoadingInlineAttachmentsForDisplay:(id)arg1;
- (void)setAttachmentPurgingBehavior:(long long)arg1;
- (void)disableAttachmentPurging;
- (void)enableAttachmentPurging;
- (void)initializeAttachmentPurging;
- (long long)attachmentPurgingBehavior;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface BannerBackgroundView : NSView
{
    long long _bannerBackgroundStyle;
}

- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
@property(nonatomic) long long bannerBackgroundStyle;
- (void)updateLayer;
- (void)_bannerBackgroundViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BannerContainerViewController : NSViewController
{
    BOOL _loaded;
    NSLayoutConstraint *_heightConstraint;
    MessageWebDocumentView *_webDocumentView;
    NSArray *_bannerViewControllers;
}

+ (id)_showingPassbookBannerBackgroundColor;
+ (id)_defaultBackgroundColor;
@property(retain, nonatomic) NSArray *bannerViewControllers; // @synthesize bannerViewControllers=_bannerViewControllers;
@property(nonatomic) BOOL loaded; // @synthesize loaded=_loaded;
@property(retain, nonatomic) MessageWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
- (void)updateBannerDisplay;
- (void)addSubviewForBanner:(id)arg1;
- (void)updateLoaded;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (void)dealloc;
- (void)_bannerContainerViewControllerCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface BannerImageView : NSImageView
{
    CDStruct_3c058996 _edgeInsets;
}

- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (CDStruct_3c058996)alignmentRectInsets;
- (void)setAlignmentRectInsets:(CDStruct_3c058996)arg1;

@end

@interface BannerTextFieldCell : NSTextFieldCell
{
}

- (void)setAttributedStringValue:(id)arg1;
- (void)setStringValue:(id)arg1;
- (id)_stringAttributes;
- (void)setBackgroundStyle:(long long)arg1;
- (void)_bannerTextFieldCellCommonInit;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface BannerViewController : NSViewController
{
    BOOL _loaded;
    BOOL _wantsDisplay;
    BOOL _viewIsLoaded;
    BannerContainerViewController *_container;
}

+ (id)keyPathsForValuesAffectingWebDocument;
+ (id)keyPathsForValuesAffectingWebDocumentView;
@property(nonatomic) BOOL viewIsLoaded; // @synthesize viewIsLoaded=_viewIsLoaded;
@property(nonatomic) BannerContainerViewController *container; // @synthesize container=_container;
- (void)updateWantsDisplay;
- (void)updateBannerContents;
@property(nonatomic) BOOL wantsDisplay;
@property(nonatomic) BOOL loaded;
@property(readonly, nonatomic) MUIWebDocument *webDocument;
@property(readonly, nonatomic) MessageWebDocumentView *webDocumentView;
@property(readonly, nonatomic) NSColor *backgroundColor;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (id)view;
- (id)nibBundle;
- (id)nibName;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithBannerContainerViewController:(id)arg1;

@end

@interface BindingsEnabledMenu : NSMenu
{
}

- (id)insertItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3 atIndex:(long long)arg4;
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;

@end

@interface BlockedWebPluginView : NSView
{
}

- (void)_blockedWebPluginViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _BorderlessButton : NSButton
{
    NSImage *_activeImage;
    NSImage *_inactiveImage;
}

@property(retain) NSImage *inactiveImage; // @synthesize inactiveImage=_inactiveImage;
@property(retain) NSImage *activeImage; // @synthesize activeImage=_activeImage;
- (void)setEnabled:(BOOL)arg1;
- (void)dealloc;
- (BOOL)isOpaque;

@end

@interface BorderlessToolbarItem : NSToolbarItem
{
    double _width;
}

@property(retain) NSImage *pressedImage;
@property(retain) NSImage *inactiveImage;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setLabel:(id)arg1;
- (id)control;
- (void)validate;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (void)setWidth:(double)arg1;
- (id)initWithItemIdentifier:(id)arg1;

@end

@interface BusyStatusErrorWindowDelegate : NSObject <DynamicErrorWindowDelegate>
{
    MFDatabaseRecoverer *_recoverer;
}

@property MFDatabaseRecoverer *recoverer; // @synthesize recoverer=_recoverer;
- (id)_capitalizedStringForDatabase;
- (id)_stringForDatabase;
- (unsigned long long)helpTopicForDiagnosis:(long long)arg1;
- (void)rightActionSelectedWithDiagnosis:(long long)arg1;
- (void)leftActionSelectedWithDiagnosis:(long long)arg1;
- (id)rightButtonTextForErrorDiagnosis:(long long)arg1;
- (id)leftButtonTextForErrorDiagnosis:(long long)arg1;
- (id)errorDescriptionForErrorDiagnosis:(long long)arg1;
- (id)errorMessageForErrorDiagnosis:(long long)arg1;
- (BOOL)displayIndeterminateProgress;
- (void)dealloc;
- (id)init;
- (id)initWithRecoverer:(id)arg1;

@end

@interface ButtonIconTextCell : NSButtonCell
{
    NSImage *_icon;
    BOOL _cellEnabled;
    struct CGRect _cellRect;
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)cellEnabled;
- (void)setCellEnabled:(BOOL)arg1;
- (struct CGSize)iconSizeForFrame:(struct CGRect)arg1;
- (id)icon;
- (void)setIcon:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface CalendarBannerIconCreator : NSObject
{
}

+ (id)newCalendarBannerIconForDate:(id)arg1;
+ (void)drawBackgroundTileInRect:(struct CGRect)arg1 pathToBackground:(id)arg2 date:(id)arg3;
+ (id)monthStringAttributes;
+ (id)dateStringAttributes;
+ (id)appleFontWithName:(id)arg1 size:(double)arg2;

@end

@interface CalendarBannerViewController : BannerViewController
{
    NSTextField *_eventTitle;
    NSTextField *_eventTime;
    NSButton *_openCalendarButton;
}

+ (id)keyPathsForValuesAffectingShouldHideMeetingCancellationOKButton;
+ (id)keyPathsForValuesAffectingShouldHideMeetingRequestButtons;
@property(nonatomic) NSButton *openCalendarButton; // @synthesize openCalendarButton=_openCalendarButton;
@property(nonatomic) NSTextField *eventTime; // @synthesize eventTime=_eventTime;
@property(nonatomic) NSTextField *eventTitle; // @synthesize eventTitle=_eventTitle;
- (id)_dateStringForEvent:(id)arg1;
- (id)_titleForEvent:(id)arg1;
- (id)_eventForCurrentMessage;
- (void)openInCalendar:(id)arg1;
- (void)sendMeetingResponse:(id)arg1;
@property(readonly, nonatomic) BOOL shouldHideMeetingCancellationOKButton;
@property(readonly, nonatomic) BOOL shouldHideMeetingRequestButtons;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (id)backgroundColor;
- (id)nibName;

@end

@interface CertificateBannerViewController : BannerViewController
{
    BannerImageView *_certificateImage;
    NSTextField *_messageField;
    NSButton *_helpButton;
}

@property(nonatomic) NSButton *helpButton; // @synthesize helpButton=_helpButton;
@property(nonatomic) NSTextField *messageField; // @synthesize messageField=_messageField;
@property(nonatomic) BannerImageView *certificateImage; // @synthesize certificateImage=_certificateImage;
- (void)showDetails:(id)arg1;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (id)backgroundColor;
- (void)dealloc;
- (id)nibName;

@end

@interface ChildBannerViewController : BannerViewController
{
    long long _parentalControlMessageState;
    BannerImageView *_icon;
    NSTextField *_messageField;
    NSButton *_helpButton;
    NSButton *_sendButton;
    NSLayoutConstraint *_helpButtonTrailingSpace;
}

@property(nonatomic) NSLayoutConstraint *helpButtonTrailingSpace; // @synthesize helpButtonTrailingSpace=_helpButtonTrailingSpace;
@property(nonatomic) NSButton *sendButton; // @synthesize sendButton=_sendButton;
@property(nonatomic) NSButton *helpButton; // @synthesize helpButton=_helpButton;
@property(nonatomic) NSTextField *messageField; // @synthesize messageField=_messageField;
@property(nonatomic) BannerImageView *icon; // @synthesize icon=_icon;
@property(nonatomic) long long parentalControlMessageState; // @synthesize parentalControlMessageState=_parentalControlMessageState;
- (void)sendMessage:(id)arg1;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (id)backgroundColor;
- (void)awakeFromNib;
- (id)nibName;

@end

@interface ClippedItemsIndicator : NSButton <NSMenuDelegate>
{
    id <ClippedItemsIndicatorDelegate> _delegate;
    NSMenu *_menu;
}

- (void)menuDidClose:(id)arg1;
- (void)_popUpMenu;
- (void)mouseDown:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ColorBackgroundView : NSView
{
    NSColor *_color;
    NSImage *_image;
    NSArray *_colors;
    BOOL _shouldTileImage;
    NSGradient *_gradient;
    BOOL _transparent;
    BOOL _isFlipped;
    double _gradientAngle;
    long long _tag;
    double _rowHeight;
    double _rowOffset;
    NSColor *_imageColor;
}

@property(nonatomic) BOOL transparent; // @synthesize transparent=_transparent;
@property(retain, nonatomic) NSColor *backgroundImageColor; // @synthesize backgroundImageColor=_imageColor;
@property(nonatomic, setter=setFlipped:) BOOL isFlipped; // @synthesize isFlipped=_isFlipped;
@property(nonatomic) double rowOffset; // @synthesize rowOffset=_rowOffset;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(nonatomic) long long tag; // @synthesize tag=_tag;
@property(nonatomic) double gradientAngle; // @synthesize gradientAngle=_gradientAngle;
- (id)colorForRow:(unsigned long long)arg1;
- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic) BOOL shouldTileImage;
@property(retain, nonatomic) NSImage *backgroundImage;
- (void)updateBackgroundImageColor;
@property(retain, nonatomic) NSGradient *gradient;
@property(retain, nonatomic) NSColor *backgroundColor;
@property(retain, nonatomic) NSArray *backgroundColors;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)isOpaque;
- (void)dealloc;

@end

@interface ComposeBackEnd : NSObject <MCActivityTarget>
{
    id _delegate;
    NSString *_contentForAddressBookUpdate;
    NSNumber *_uniqueID;
    NSURL *_vcardFileForAddressBookUpdate;
    NSPort *_initializationPort;
    StationeryController *_stationeryController;
    NSArray *_originalMessages;
    NSArray *_generatedParsedMessages;
    DOMNode *_stationerySignatureNode;
    NSMutableDictionary *_originalMessageHeaders;
    NSMutableDictionary *_originalMessageBodies;
    MCParsedMessage *_originalMessageParsedMessage;
    NSMutableDictionary *_cleanHeaders;
    NSMutableDictionary *_extraRecipients;
    NSMutableDictionary *_directoriesByAttachment;
    NSUndoManager *_undoManager;
    NSMutableSet *_knownMessageIds;
    MCInvocationQueue *_saveQueue;
    struct {
        unsigned int type:4;
        unsigned int composeMode:2;
        unsigned int hadChangesBeforeSave:1;
        unsigned int hasChanges:1;
        unsigned int showAllHeaders:1;
        unsigned int includeHeaders:1;
        unsigned int isUndeliverable:1;
        unsigned int isDeliveringMessage:1;
        unsigned int sendWindowsFriendlyAttachments:2;
        unsigned int contentsWasEditedByUser:1;
        unsigned int delegateRespondsToDidChange:1;
        unsigned int delegateRespondsToSenderDidChange:1;
        unsigned int delegateRespondsToDidAppendMessage:1;
        unsigned int delegateRespondsToDidSaveMessage:1;
        unsigned int delegateRespondsToDidBeginLoad:1;
        unsigned int delegateRespondsToDidEndLoad:1;
        unsigned int delegateRespondsToWillCreateMessageWithHeaders:1;
        unsigned int delegateRespondsToShouldSaveMessage:1;
        unsigned int delegateRespondsToShouldDeliverMessage:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForMissingCertificatesForRecipients:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForEncryptionError:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForError:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForAttachmentError:1;
        unsigned int signIfPossible:1;
        unsigned int encryptIfPossible:1;
        unsigned int knowsCanSign:1;
        unsigned int canSign:1;
        unsigned int shouldDownloadRemoteAttachments:1;
        unsigned int overrideRemoteAttachmentsPreference:1;
        unsigned int editorHasInitialized:1;
        unsigned int isEditing:1;
        unsigned int isSendFormatInitialized:1;
        unsigned int isAppleScriptMessage:1;
        unsigned long long encodingHint;
    } _flags;
    BOOL _willCloseEditor;
    BOOL _isSettingSenderFromGetter;
    EditableWebMessageDocument *_document;
    NSMutableDictionary *_contentsByMessage;
    MCParsedMessage *_initialParsedMessage;
    MCParsedMessage *_restoredParsedMessage;
    NSMutableDictionary *_attachmentMimeBodiesByURL;
    BOOL _saveThreadCancelFlag;
    NSString *_saveThreadMessageId;
    MFMailbox *_saveThreadMailbox;
    NSURL *_originalMessageBaseURL;
    NSUUID *_documentID;
}

+ (id)keyPathsForValuesAffectingAccount;
+ (id)supportedMailboxTypes;
+ (void)initialize;
+ (id)composeBackEndsByUniqueID;
+ (id)_messageEditorForComposeBackEnd:(id)arg1 window:(id *)arg2;
+ (void)unregisterComposeBackEnd:(id)arg1;
+ (void)registerComposeBackEnd:(id)arg1;
+ (id)composeBackEndForUniqueID:(id)arg1;
@property(retain) NSUUID *documentID; // @synthesize documentID=_documentID;
@property(retain) NSURL *originalMessageBaseURL; // @synthesize originalMessageBaseURL=_originalMessageBaseURL;
@property(retain) MFMailbox *saveThreadMailbox; // @synthesize saveThreadMailbox=_saveThreadMailbox;
@property(copy) NSString *saveThreadMessageId; // @synthesize saveThreadMessageId=_saveThreadMessageId;
- (void)_markForOverwrite:(id)arg1;
- (void)_saveThreadSaveContents:(id)arg1;
- (void)_saveThreadRemoveLastSave;
- (void)_saveThreadSetMessageId:(id)arg1 mailbox:(id)arg2 overwrite:(id)arg3;
- (void)_saveThreadUpdateAccount:(id)arg1 mailbox:(id)arg2;
- (BOOL)_saveThreadShouldCancel;
@property BOOL saveThreadCancelFlag; // @synthesize saveThreadCancelFlag=_saveThreadCancelFlag;
- (BOOL)isContentSignificant;
@property(readonly) BOOL isSavingMessage;
- (int)_convertSaveOrSendResultFromResultCodeT:(long long)arg1;
- (id)mailboxCreateIfNeeded:(BOOL)arg1;
- (id)_formattedAddressMatchingRawAddress:(id)arg1 inAccount:(id)arg2;
- (id)_replyAddressForMessage:(id)arg1;
- (void)_saveRecipients;
- (void)_setupDefaultRecipientsFirstTime:(BOOL)arg1;
- (void)_ccOrBccMyselfGivenOriginalMessage:(id)arg1 uniquedRecipientsTable:(id)arg2;
- (BOOL)containsAttachmentsThatCouldConfuseWindowsClients;
- (BOOL)containsAttachments;
- (BOOL)attachmentCanBeSentInline:(id)arg1;
- (id)copyOfContentsForDraft:(BOOL)arg1 shouldBePlainText:(BOOL)arg2 isOkayToForceRichText:(BOOL)arg3;
- (id)htmlDocumentForSave;
- (void)setOriginalMessageParsedMessage:(id)arg1;
- (void)getContentsForMessage:(id)arg1 body:(id)arg2;
- (void)_recursivelyURLifyNode:(id)arg1;
- (void)addBaseURLTagToNode:(id)arg1;
- (id)_newPlainTextRepresentationIncludeAttachments:(BOOL)arg1;
- (id)htmlStringFromRange:(id)arg1 htmlDocument:(id)arg2 removeCustomAttributes:(BOOL)arg3 convertObjectsToImages:(BOOL)arg4 convertEditableElements:(BOOL)arg5;
- (id)newOutgoingMessageUsingWriter:(id)arg1 contents:(id)arg2 headers:(id)arg3 isDraft:(BOOL)arg4 shouldBePlainText:(BOOL)arg5;
- (id)userDefaultMessageFont;
- (BOOL)containsRichText;
- (BOOL)hasContents;
- (void)generateMessageParsedMessages;
- (void)fetchAndCacheMessages;
- (void)_notifyDelegateMonitor:(id)arg1 alreadyDone:(char *)arg2;
- (void)finishPreparingContentWithEditorSettings:(id)arg1;
- (void)updateSaveDestinationAccount:(id)arg1 mailbox:(id)arg2;
- (void)updateDocumentReference:(id)arg1;
- (void)_configureLastDraftInformationFromHeaders:(id)arg1 overwrite:(BOOL)arg2;
- (BOOL)_isValidSaveDestination:(id)arg1;
- (BOOL)canEncryptForRecipients:(id)arg1 sender:(id)arg2;
- (BOOL)canSignFromAddress:(id)arg1;
- (id)recipientsThatHaveNoKeyForEncryption;
- (id)allRecipients;
- (void)setEncryptIfPossible:(BOOL)arg1;
- (void)setSignIfPossible:(BOOL)arg1;
- (BOOL)isEditingMessage:(id)arg1;
- (void)removeLastDraft;
- (id)defaultMessageStore;
- (BOOL)saveMessage;
- (id)saveTaskName;
- (void)_backgroundSaveDidChangeMessageId:(id)arg1;
- (void)backgroundSaveEnded:(id)arg1;
- (void)_backgroundAppendEnded:(id)arg1;
- (void)_synchronouslyAppendMessageToOutboxWithContents:(id)arg1;
- (BOOL)isDeliveringMessage;
- (BOOL)deliverMessage;
- (BOOL)isAddressHeaderKey:(id)arg1;
- (void)removeAddressForHeader:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertAddress:(id)arg1 forHeader:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setAddressList:(id)arg1 forHeader:(id)arg2;
- (id)addressListForHeader:(id)arg1;
- (void)addHeaders:(id)arg1;
- (long long)displayableMessagePriority;
- (void)setMessagePriority:(long long)arg1;
- (id)htmlStringForSignature:(id)arg1;
- (void)getSignatureElement:(id *)arg1 parent:(id *)arg2 nextSibling:(id *)arg3;
- (void)setStationerySignatureNode:(id)arg1;
- (void)setSignature:(id)arg1;
- (id)signature;
- (id)signatureId;
- (BOOL)okToLetUserAddSignature;
- (BOOL)okToAddSignatureAutomatically;
@property long long composeMode;
@property BOOL includeHeaders;
- (void)setShowAllHeaders:(BOOL)arg1;
- (id)messageID;
@property(retain) NSString *subject;
- (void)_setCleanHeaders:(id)arg1;
- (id)cleanHeaders;
@property(retain) NSString *sender;
- (void)setDeliveryAccount:(id)arg1;
- (id)deliveryAccount;
@property(retain, nonatomic) MFMailAccount *account;
- (id)message;
- (id)plainTextMessage;
- (id)_makeMessageWithContents:(id)arg1 isDraft:(BOOL)arg2 shouldSign:(BOOL)arg3 shouldEncrypt:(BOOL)arg4 shouldSkipSignature:(BOOL)arg5 shouldBePlainText:(BOOL)arg6;
- (unsigned long long)_encodingHint;
- (id)mimeBodyForAttachmentWithURL:(id)arg1;
- (id)_parsedMessageForMessage:(id)arg1;
- (void)_continueToSetupContentsForView:(id)arg1 withParsedMessages:(id)arg2;
@property(readonly) BOOL defaultFormatIsRich;
- (void)setupContentsForView:(id)arg1;
- (void)setTypeAndConfigureLoadingOfRemoteAttachments:(unsigned long long)arg1;
- (void)_configureLoadingOfRemoteAttachments;
- (void)_generateParsedMessageFromOriginalMessages;
@property(readonly) EditableWebMessageDocument *document;
- (void)setRestoredParsedMessage:(id)arg1;
@property(retain) MCParsedMessage *initialParsedMessage;
- (BOOL)preserveAddedArchiveBody;
- (id)directoryForAttachment:(id)arg1;
- (id)attachments;
- (void)setOriginalMessages:(id)arg1;
- (id)_knownMessageIds;
- (id)originalMessageBody;
- (id)originalMessageHeaders;
- (void)setOriginalMessage:(id)arg1;
- (id)originalMessage;
- (void)setSendWindowsFriendlyAttachments:(BOOL)arg1;
- (BOOL)sendWindowsFriendlyAttachments;
- (void)setIsUndeliverable:(BOOL)arg1;
- (BOOL)isUndeliverable;
- (void)setShouldDownloadRemoteAttachments:(BOOL)arg1;
- (BOOL)isRedirecting;
- (void)setType:(unsigned long long)arg1;
- (unsigned long long)type;
- (void)setUndoManager:(id)arg1;
- (id)undoManager;
- (void)setHasChanges:(BOOL)arg1;
- (BOOL)hasChanges;
- (id)stationeryController;
- (BOOL)hasStationery;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)description;
- (void)setWillCloseEditor:(BOOL)arg1;
- (void)_editorHasInitialized:(id)arg1;
- (void)setGeneratedParsedMessages:(id)arg1;
- (void)setStateFromBackEnd:(id)arg1;
- (void)_createUniqueID;
- (id)init;
- (id)initCreatingDocumentEditor:(BOOL)arg1;
- (void)dealloc;
- (void)setVcardFile:(id)arg1;
- (void)setHtmlContent:(id)arg1;
- (id)objectSpecifier;
- (id)handleCloseScriptCommand:(id)arg1;
- (id)handleSendMessageCommand:(id)arg1;
- (id)handleSaveMessageCommand:(id)arg1;
- (void)replaceFormattedAddress:(id)arg1 withAddress:(id)arg2 forKey:(id)arg3;
- (void)removeFromBccRecipientsAtIndex:(unsigned long long)arg1;
- (void)removeFromCcRecipientsAtIndex:(unsigned long long)arg1;
- (void)removeFromToRecipientsAtIndex:(unsigned long long)arg1;
- (void)insertInBccRecipients:(id)arg1;
- (void)insertInBccRecipients:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInCcRecipients:(id)arg1;
- (void)insertInCcRecipients:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInToRecipients:(id)arg1;
- (void)insertInToRecipients:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertRecipient:(id)arg1 atIndex:(unsigned long long)arg2 inHeaderWithKey:(id)arg3;
- (id)bccRecipients;
- (id)ccRecipients;
- (id)toRecipients;
- (id)recipients;
- (void)_addRecipientsForKey:(id)arg1 toArray:(id)arg2;
- (void)setMessageSignature:(id)arg1;
- (id)messageSignature;
- (void)setContent:(id)arg1;
- (id)content;
- (void)setAppleScriptSubject:(id)arg1;
- (id)appleScriptSubject;
- (void)setAppleScriptSender:(id)arg1;
- (id)appleScriptSender;
- (void)setIsVisible:(BOOL)arg1;
- (BOOL)isVisible;
- (id)uniqueID;

@end

@interface WebComposeMessageContents : NSObject
{
    long long _composeMode;
    NSAttributedString *_plainText;
    NSString *_topLevelHtmlString;
    NSMutableArray *_attachmentsAndHtmlStrings;
    NSMutableArray *_urlsForAttachmentsAndHtmlStrings;
}

@property(retain, nonatomic) NSMutableArray *urlsForAttachmentsAndHtmlStrings; // @synthesize urlsForAttachmentsAndHtmlStrings=_urlsForAttachmentsAndHtmlStrings;
@property(retain, nonatomic) NSMutableArray *attachmentsAndHtmlStrings; // @synthesize attachmentsAndHtmlStrings=_attachmentsAndHtmlStrings;
@property(retain, nonatomic) NSString *topLevelHtmlString; // @synthesize topLevelHtmlString=_topLevelHtmlString;
@property(retain, nonatomic) NSAttributedString *plainText; // @synthesize plainText=_plainText;
@property(nonatomic) long long composeMode; // @synthesize composeMode=_composeMode;
- (id)description;
- (void)addAttachmentOrHtmlString:(id)arg1 withURL:(id)arg2;
- (void)dealloc;

@end

@interface ComposeBackEnd_Scripting : ComposeBackEnd
{
    NSTextStorage *_textStorage;
}

- (void)_coalescedConvertTextStorage;
- (void)_convertTextStorage;
- (void)_pushTextStorage;
- (void)setContent:(id)arg1;
- (id)content;
- (id)textStorage;
- (void)setTextStorage:(id)arg1;
- (void)dealloc;

@end

@interface ScriptableMessageTextStorage : NSConcreteTextStorage
{
}

- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;

@end

@interface ComposeHeaderView : NSView <NSAnimationDelegate>
{
    id _delegate;
    NSPopUpButton *_disclosureButton;
    OptionalView *_toOptionalView;
    OptionalView *_ccOptionalView;
    OptionalView *_subjectOptionalView;
    OptionalView *_bccOptionalView;
    OptionalView *_replyToOptionalView;
    OptionalView *_accountOptionalView;
    OptionalView *_signatureOptionalView;
    OptionalView *_priorityOptionalView;
    OptionalView *_securityOptionalView;
    OptionalView *_deliveryOptionalView;
    NSView *_messageContentView;
    NSPopUpButton *_signaturePopUp;
    NSPopUpButton *_accountPopUp;
    NSPopUpButton *_priorityPopUp;
    NSPopUpButton *_deliveryPopUp;
    NSButton *_cancelButton;
    NSButton *_okButton;
    unsigned int _showCcView:1;
    unsigned int _showBccView:1;
    unsigned int _showReplyToView:1;
    unsigned int _showAccountView:1;
    unsigned int _showSignatureView:1;
    unsigned int _showPriorityView:1;
    unsigned int _showDeliveryView:1;
    BOOL _tempShowDeliveryView;
    unsigned int _accountFieldEnabled:1;
    unsigned int _deliveryFieldEnabled:1;
    unsigned int _signatureFieldEnabled:1;
    unsigned int _securityFieldEnabled:1;
    unsigned int _resizingViews:1;
    unsigned int _customizing:1;
    unsigned int _changesCancelled:1;
    NSViewAnimation *_animation;
    double _nextShownFrameOrigin;
    double _nextHiddenFrameOrigin;
    double _heightDelta;
    id _lastFirstResponder;
    double _signaturePopUpMaxWidth;
    double _accountPopUpMaxWidth;
    OptionalView *_togglingOptionalView;
    BOOL _customizationShouldStick;
    BOOL _hasBarBelow;
    BOOL _showSecurityView;
    NSMenu *_actionMenu;
    double _accountLabelRTLWidth;
    double _signatureLabelRTLWidth;
    double _deliveryLabelRTLWidth;
    double _accountCheckboxRTLWidth;
    double _signatureCheckboxRTLWidth;
    double _deliveryCheckboxRTLWidth;
    double _signatureRTLOffset;
    double _priorityRTLOffset;
}

@property double priorityRTLOffset; // @synthesize priorityRTLOffset=_priorityRTLOffset;
@property double signatureRTLOffset; // @synthesize signatureRTLOffset=_signatureRTLOffset;
@property double deliveryCheckboxRTLWidth; // @synthesize deliveryCheckboxRTLWidth=_deliveryCheckboxRTLWidth;
@property double signatureCheckboxRTLWidth; // @synthesize signatureCheckboxRTLWidth=_signatureCheckboxRTLWidth;
@property double accountCheckboxRTLWidth; // @synthesize accountCheckboxRTLWidth=_accountCheckboxRTLWidth;
@property double deliveryLabelRTLWidth; // @synthesize deliveryLabelRTLWidth=_deliveryLabelRTLWidth;
@property double signatureLabelRTLWidth; // @synthesize signatureLabelRTLWidth=_signatureLabelRTLWidth;
@property double accountLabelRTLWidth; // @synthesize accountLabelRTLWidth=_accountLabelRTLWidth;
@property(retain, nonatomic) NSMenu *actionMenu; // @synthesize actionMenu=_actionMenu;
@property BOOL showSecurityView; // @synthesize showSecurityView=_showSecurityView;
- (double)_checkboxRTLWidthForView:(id)arg1;
- (double)_labelRTLWidthForView:(id)arg1;
- (void)_enforceRTLMinWidthsForAccountFrame:(struct CGRect)arg1 signatureFrame:(struct CGRect)arg2 deliveryFrame:(struct CGRect)arg3;
- (void)_determineOptionalViewLabelWidthsForRTL;
@property(nonatomic) BOOL hasBarBelow;
- (void)setSecurityFieldEnabled:(BOOL)arg1;
- (void)setDeliveryFieldEnabled:(BOOL)arg1;
- (void)setSignatureFieldEnabled:(BOOL)arg1;
- (void)setAccountFieldEnabled:(BOOL)arg1;
- (BOOL)showReplyToHeader;
- (BOOL)showBccHeader;
- (BOOL)showCcHeader;
- (BOOL)securityFieldVisible;
- (void)setSecurityFieldVisible:(BOOL)arg1;
- (void)setPriorityFieldVisible:(BOOL)arg1;
- (void)_setPriorityFieldVisible:(BOOL)arg1 andSetDefault:(BOOL)arg2;
- (void)setDeliveryFieldVisible:(BOOL)arg1;
- (void)setSignatureFieldVisible:(BOOL)arg1;
- (void)setAccountFieldVisible:(BOOL)arg1;
- (void)setReplyToFieldVisible:(BOOL)arg1;
- (void)_setReplyToFieldVisible:(BOOL)arg1 andSetDefault:(BOOL)arg2;
- (void)setBccFieldVisible:(BOOL)arg1;
- (void)_setBccFieldVisible:(BOOL)arg1 andSetDefault:(BOOL)arg2;
- (void)setCcFieldVisible:(BOOL)arg1;
- (void)_setCcFieldVisible:(BOOL)arg1 andSetDefault:(BOOL)arg2;
- (void)configureSignaturePopUpSize;
- (void)configureAccountPopUpSize;
- (void)configureHeaders:(id)arg1;
- (void)temporarilyTogglePriorityFieldVisibility;
- (void)togglePriorityFieldVisibility:(id)arg1;
- (void)_toggleAccountOrDeliveryOrSignatureOrPriorityOrSecurityField:(id)arg1;
- (void)temporarilyToggleReplyToFieldVisibility;
- (void)temporarilyToggleBccFieldVisibility;
- (void)temporarilyToggleCcFieldVisibility;
- (void)toggleReplyToFieldVisibility:(id)arg1;
- (void)toggleBccFieldVisibility:(id)arg1;
- (void)toggleCcFieldVisibility:(id)arg1;
- (void)_toggleCcOrBccOrReplyToField:(id)arg1;
- (void)done:(id)arg1;
- (void)_finishCustomizingSavingChanges:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_sanityCheckHiddenessOfViewsInAnimationList:(id)arg1;
- (void)_enableActionMenu:(BOOL)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_customizeHeaders:(BOOL)arg1 duration:(double)arg2;
- (void)_recordUserCustomization;
- (void)_addView:(id)arg1 toList:(id)arg2 isVisible:(BOOL)arg3 adjustYOrigin:(BOOL)arg4;
- (void)tile;
- (void)_fixupTabRing;
- (BOOL)_isDisplayingFatBottomControls;
- (BOOL)_isDisplayingBottomControls;
- (void)_subviewFrameDidChange:(id)arg1;
- (void)_calculateAccountFrame:(struct CGRect *)arg1 deliveryFrame:(struct CGRect *)arg2 signatureFrame:(struct CGRect *)arg3;
- (struct CGRect)_calculatePriorityFrame:(struct CGRect)arg1;
- (struct CGRect)_calculateSecurityFrame:(struct CGRect)arg1;
- (BOOL)_shouldShowPriorityView;
- (BOOL)_shouldShowPriorityViewWhenCustomizing;
- (BOOL)_shouldShowPriorityViewWhenNotCustomizing;
- (BOOL)shouldShowDeliveryView;
- (BOOL)_shouldShowDeliveryViewWhenCustomizing;
- (void)_recomputeShowDeliveryView;
- (void)deliveryViewAppearanceConditionsDidChange:(id)arg1;
- (BOOL)_shouldShowDeliveryViewWhenNotCustomizing;
- (BOOL)_shouldShowSignatureView;
- (BOOL)_shouldShowSignatureViewWhenCustomizing;
- (BOOL)_shouldShowSignatureViewWhenNotCustomizing;
- (BOOL)_shouldShowAccountView;
- (BOOL)_shouldShowAccountViewWhenCustomizing;
- (BOOL)_shouldShowAccountViewWhenNotCustomizing;
- (BOOL)_shouldShowSecurityView;
- (BOOL)_shouldShowSecurityViewWhenCustomizing;
- (BOOL)_shouldShowSecurityViewWhenNotCustomizing;
- (void)_setupSecurityViewInBackground;
- (double)_positionView:(id)arg1 yOffset:(double)arg2;
- (void)_setupActionMenuItemState;
- (void)_setupMenuItemWithAction:(SEL)arg1 withState:(BOOL)arg2;
- (void)beginListeningForChildFrameChangeNotifications;
- (void)_readVisibleStateFromOptionCheckboxes;
- (void)_popDisclosureButtonToFront;
- (void)_noteCurrentFirstResponder;
- (void)_restoreFirstResponder;
- (BOOL)isCustomizing;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)setMessageContentView:(id)arg1;
- (id)messageContentView;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface ComposeSpellChecker : NSSpellChecker
{
}

- (void)closeSpellDocumentWithTag:(long long)arg1;
- (id)spellingPanel;
- (long long)requestCheckingOfString:(id)arg1 range:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 completionHandler:(id)arg6;
- (id)checkString:(id)arg1 range:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 orthography:(id *)arg6 wordCount:(long long *)arg7;
- (BOOL)_mail_unifiedTextCheckingResultsHaveErrors:(id)arg1;
- (void)_mail_didCheckSpellDocumentWithTag:(long long)arg1 hasErrors:(BOOL)arg2;
- (void)_mail_willCheckSpellDocumentWithTag:(long long)arg1;
- (void)_mail_spellPanelDidClose:(id)arg1;
- (void)_mail_postingTimerFired:(id)arg1;
- (long long)currentSpellDocumentTag;
- (void)setPostCompletedNotification:(BOOL)arg1 forSpellDocumentWithTag:(long long)arg2;
- (void)_mail_removeObjectForSpellDocumentTag:(long long)arg1;
- (id)_mail_objectForSpellDocumentTag:(long long)arg1;
- (void)_mail_setObject:(id)arg1 forSpellDocumentTag:(long long)arg2;

@end

@interface ComposeStatusView : NSView
{
    double _originalMaxXPositionForImageStatus;
    BOOL _imageResizingVisible;
    BOOL _URLPickerVisible;
    BOOL _findBarIsVisible;
    NSTextField *_imageFileSizeLabel;
    NSTextField *_imageFileSizeTextField;
    NSTextField *_imageSizeLabel;
    NSPopUpButton *_imageSizePopup;
    NSProgressIndicator *_imageResizingProgressWheel;
    NSTextField *_imageResizingProgressField;
    NSTextField *_URLPickerLabel;
    NSPopUpButton *_URLPickerButton;
}

@property(retain, nonatomic) NSPopUpButton *URLPickerButton; // @synthesize URLPickerButton=_URLPickerButton;
@property(retain, nonatomic) NSTextField *URLPickerLabel; // @synthesize URLPickerLabel=_URLPickerLabel;
@property(retain, nonatomic) NSTextField *imageResizingProgressField; // @synthesize imageResizingProgressField=_imageResizingProgressField;
@property(retain, nonatomic) NSProgressIndicator *imageResizingProgressWheel; // @synthesize imageResizingProgressWheel=_imageResizingProgressWheel;
@property(retain, nonatomic) NSPopUpButton *imageSizePopup; // @synthesize imageSizePopup=_imageSizePopup;
@property(retain, nonatomic) NSTextField *imageSizeLabel; // @synthesize imageSizeLabel=_imageSizeLabel;
@property(retain, nonatomic) NSTextField *imageFileSizeTextField; // @synthesize imageFileSizeTextField=_imageFileSizeTextField;
@property(retain, nonatomic) NSTextField *imageFileSizeLabel; // @synthesize imageFileSizeLabel=_imageFileSizeLabel;
- (void)drawRect:(struct CGRect)arg1;
- (id)_imageFileSizeView;
- (id)_imageResizingView;
- (BOOL)canHideStatusBar;
- (void)setImageResizePickerVisible:(BOOL)arg1;
- (void)setURLPickerVisible:(BOOL)arg1;
- (void)_layoutSubviews;
- (void)_resizeImageResizeLabels;
- (void)_findBarContainerDidChangeFindBarVisibility:(id)arg1;
- (void)_viewBoundsChanged:(id)arg1;
- (void)dealloc;
- (void)_setEngravedStatusForTextField:(id)arg1;
- (void)viewDidMoveToSuperview;
- (id)_findBarContainer;
- (void)awakeFromNib;

@end

@interface ComposeView : NSView
{
    BOOL _allowShowingOfCcBccFromField;
    NSView *_headerView;
    MUIWebDocumentView *_webDocumentView;
    ComposeViewController *_controller;
    MUIAddressField *_toField;
    NSView *_ccBccFromView;
    NSTextField *_ccBccFromField;
    NSLayoutConstraint *_ccBccFromHeightConstraint;
    NSLayoutConstraint *_ccBccFromCurrentHeightConstraint;
    NSView *_ccView;
    MUIAddressField *_ccField;
    NSLayoutConstraint *_ccHeightConstraint;
    NSLayoutConstraint *_ccCurrentHeightConstraint;
    NSView *_bccView;
    MUIAddressField *_bccField;
    NSLayoutConstraint *_bccHeightConstraint;
    NSLayoutConstraint *_bccCurrentHeightConstraint;
    NSView *_replyToView;
    MUIAddressField *_replyToField;
    NSLayoutConstraint *_replyToHeightConstraint;
    NSLayoutConstraint *_replyToCurrentHeightConstraint;
    NSView *_subjectView;
    NSTextField *_subjectField;
    NSLayoutConstraint *_subjectTrailingConstraint;
    NSView *_fromView;
    NSPopUpButton *_fromPopupButton;
    NSPopUpButton *_deliveryPopupButton;
    NSLayoutConstraint *_fromHeightConstraint;
    NSLayoutConstraint *_fromCurrentHeightConstraint;
    NSView *_signatureView;
    NSLayoutConstraint *_signatureHeightConstraint;
    NSLayoutConstraint *_signatureCurrentHeightConstraint;
    NSLayoutConstraint *_signatureTrailingConstraint;
    NSPopUpButton *_priorityPopupButton;
    NSLayoutConstraint *_priorityWidthConstraint;
    NSLayoutConstraint *_priorityCurrentWidthConstraint;
    NSView *_securityView;
    NSButton *_encryptButton;
    NSButton *_signButton;
    NSLayoutConstraint *_securityWidthConstraint;
    NSLayoutConstraint *_securityCurrentWidthConstraint;
    NSPopUpButton *_fieldSelectorPopupButton;
    NSLayoutConstraint *_bottomMostElementTrailingToFieldsSelectorConstraint;
    NSButton *_sendButton;
}

@property(nonatomic) NSButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) NSLayoutConstraint *bottomMostElementTrailingToFieldsSelectorConstraint; // @synthesize bottomMostElementTrailingToFieldsSelectorConstraint=_bottomMostElementTrailingToFieldsSelectorConstraint;
@property(nonatomic) NSPopUpButton *fieldSelectorPopupButton; // @synthesize fieldSelectorPopupButton=_fieldSelectorPopupButton;
@property(retain, nonatomic) NSLayoutConstraint *securityCurrentWidthConstraint; // @synthesize securityCurrentWidthConstraint=_securityCurrentWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *securityWidthConstraint; // @synthesize securityWidthConstraint=_securityWidthConstraint;
@property(nonatomic) NSButton *signButton; // @synthesize signButton=_signButton;
@property(nonatomic) NSButton *encryptButton; // @synthesize encryptButton=_encryptButton;
@property(nonatomic) NSView *securityView; // @synthesize securityView=_securityView;
@property(retain, nonatomic) NSLayoutConstraint *priorityCurrentWidthConstraint; // @synthesize priorityCurrentWidthConstraint=_priorityCurrentWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *priorityWidthConstraint; // @synthesize priorityWidthConstraint=_priorityWidthConstraint;
@property(nonatomic) NSPopUpButton *priorityPopupButton; // @synthesize priorityPopupButton=_priorityPopupButton;
@property(retain, nonatomic) NSLayoutConstraint *signatureTrailingConstraint; // @synthesize signatureTrailingConstraint=_signatureTrailingConstraint;
@property(retain, nonatomic) NSLayoutConstraint *signatureCurrentHeightConstraint; // @synthesize signatureCurrentHeightConstraint=_signatureCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *signatureHeightConstraint; // @synthesize signatureHeightConstraint=_signatureHeightConstraint;
@property(nonatomic) NSView *signatureView; // @synthesize signatureView=_signatureView;
@property(retain, nonatomic) NSLayoutConstraint *fromCurrentHeightConstraint; // @synthesize fromCurrentHeightConstraint=_fromCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *fromHeightConstraint; // @synthesize fromHeightConstraint=_fromHeightConstraint;
@property(nonatomic) NSPopUpButton *deliveryPopupButton; // @synthesize deliveryPopupButton=_deliveryPopupButton;
@property(nonatomic) NSPopUpButton *fromPopupButton; // @synthesize fromPopupButton=_fromPopupButton;
@property(nonatomic) NSView *fromView; // @synthesize fromView=_fromView;
@property(retain, nonatomic) NSLayoutConstraint *subjectTrailingConstraint; // @synthesize subjectTrailingConstraint=_subjectTrailingConstraint;
@property(nonatomic) NSTextField *subjectField; // @synthesize subjectField=_subjectField;
@property(nonatomic) NSView *subjectView; // @synthesize subjectView=_subjectView;
@property(retain, nonatomic) NSLayoutConstraint *replyToCurrentHeightConstraint; // @synthesize replyToCurrentHeightConstraint=_replyToCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *replyToHeightConstraint; // @synthesize replyToHeightConstraint=_replyToHeightConstraint;
@property(nonatomic) MUIAddressField *replyToField; // @synthesize replyToField=_replyToField;
@property(nonatomic) NSView *replyToView; // @synthesize replyToView=_replyToView;
@property(retain, nonatomic) NSLayoutConstraint *bccCurrentHeightConstraint; // @synthesize bccCurrentHeightConstraint=_bccCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *bccHeightConstraint; // @synthesize bccHeightConstraint=_bccHeightConstraint;
@property(nonatomic) MUIAddressField *bccField; // @synthesize bccField=_bccField;
@property(nonatomic) NSView *bccView; // @synthesize bccView=_bccView;
@property(retain, nonatomic) NSLayoutConstraint *ccCurrentHeightConstraint; // @synthesize ccCurrentHeightConstraint=_ccCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *ccHeightConstraint; // @synthesize ccHeightConstraint=_ccHeightConstraint;
@property(nonatomic) MUIAddressField *ccField; // @synthesize ccField=_ccField;
@property(nonatomic) NSView *ccView; // @synthesize ccView=_ccView;
@property(retain, nonatomic) NSLayoutConstraint *ccBccFromCurrentHeightConstraint; // @synthesize ccBccFromCurrentHeightConstraint=_ccBccFromCurrentHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *ccBccFromHeightConstraint; // @synthesize ccBccFromHeightConstraint=_ccBccFromHeightConstraint;
@property(nonatomic) NSTextField *ccBccFromField; // @synthesize ccBccFromField=_ccBccFromField;
@property(nonatomic) NSView *ccBccFromView; // @synthesize ccBccFromView=_ccBccFromView;
@property(nonatomic) MUIAddressField *toField; // @synthesize toField=_toField;
@property(nonatomic) ComposeViewController *controller; // @synthesize controller=_controller;
@property(nonatomic) MUIWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(nonatomic) NSView *headerView; // @synthesize headerView=_headerView;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)_setupKeyViewLoop;
- (void)animateCcBccFromChange;
- (void)toggleSecurity:(id)arg1;
- (void)togglePriority:(id)arg1;
- (void)toggleSignature:(id)arg1;
- (void)toggleReplyTo:(id)arg1;
- (void)_synchronizeCcBccFromUI;
- (BOOL)_isShowingFromField;
- (BOOL)_isShowingBccField;
- (BOOL)_isShowingCcField;
- (BOOL)_isShowingCcBccFromField;
- (id)_fieldInFocus;
- (BOOL)_showCcBccFromField;
@property(nonatomic) BOOL allowShowingOfCcBccFromField;
- (void)_synchronizeSecurityUI;
- (BOOL)_isShowingSecurityControls;
@property(nonatomic) BOOL showSecurityControls;
- (void)_synchronizePriorityUI;
- (BOOL)_isShowingPriorityControl;
@property(nonatomic) BOOL showPriorityControl;
- (void)_synchronizeSignatureUI;
- (BOOL)_isShowingSignatureField;
@property(nonatomic) BOOL showSignatureField;
- (void)_synchronizeReplyToUI;
- (BOOL)_isShowingReplyToField;
@property(nonatomic) BOOL showReplyToField;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface ComposeViewController : NSViewController <AccountStatusDataSourceDelegate, MCActivityTarget, NSUserInterfaceValidations>
{
    id <ComposeViewControllerDelegate> _delegate;
    NSOperationQueue *_workerQueue;
    AccountStatusDataSource *_deliveryAccountStatusDataSource;
    NewDeliveryFailure *_deliveryFailure;
}

@property(retain, nonatomic) NewDeliveryFailure *deliveryFailure; // @synthesize deliveryFailure=_deliveryFailure;
@property(retain, nonatomic) AccountStatusDataSource *deliveryAccountStatusDataSource; // @synthesize deliveryAccountStatusDataSource=_deliveryAccountStatusDataSource;
@property(readonly) NSOperationQueue *workerQueue; // @synthesize workerQueue=_workerQueue;
@property(nonatomic) id <ComposeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (BOOL)_alwaysCcOrBccMyself;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)_updateActiveField;
- (void)addAttachments:(id)arg1;
- (void)discard;
- (void)saveMessageToDrafts:(id)arg1;
- (void)finishEditing;
- (void)reportDeliveryFailure:(id)arg1;
- (void)_didAppendMessageToOutboxWithResult:(int)arg1 error:(id)arg2;
- (void)_saveRecipients;
- (void)_appendMessageToOutboxInBackground:(id)arg1;
- (void)sendMessageAfterChecking:(id)arg1;
- (void)send:(id)arg1;
- (void)_updateSendButton;
- (BOOL)_allowSend;
- (void)_updateSecurityControls;
- (void)_updateShowCcBccFrom;
- (id)_dynamicDeliveryAccountForAccount:(id)arg1;
- (void)_updateDeliveryPopupWithAccount:(id)arg1;
- (void)_updateComposeViewWithFrom:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)isSignedChanged:(id)arg1;
- (void)isEncryptedChanged:(id)arg1;
- (void)signatureChanged:(id)arg1;
- (void)priorityChanged:(id)arg1;
- (void)subjectChanged:(id)arg1;
- (void)setDeliveryAccount:(id)arg1;
- (void)_setDeliveryAccountWithFromAccount:(id)arg1;
- (void)setSelectedAccount:(id)arg1;
- (void)fromChanged:(id)arg1;
- (void)_replyToChanged:(id)arg1;
- (void)_bccChanged:(id)arg1;
- (void)_ccChanged:(id)arg1;
- (void)_toChanged:(id)arg1;
- (void)awakeFromNib;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (id)view;
- (id)nibName;
- (void)dealloc;
- (void)_composeViewControllerCommonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

@end

@interface ComposeWindow : NSWindow
{
}

@end

@interface ComposeWindowController : NSWindowController <ComposeViewControllerDelegate, NSWindowDelegate>
{
    BOOL _userWantsToCloseWindow;
    ComposeViewController *_composeViewController;
}

+ (void)initialize;
@property(nonatomic) BOOL userWantsToCloseWindow; // @synthesize userWantsToCloseWindow=_userWantsToCloseWindow;
@property(retain, nonatomic) ComposeViewController *composeViewController; // @synthesize composeViewController=_composeViewController;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)composeViewDidSaveSuccessfully:(BOOL)arg1;
- (BOOL)composeViewShouldAllowUserToIgnoreSaveFailure;
- (void)composeViewDidSend;
- (void)composeViewFinishedEditing;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)awakeFromNib;
- (id)windowNibName;
- (void)dealloc;
- (id)init;

@end

@interface ComposingPreferences : NSPreferencesModule <AccountStatusDataSourceDelegate>
{
    NSPopUpButton *_defaultFormatButton;
    NSButton *_alwaysCCMyselfSwitch;
    NSPopUpButton *_ccOrBccButton;
    NSButton *_replyUsingSameFormatSwitch;
    NSButton *_expandAliasesSwitch;
    NSButton *_useQuoteBarsSwitch;
    NSPopUpButton *_spellCheckingPopUpButton;
    NSButton *_replyQuotingSwitch;
    NSMatrix *_quotingBehaviorMatrix;
    NSTextField *_quotingBehaviorLabel;
    NSButton *_matchDomainsSwitch;
    NSTextField *_matchingDomainField;
    NSPopUpButton *_sendingAccountButton;
    BOOL _endEditingSimply;
}

- (void)sendingAccountClicked:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)matchDomainsClicked:(id)arg1;
- (void)_setComposeMode:(long long)arg1;
- (void)defaultMessageFormatChanged:(id)arg1;
- (void)expandAliasesClicked:(id)arg1;
- (void)alwaysCCMyselfClicked:(id)arg1;
- (void)spellCheckingBehaviorChanged:(id)arg1;
- (void)quotingBehaviorChanged:(id)arg1;
- (void)replyQuotingBehaviorChanged:(id)arg1;
- (void)useQuoteBarsClicked:(id)arg1;
- (void)replyUsingSameFormatClicked:(id)arg1;
- (void)initializeFromDefaults;
- (void)_sizeToFitWithinSuperview:(id)arg1;
- (void)_postComposePreferencesChanged;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)configureMenuItem:(id)arg1 forAccount:(id)arg2;

@end

@interface ConnectionDoctor : NSObject <AccountStatusDataSourceDelegate, MCConnectionLogging>
{
    AccountStatusDataSource *_deliveryASDS;
    NSMutableString *_detailBuffer;
    NSArray *_savedLogClasses;
    NSWindow *_window;
    NSTableView *_tableView;
    NSImageView *_internetStatusIndicator;
    NSProgressIndicator *_internetStatusProgressIndicator;
    NSTextField *_internetStatusField;
    NSButton *_checkStatusButton;
    NSButton *_assistMeButton;
    NSTextView *_ispInfoField;
    NSDrawer *_detailDrawer;
    NSButton *_detailButton;
    NSView *_detailView;
    NSTextView *_detailTextView;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(nonatomic) NSTextView *detailTextView; // @synthesize detailTextView=_detailTextView;
@property(retain, nonatomic) NSView *detailView; // @synthesize detailView=_detailView;
@property(nonatomic) NSButton *detailButton; // @synthesize detailButton=_detailButton;
@property(retain, nonatomic) NSDrawer *detailDrawer; // @synthesize detailDrawer=_detailDrawer;
@property(nonatomic) NSTextView *ispInfoField; // @synthesize ispInfoField=_ispInfoField;
@property(nonatomic) NSButton *assistMeButton; // @synthesize assistMeButton=_assistMeButton;
@property(nonatomic) NSButton *checkStatusButton; // @synthesize checkStatusButton=_checkStatusButton;
@property(nonatomic) NSTextField *internetStatusField; // @synthesize internetStatusField=_internetStatusField;
@property(nonatomic) NSProgressIndicator *internetStatusProgressIndicator; // @synthesize internetStatusProgressIndicator=_internetStatusProgressIndicator;
@property(nonatomic) NSImageView *internetStatusIndicator; // @synthesize internetStatusIndicator=_internetStatusIndicator;
@property(nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)flushLog;
- (void)logBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)_flushLog;
- (void)toggleDetail:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)assistMeClicked:(id)arg1;
- (void)checkAccounts:(id)arg1;
- (void)_didRefreshStatusForAllAccounts:(id)arg1;
- (void)_willRefreshStatusForAllAccounts:(id)arg1;
- (void)_didCheckInternetConnection:(id)arg1;
- (void)_willCheckInternetConnection:(id)arg1;
- (void)show;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface ContentSplitViewController : NSObject <NSSplitViewDelegate>
{
    BOOL _keepCurrentRowVisible;
    BOOL _previewPaneIsVisible;
    MessageViewer *_messageViewer;
    MailTableView *_messageList;
    MailSplitView *_contentSplitView;
    NSView *_previewPane;
    NSView *_messageListPane;
}

@property(nonatomic) NSView *messageListPane; // @synthesize messageListPane=_messageListPane;
@property(nonatomic) NSView *previewPane; // @synthesize previewPane=_previewPane;
@property(nonatomic) MailSplitView *contentSplitView; // @synthesize contentSplitView=_contentSplitView;
@property(nonatomic) MailTableView *messageList; // @synthesize messageList=_messageList;
@property(nonatomic) MessageViewer *messageViewer; // @synthesize messageViewer=_messageViewer;
- (void)updateDividerStyle;
@property(readonly, nonatomic) struct CGSize minimumPreviewPaneSize;
@property(readonly, nonatomic) struct CGSize minimumMessageListSize;
- (void)_splitView:(id)arg1 verticallyResizeSubviewsWithNewSize:(struct CGSize)arg2 messageListRect:(struct CGRect *)arg3 previewPaneRect:(struct CGRect *)arg4;
- (void)_splitView:(id)arg1 horizontallyResizeSubviewsWithNewSize:(struct CGSize)arg2 messageListRect:(struct CGRect *)arg3 previewPaneRect:(struct CGRect *)arg4;
- (void)frameRectsWithNewSize:(struct CGSize)arg1 messageListRect:(struct CGRect *)arg2 previewPaneRect:(struct CGRect *)arg3;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@property(nonatomic) BOOL previewPaneIsVisible;

@end

@interface Conversation : NSObject <NSCopying>
{
    NSMutableArray *_primitiveOrderedConversationMembers;
    NSArray *_orderedConversationMembers;
    NSMutableDictionary *_conversationMemberByMessage;
    NSMutableDictionary *_conversationMemberByMessageID;
    BOOL _conversationMembersLoaded;
    BOOL _isRegisteredForConversationUpdates;
    BOOL _shouldLogConversationViewUpdates;
    long long _conversationID;
    MFCriterion *_mailboxCriterion;
    NSArray *_initialMessages;
    NSSet *_initialPrimaryMessages;
    long long _loadBehavior;
    id _conversationMembersLoadedCompletionHandler;
}

+ (BOOL)automaticallyNotifiesObserversOfOrderedConversationMembers;
+ (id)keyPathsForValuesAffectingMessages;
@property(readonly, nonatomic) BOOL shouldLogConversationViewUpdates; // @synthesize shouldLogConversationViewUpdates=_shouldLogConversationViewUpdates;
@property(copy, nonatomic) id conversationMembersLoadedCompletionHandler; // @synthesize conversationMembersLoadedCompletionHandler=_conversationMembersLoadedCompletionHandler;
@property(nonatomic) BOOL isRegisteredForConversationUpdates; // @synthesize isRegisteredForConversationUpdates=_isRegisteredForConversationUpdates;
@property(nonatomic) BOOL conversationMembersLoaded; // @synthesize conversationMembersLoaded=_conversationMembersLoaded;
@property(nonatomic) long long loadBehavior; // @synthesize loadBehavior=_loadBehavior;
@property(copy, nonatomic) NSSet *initialPrimaryMessages; // @synthesize initialPrimaryMessages=_initialPrimaryMessages;
@property(copy, nonatomic) NSArray *initialMessages; // @synthesize initialMessages=_initialMessages;
@property(retain, nonatomic) MFCriterion *mailboxCriterion; // @synthesize mailboxCriterion=_mailboxCriterion;
@property(nonatomic) long long conversationID; // @synthesize conversationID=_conversationID;
- (void)unhideMessages:(id)arg1;
- (void)hideMessages:(id)arg1;
- (void)markConversationMembersAsRead:(id)arg1;
- (void)_conversationMessagesFlagsChanged:(id)arg1;
- (void)_conversationMessagesCompacted:(id)arg1;
- (void)_conversationMessagesUpdated:(id)arg1;
- (void)_conversationsUpdated:(id)arg1;
- (void)_conversationMessagesLoaded:(id)arg1;
- (void)_updateConversationMembersWithAddedMessages:(id)arg1 primaryMessages:(id)arg2;
- (void)_removeMessage:(id)arg1 fromConversationMember:(id)arg2;
- (void)_addMessage:(id)arg1 isPrimary:(BOOL)arg2 toConversationMember:(id)arg3;
- (void)_removeConversationMember:(id)arg1;
- (void)_addNewConversationMember:(id)arg1;
- (void)_updateMessageNumbers;
- (void)_updateOrderedConversationMembers;
- (void)_quickFetchTimeout;
- (void)asyncLoadConversationMembers:(id)arg1;
@property(copy, nonatomic) NSArray *orderedConversationMembers;
@property(readonly, nonatomic) NSSet *messages;
- (id)_orderingComparator;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)initWithConversationID:(long long)arg1 mailboxCriterion:(id)arg2 initialMessages:(id)arg3 initialPrimaryMessages:(id)arg4 loadBehavior:(long long)arg5;
- (id)init;

@end

@interface ConversationCellView : NSView
{
    NSViewController *_viewController;
    BOOL _emphasized;
    BOOL _selected;
    BOOL _focused;
    BOOL _primary;
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSLayoutConstraint *_midXConstraint;
    NSLayoutConstraint *_minYConstraint;
    CALayer *_shadowLayer;
    CALayer *_overlayLayer;
}

+ (BOOL)requiresConstraintBasedLayout;
@property(retain, nonatomic) CALayer *overlayLayer; // @synthesize overlayLayer=_overlayLayer;
@property(retain, nonatomic) CALayer *shadowLayer; // @synthesize shadowLayer=_shadowLayer;
@property(retain, nonatomic) NSLayoutConstraint *minYConstraint; // @synthesize minYConstraint=_minYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *midXConstraint; // @synthesize midXConstraint=_midXConstraint;
@property(retain, nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)updateLayer;
- (id)makeBackingLayer;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)_enclosingConversationView;
@property(nonatomic) BOOL primary;
@property(nonatomic) BOOL focused;
@property(nonatomic) BOOL selected;
@property(nonatomic) BOOL emphasized;
@property(retain, nonatomic) NSViewController *viewController;
- (BOOL)wantsUpdateLayer;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)clipsToBounds;
- (void)dealloc;

@end

@interface ConversationHeightStorage : NSObject
{
    double _height;
    double _spacing;
    NSMutableArray *_heights;
    NSMutableArray *_yCache;
}

+ (id)keyPathsForValuesAffectingCount;
@property(readonly, nonatomic) NSMutableArray *yCache; // @synthesize yCache=_yCache;
@property(readonly, nonatomic) NSMutableArray *heights; // @synthesize heights=_heights;
@property(nonatomic) double spacing; // @synthesize spacing=_spacing;
@property(nonatomic) double height; // @synthesize height=_height;
- (unsigned long long)indexAtY:(double)arg1;
- (double)maxYOfIndex:(unsigned long long)arg1;
- (double)minYOfIndex:(unsigned long long)arg1;
- (double)heightOfIndex:(unsigned long long)arg1;
- (void)setHeight:(double)arg1 ofIndex:(unsigned long long)arg2;
- (void)_invalidateCacheForIndex:(unsigned long long)arg1;
- (void)removeAllHeights;
- (void)removeHeightAtIndex:(unsigned long long)arg1;
- (void)moveHeightAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)addHeight:(double)arg1;
- (void)insertHeight:(double)arg1 atIndex:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (void)dealloc;
- (id)init;

@end

@interface ConversationMember : NSObject <NSCopying>
{
    NSMutableSet *_primitiveMessages;
    NSMutableSet *_primaryMessages;
    NSMutableSet *_hiddenMessages;
    BOOL _isPrimary;
    BOOL _isDeleted;
    unsigned long long _messageNumber;
    MCMessage *_originalMessage;
    NSImage *_senderImage;
    BOOL _senderIsVIP;
    int _conversationPosition;
    BOOL _primitiveIsUnread;
    BOOL _primitiveIsFlagged;
    NSIndexSet *_primitiveFlagColors;
    unsigned long long _primitiveJunkStatus;
    BOOL _isEncrypted;
    BOOL _isSigned;
    NSArray *_signers;
    NSArray *_signerNames;
    BOOL _bodyCached;
    BOOL _registeredForNotifications;
    BOOL _shouldLogConversationViewUpdates;
    BOOL _senderImageLoadedOrTimedOut;
    MCMessageHeaders *_headers;
    Conversation *_conversation;
    NSArray *_messages;
    WebDocumentGenerator *_documentGenerator;
}

+ (id)keyPathsForValuesAffectingJunkStatus;
+ (id)keyPathsForValuesAffectingFlagColors;
+ (id)keyPathsForValuesAffectingIsFlagged;
+ (id)keyPathsForValuesAffectingIsUnread;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingMessageBody;
+ (id)keyPathsForValuesAffectingAttachmentSize;
+ (id)keyPathsForValuesAffectingNumberOfAttachments;
+ (id)keyPathsForValuesAffectingMailboxName;
+ (id)keyPathsForValuesAffectingDateReceived;
+ (id)keyPathsForValuesAffectingSubject;
+ (id)keyPathsForValuesAffectingBccRecipients;
+ (id)keyPathsForValuesAffectingCcRecipients;
+ (id)keyPathsForValuesAffectingToRecipients;
+ (id)keyPathsForValuesAffectingSender;
+ (id)keyPathsForValuesAffectingMessageIDHeaderDigest;
+ (id)keyPathsForValuesAffectingWebDocument;
+ (id)flagsAffectingConversationMember;
@property(nonatomic) BOOL senderImageLoadedOrTimedOut; // @synthesize senderImageLoadedOrTimedOut=_senderImageLoadedOrTimedOut;
@property(readonly, nonatomic) BOOL shouldLogConversationViewUpdates; // @synthesize shouldLogConversationViewUpdates=_shouldLogConversationViewUpdates;
@property(nonatomic) BOOL registeredForNotifications; // @synthesize registeredForNotifications=_registeredForNotifications;
@property(nonatomic) BOOL bodyCached; // @synthesize bodyCached=_bodyCached;
@property(retain, nonatomic) WebDocumentGenerator *documentGenerator; // @synthesize documentGenerator=_documentGenerator;
@property(copy, nonatomic) NSArray *messages; // @synthesize messages=_messages;
@property(nonatomic) Conversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) MCMessageHeaders *headers; // @synthesize headers=_headers;
- (id)messagesInSameMailboxAsOriginalMessage;
- (BOOL)isPrimaryMessage:(id)arg1;
- (void)unhideMessage:(id)arg1;
- (void)hideMessage:(id)arg1;
- (void)removeMessage:(id)arg1;
- (void)addMessage:(id)arg1 isPrimary:(BOOL)arg2;
- (id)_preferredOriginalMessage;
- (void)_reloadOriginalMessage;
- (BOOL)_messageIsInSent:(id)arg1;
- (BOOL)_messageIsInTrashJunkOrOutbox:(id)arg1;
- (BOOL)_messageIsDeleted:(id)arg1;
- (BOOL)_shouldDisplayMessage:(id)arg1;
- (void)updateLastViewedDate;
- (void)_reloadSenderIsVIP;
- (void)_VIPSendersDidChange:(id)arg1;
- (void)_reloadValuesForAggregateFlags;
- (void)flagsChangedForMessage:(id)arg1;
@property(nonatomic) unsigned long long junkStatus;
@property(copy, nonatomic) NSIndexSet *flagColors;
@property(nonatomic) BOOL isFlagged;
@property(nonatomic) BOOL isUnread;
- (void)_addressPhotoChanged:(id)arg1;
- (void)_addressPhotoLoaded:(id)arg1;
- (void)_asyncLoadSenderImage;
- (void)_senderImageTimedOut;
@property(nonatomic) unsigned long long primitiveJunkStatus;
@property(copy, nonatomic) NSIndexSet *primitiveFlagColors;
@property(nonatomic) BOOL primitiveIsFlagged;
@property(nonatomic) BOOL primitiveIsUnread;
@property(nonatomic) int conversationPosition;
@property(nonatomic) BOOL senderIsVIP;
@property(retain, nonatomic) NSImage *senderImage;
@property(retain, nonatomic) MCMessage *originalMessage;
@property(nonatomic) unsigned long long messageNumber;
@property(nonatomic) BOOL isDeleted;
@property(nonatomic) BOOL isPrimary;
- (void)_reloadSecurityProperties;
@property(retain, nonatomic) NSArray *signerNames;
@property(retain, nonatomic) NSArray *signers;
@property(nonatomic) BOOL isSigned;
@property(nonatomic) BOOL isEncrypted;
@property(readonly, nonatomic) MCMessageBody *messageBody;
@property(readonly, nonatomic) unsigned long long attachmentSize;
@property(readonly, nonatomic) unsigned long long numberOfAttachments;
@property(readonly, nonatomic) NSString *mailboxName;
@property(readonly, nonatomic) NSDate *dateReceived;
@property(readonly, nonatomic) NSString *subject;
@property(readonly, nonatomic) NSArray *bccRecipients;
@property(readonly, nonatomic) NSArray *ccRecipients;
@property(readonly, nonatomic) NSArray *toRecipients;
@property(readonly, nonatomic) NSString *sender;
@property(readonly, nonatomic) NSData *messageIDHeaderDigest;
@property(readonly, nonatomic) MUIWebDocument *webDocument;
- (void)cancelLoad;
- (void)asyncLoad:(id)arg1;
- (void)invalidate;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithMessages:(id)arg1 primaryMessages:(id)arg2 forConversation:(id)arg3;
- (id)initWithMessage:(id)arg1 isPrimary:(BOOL)arg2 forConversation:(id)arg3;
- (id)init;

@end

@interface ConversationMemberArrayController : NSArrayController
{
    MCMessage *_focusedMessage;
    BOOL _temporarilyToggleRelatedMessages;
    NSMutableSet *_directlyLinkedSentMessages;
}

+ (id)keyPathsForValuesAffectingHasRelatedMessages;
@property(retain, nonatomic) NSMutableSet *directlyLinkedSentMessages; // @synthesize directlyLinkedSentMessages=_directlyLinkedSentMessages;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateDirectlyLinkedSentMessagesForContent:(id)arg1;
- (void)_updateFilterPredicate;
@property(readonly, nonatomic) BOOL viewingRelatedMessages;
@property(readonly, nonatomic) BOOL hasRelatedMessages;
@property(nonatomic) BOOL temporarilyToggleRelatedMessages;
- (void)resetConversationState;
@property(retain, nonatomic) MCMessage *focusedMessage;
- (id)arrangeObjects:(id)arg1;
- (id)automaticRearrangementKeyPaths;
- (BOOL)automaticallyRearrangesObjects;
- (void)setContent:(id)arg1;
- (void)dealloc;
- (void)_conversationMemberArrayControllerCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;

@end

@interface ConversationsObserver : NSObject
{
    NSOperationQueue *_workQueue;
    NSCountedSet *_registeredConversationIDs;
    NSMutableDictionary *_mailboxCriterionByConversationID;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_libraryMessagesFlagsChanged:(id)arg1;
- (void)_libraryMessagesUpdated:(id)arg1;
- (void)_libraryMessagesCompacted:(id)arg1;
- (void)_libraryConversationsWereChanged:(id)arg1;
- (void)_updateRegistrationForConversation:(id)arg1 withNewConversationID:(id)arg2;
- (BOOL)_isRegistered:(id)arg1;
- (void)unregisterConversationID:(long long)arg1;
- (void)registerConversationID:(long long)arg1 withMailboxCriterion:(id)arg2;
- (unsigned int)_loadOptions;
- (id)_criterionForConversationID:(id)arg1;
- (id)_primaryMessagesForConversationIDNumber:(id)arg1;
- (id)_primaryMessagesForConversations:(id)arg1;
- (id)_allMessagesForConversationIDNumber:(id)arg1;
- (id)_allMessagesForConversations:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface ConversationView : NSView <NSScrollViewDelegate>
{
    struct CGSize _cellSpacing;
    BOOL _emphasized;
    unsigned long long _focusedIndex;
    NSMutableIndexSet *_selectionIndexes;
    BOOL _adjustHeightForPinning;
    BOOL _adjustScrollForPinning;
    BOOL _inInertialScroll;
    BOOL _inScroll;
    NSMutableArray *_cellViews;
    id <ConversationViewDelegate> _delegate;
    NSMutableIndexSet *_faultedIndexes;
    ConversationHeightStorage *_heightStorage;
    NSMutableIndexSet *_lockedIndexes;
    unsigned long long _pinnedCellEdge;
    unsigned long long _pinnedEdge;
    double _pinnedHeightAdjustment;
    unsigned long long _pinnedIndex;
    double _pinnedOffset;
}

+ (id)keyPathsForValuesAffectingNumberOfCells;
+ (BOOL)requiresConstraintBasedLayout;
@property(nonatomic) double pinnedOffset; // @synthesize pinnedOffset=_pinnedOffset;
@property(nonatomic) unsigned long long pinnedIndex; // @synthesize pinnedIndex=_pinnedIndex;
@property(nonatomic) double pinnedHeightAdjustment; // @synthesize pinnedHeightAdjustment=_pinnedHeightAdjustment;
@property(nonatomic) unsigned long long pinnedEdge; // @synthesize pinnedEdge=_pinnedEdge;
@property(nonatomic) unsigned long long pinnedCellEdge; // @synthesize pinnedCellEdge=_pinnedCellEdge;
@property(readonly, nonatomic) NSMutableIndexSet *lockedIndexes; // @synthesize lockedIndexes=_lockedIndexes;
@property(nonatomic) BOOL inScroll; // @synthesize inScroll=_inScroll;
@property(nonatomic) BOOL inInertialScroll; // @synthesize inInertialScroll=_inInertialScroll;
@property(readonly, nonatomic) ConversationHeightStorage *heightStorage; // @synthesize heightStorage=_heightStorage;
@property(readonly, nonatomic) NSMutableIndexSet *faultedIndexes; // @synthesize faultedIndexes=_faultedIndexes;
@property(nonatomic) id <ConversationViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSMutableArray *cellViews; // @synthesize cellViews=_cellViews;
@property(nonatomic) BOOL adjustScrollForPinning; // @synthesize adjustScrollForPinning=_adjustScrollForPinning;
@property(nonatomic) BOOL adjustHeightForPinning; // @synthesize adjustHeightForPinning=_adjustHeightForPinning;
- (BOOL)_scrollToNextCell:(id)arg1 contiguously:(BOOL)arg2;
- (BOOL)_scrollToPreviousCell:(id)arg1 contiguously:(BOOL)arg2;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)keyDown:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)scrollToCellAtIndex:(unsigned long long)arg1 constrainScroll:(BOOL)arg2;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (void)scrollPoint:(struct CGPoint)arg1;
- (void)_scrollEdge:(unsigned long long)arg1 to:(id)arg2;
- (id)enclosingScrollView;
- (void)didEndScrollInScrollView:(id)arg1;
- (void)didScrollInScrollView:(id)arg1;
- (void)didBeginScrollInScrollView:(id)arg1;
- (void)_scrollViewDidEndScroll;
- (void)_scrollViewDidScroll:(id)arg1;
- (void)_updatePreparedContentRect;
- (void)_updateGeometryIfNeeded;
- (void)_updateConstraintsForCellAtIndex:(unsigned long long)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)layout;
- (void)updateConstraints;
- (void)noteHeightOfCellAtIndex:(unsigned long long)arg1;
- (void)_updateSelectionIfNeeded;
- (void)_updateEmphasisIfNeeded;
- (void)deselectCellsAtIndexes:(id)arg1;
- (void)selectCellsAtIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)hitTest:(struct CGPoint)arg1;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (struct CGRect)_adjustRectForPinning:(struct CGRect)arg1;
- (void)_pinToCellAtIndex:(unsigned long long)arg1 cellEdge:(unsigned long long)arg2 edge:(unsigned long long)arg3 offset:(double)arg4;
- (void)pinToCellAtIndex:(unsigned long long)arg1 cellEdge:(unsigned long long)arg2 edge:(unsigned long long)arg3;
- (void)_pinTo:(struct CGRect)arg1 edge:(unsigned long long)arg2;
- (void)enumerateCellViewsWithOptions:(unsigned long long)arg1 usingBlock:(id)arg2;
- (void)enumerateCellViewsUsingBlock:(id)arg1;
- (unsigned long long)indexForView:(id)arg1;
- (unsigned long long)indexForResponder:(id)arg1;
- (id)cellViewForView:(id)arg1;
- (id)cellViewForResponder:(id)arg1;
- (id)cellViewAtIndex:(unsigned long long)arg1;
- (struct CGRect)rectForCellAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfCellsInRect:(struct CGRect)arg1;
- (unsigned long long)_indexOfCellView:(id)arg1;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (void)_faultCellsAtIndexesInRange:(struct _NSRange)arg1;
- (void)unlockCellsAtIndexes:(id)arg1;
- (void)unlockCellsAtIndexesInRange:(struct _NSRange)arg1;
- (void)unlockCellAtIndex:(unsigned long long)arg1;
- (void)lockCellsAtIndexes:(id)arg1;
- (void)lockCellsAtIndexesInRange:(struct _NSRange)arg1;
- (void)lockCellAtIndex:(unsigned long long)arg1;
- (void)removeAllCells;
- (void)removeCellsAtIndexes:(id)arg1;
- (void)removeCellsAtIndexesInRange:(struct _NSRange)arg1;
- (void)removeCellAtIndex:(unsigned long long)arg1;
- (void)moveCellAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)insertCellsAtIndexes:(id)arg1;
- (void)insertCellsAtIndexesInRange:(struct _NSRange)arg1;
- (void)insertCellAtIndex:(unsigned long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
@property(readonly, nonatomic) struct _NSRange visibleRange;
@property(copy, nonatomic) NSIndexSet *selectionIndexes;
@property(readonly, nonatomic) unsigned long long numberOfCells;
@property(readonly, nonatomic) unsigned long long firstResponderIndex;
@property(nonatomic) unsigned long long focusedIndex;
@property(nonatomic) BOOL emphasized;
@property(nonatomic) struct CGSize cellSpacing;
- (BOOL)isFlipped;
- (BOOL)acceptsFirstResponder;
- (void)dealloc;
- (void)_conversationViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface ConversationViewController : NSViewController <ConversationViewDelegate, NSUserInterfaceValidations>
{
    BOOL _automaticallySelectsPinnedMessage;
    BOOL _loaded;
    ConversationView *_conversationView;
    NSMutableOrderedSet *_conversationMembers;
    NSMutableIndexSet *_loadIndexes;
    NSMutableIndexSet *_primaryIndexes;
    NSMutableIndexSet *_unreadIndexes;
    NSMutableIndexSet *_visibleIndexes;
    NSMutableDictionary *_defaultMessageViewingState;
    NSMutableDictionary *_messageViewingStateByLibraryID;
    ConversationMemberArrayController *_arrayController;
    ConversationViewFindController *_findController;
    UnfoldAnimationController *_unfoldAnimationController;
    double _messageHeightBeforeRedundantTextExpansion;
    double _pageZoom;
    NSUUID *_updateUUID;
}

@property(copy, nonatomic) NSUUID *updateUUID; // @synthesize updateUUID=_updateUUID;
@property(nonatomic) double pageZoom; // @synthesize pageZoom=_pageZoom;
@property(nonatomic) double messageHeightBeforeRedundantTextExpansion; // @synthesize messageHeightBeforeRedundantTextExpansion=_messageHeightBeforeRedundantTextExpansion;
@property(nonatomic) BOOL loaded; // @synthesize loaded=_loaded;
@property(nonatomic) BOOL automaticallySelectsPinnedMessage; // @synthesize automaticallySelectsPinnedMessage=_automaticallySelectsPinnedMessage;
@property(retain, nonatomic) UnfoldAnimationController *unfoldAnimationController; // @synthesize unfoldAnimationController=_unfoldAnimationController;
@property(readonly, nonatomic) ConversationViewFindController *findController; // @synthesize findController=_findController;
@property(readonly, nonatomic) ConversationMemberArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(readonly, nonatomic) NSMutableDictionary *messageViewingStateByLibraryID; // @synthesize messageViewingStateByLibraryID=_messageViewingStateByLibraryID;
@property(readonly, nonatomic) NSMutableDictionary *defaultMessageViewingState; // @synthesize defaultMessageViewingState=_defaultMessageViewingState;
@property(readonly, nonatomic) NSMutableIndexSet *visibleIndexes; // @synthesize visibleIndexes=_visibleIndexes;
@property(readonly, nonatomic) NSMutableIndexSet *unreadIndexes; // @synthesize unreadIndexes=_unreadIndexes;
@property(readonly, nonatomic) NSMutableIndexSet *primaryIndexes; // @synthesize primaryIndexes=_primaryIndexes;
@property(readonly, nonatomic) NSMutableIndexSet *loadIndexes; // @synthesize loadIndexes=_loadIndexes;
@property(readonly, nonatomic) NSMutableOrderedSet *conversationMembers; // @synthesize conversationMembers=_conversationMembers;
@property(readonly, nonatomic) ConversationView *conversationView; // @synthesize conversationView=_conversationView;
- (void)_cancelRedundantTextExpansionAnimation;
- (void)performRedundantTextExpansionForDocumentView:(id)arg1 atClusterIndex:(long long)arg2;
- (void)_startRedundantTextExpansionAnimationForWebDocumentView:(id)arg1;
- (void)_getInitialMetricsAndSnapshotForRedundantTextExpansionForDocumentView:(id)arg1 atClusterIndex:(long long)arg2 completionBlock:(id)arg3;
- (double)_scrollBarWidth;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)performTextFinderAction:(id)arg1;
- (void)makeFontSmaller:(id)arg1;
- (void)makeFontBigger:(id)arg1;
- (void)toggleViewRelatedMessages:(id)arg1;
- (id)actionViewController;
- (id)actionConversationMembers;
- (id)actionMessagesIncludingDuplicates:(BOOL)arg1;
- (id)_actionConversationMemberIndices;
- (void)_updateLastViewedDateAndMarkReadIfNeeded:(id)arg1;
- (void)_prepareToUpdateLastViewedDateAndMarkReadIfNeeded:(id)arg1 index:(unsigned long long)arg2;
- (void)_adjustHorizontalScrollersForCell:(id)arg1 forceShow:(BOOL)arg2;
- (void)_adjustHorizontalScrollersForceShow:(BOOL)arg1;
- (void)_hideAllHorizontalScrollers;
- (void)conversationView:(id)arg1 didEndScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didBeginScrollInScrollView:(id)arg2;
- (void)conversationView:(id)arg1 didSelectIndex:(unsigned long long)arg2;
- (void)conversationView:(id)arg1 didRemoveCellView:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)conversationView:(id)arg1 didAddCellView:(id)arg2 atIndex:(unsigned long long)arg3;
- (double)conversationView:(id)arg1 initialHeightOfCellAtIndex:(unsigned long long)arg2;
- (void)_restoreMessageViewingState:(id)arg1;
- (void)_saveMessageViewingState:(id)arg1;
- (void)_updateCellViewAtIndexIfNeeded:(unsigned long long)arg1;
- (void)_cellViewFrameDidChange:(id)arg1;
- (void)_bodyContentViewGeometryDidChange:(id)arg1;
- (void)_loadNextIndex;
- (void)_performInitialPinning;
- (void)_updateConversationMembers:(id)arg1;
- (void)_resetConversationState;
- (void)_updateFirstResponderIfNeeded;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setView:(id)arg1;
- (id)view;
- (void)setRepresentedObject:(id)arg1 withFocusedMessage:(id)arg2;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)dealloc;
- (void)tearDown;
- (void)loadView;
- (void)_conversationViewControllerCommonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface ConversationViewFindController : NSObject <NSUserInterfaceValidations, NSTextFinderClient>
{
    NSTextFinder *_textFinder;
    NSArray *_incrementalAsynchronousDocumentMatches;
    ConversationViewController *_viewController;
    NSString *_targetString;
    unsigned long long _findOptions;
    NSProgress *_currentProgress;
    NSProgress *_updateProgress;
    NSMutableArray *_findStore;
}

@property(retain, nonatomic) NSMutableArray *findStore; // @synthesize findStore=_findStore;
@property(retain, nonatomic) NSProgress *updateProgress; // @synthesize updateProgress=_updateProgress;
@property(retain, nonatomic) NSProgress *currentProgress; // @synthesize currentProgress=_currentProgress;
@property(nonatomic) unsigned long long findOptions; // @synthesize findOptions=_findOptions;
@property(retain, nonatomic) NSString *targetString; // @synthesize targetString=_targetString;
@property(readonly, nonatomic) ConversationViewController *viewController; // @synthesize viewController=_viewController;
- (void)_updateVisibleRectsForCell:(unsigned long long)arg1;
- (void)_conversationViewDidResize:(id)arg1;
- (void)_cellBoundsDidChange:(id)arg1;
- (void)_revalidateVisibleCells:(id)arg1;
- (void)_updateConversationMatches:(id *)arg1 forWebMatches:(id)arg2 atCellIndex:(unsigned long long)arg3 visibleRect:(struct CGRect)arg4;
- (id)_conversationMatchesForWebMatches:(id)arg1 atCellIndex:(unsigned long long)arg2 cache:(BOOL)arg3;
- (void)_asyncFindMatchesAtCellIndex:(unsigned long long)arg1 maxResults:(unsigned long long)arg2 progress:(id)arg3 completionHandler:(id)arg4;
- (void)_findNextMatchAtCurrentIndex:(unsigned long long)arg1 startIndex:(unsigned long long)arg2 conversationDidWrap:(BOOL)arg3 progress:(id)arg4 resultCollector:(id)arg5;
- (void)_findNextMatchForString:(id)arg1 findOptions:(unsigned long long)arg2 resultCollector:(id)arg3;
- (void)_findAllMatchesWithProgress:(id)arg1 currentIndex:(unsigned long long)arg2 stopIndex:(unsigned long long)arg3 resultCollector:(id)arg4;
- (void)_findAllMatchesForString:(id)arg1 findOptions:(unsigned long long)arg2 resultCollector:(id)arg3;
- (void)selectFindMatch:(id)arg1 completionHandler:(id)arg2;
- (void)scrollFindMatchToVisible:(id)arg1;
- (void)getSelectedText:(id)arg1;
- (void)findMatchesForString:(id)arg1 relativeToMatch:(id)arg2 findOptions:(unsigned long long)arg3 maxResults:(unsigned long long)arg4 resultCollector:(id)arg5;
- (void)performTextFinderAction:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly, nonatomic) NSTextFinder *textFinder;
- (void)reset;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tearDown;
- (void)dealloc;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) NSArray *visibleCharacterRanges;

@end

@interface _ConversationFindMatch : NSObject <NSTextFinderAsynchronousDocumentFindMatch>
{
    ConversationView *_containingView;
    id <NSTextFinderAsynchronousDocumentFindMatch> _backingFindMatch;
    unsigned long long _cellIndex;
    NSArray *_textRectsInCellView;
    ConversationViewFindController *_findController;
}

@property(retain, nonatomic) ConversationViewFindController *findController; // @synthesize findController=_findController;
@property(retain, nonatomic) NSArray *textRectsInCellView; // @synthesize textRectsInCellView=_textRectsInCellView;
@property(nonatomic) unsigned long long cellIndex; // @synthesize cellIndex=_cellIndex;
@property(retain, nonatomic) id <NSTextFinderAsynchronousDocumentFindMatch> backingFindMatch; // @synthesize backingFindMatch=_backingFindMatch;
@property(retain, nonatomic) ConversationView *containingView; // @synthesize containingView=_containingView;
- (void)generateTextImage:(id)arg1;
@property(readonly, nonatomic) NSArray *textRects;
- (void)dealloc;

@end

@interface _CellFindStore : NSObject
{
    BOOL _matchesAreValid;
    NSArray *_matches;
    struct CGRect _visibleRectInCell;
    struct CGRect _cellRectInContainingView;
    struct CGRect _visibleRectInContainingView;
}

@property(nonatomic) struct CGRect visibleRectInContainingView; // @synthesize visibleRectInContainingView=_visibleRectInContainingView;
@property(nonatomic) struct CGRect cellRectInContainingView; // @synthesize cellRectInContainingView=_cellRectInContainingView;
@property(nonatomic) struct CGRect visibleRectInCell; // @synthesize visibleRectInCell=_visibleRectInCell;
@property(nonatomic) BOOL matchesAreValid; // @synthesize matchesAreValid=_matchesAreValid;
@property(retain, nonatomic) NSArray *matches; // @synthesize matches=_matches;
- (void)dealloc;

@end

@interface CriteriaUIHelper : NSObject <NSTableViewDataSource>
{
    NSMutableArray *_criteriaViews;
    NSTextField *_nameField;
    NSScrollView *_criteriaContainer;
    NSPopUpButton *_allCriteriaMustBeMetPopUp;
    NSButton *_includeTrashCheckbox;
    NSButton *_includeSentCheckbox;
    NSTextField *_performActionLabel;
    NSScrollView *_actionContainer;
    NSPanel *_headerListPanel;
    NSTableView *_headerListTable;
    NSButton *_addHeaderButton;
    BOOL _isEditingHeader;
    BOOL _criteriaWillBeUsedForMailboxes;
    id _objectWithCriteria;
    CriterionView *_criterionView;
    NSString *_previousTitle;
    NSWindow *_parentWindow;
}

+ (id)headerList;
+ (void)unpackUserCriteria:(id *)arg1 noJunkCriterion:(id *)arg2 noTrashCriterion:(id *)arg3 noSentCriterion:(id *)arg4 allCriteriaMustBeSatisfield:(char *)arg5 fromCriteria:(id)arg6;
+ (id)packageUserCriteria:(id)arg1 withNoJunk:(BOOL)arg2 noTrash:(BOOL)arg3 noSent:(BOOL)arg4 allUserCriteriaMustBeSatisfied:(BOOL)arg5;
@property NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(retain) NSString *previousTitle; // @synthesize previousTitle=_previousTitle;
@property(retain, nonatomic) CriterionView *criterionView; // @synthesize criterionView=_criterionView;
- (void)connectNextKeyViewChain;
- (void)tileViews:(id)arg1 inContainer:(id)arg2 withChangeAtRow:(long long)arg3 removeIsEnabled:(BOOL)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)_removeInvalidHeaders;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)addHeaderClicked:(id)arg1;
- (void)_headerTableEndedEditing:(id)arg1;
- (void)_headerTableBeganEditing:(id)arg1;
- (void)_updateHeaderListUI;
- (void)headerListCancelClicked:(id)arg1;
- (void)headerListOkClicked:(id)arg1;
- (void)_endEditingHeader;
- (void)resetHeaderListForObjectsWithCriteria:(id)arg1;
- (void)_configureAllCriterionMenus;
- (void)editHeaderList;
- (void)userHasSelectedSenderInContacts:(char *)arg1 senderInPreviousRecipients:(char *)arg2;
- (void)removeView:(id)arg1 fromViews:(id)arg2 inContainer:(id)arg3;
- (void)removeCriterion:(id)arg1;
- (id)_createNewCriterionViewForSender:(id)arg1;
- (void)addCriterion:(id)arg1;
- (void)configureCriteriaForObject:(id)arg1;
- (void)trashMailboxCriterionAdded;
- (void)sentMessagesMailboxCriterionAdded;
- (void)putCriteriaFromUIIntoObject:(id)arg1;
- (id)newCriterion;
- (void)awakeFromNib;
- (void)dealloc;
@property BOOL criteriaWillBeUsedForMailboxes;

@end

@interface CriterionView : ColorBackgroundView
{
    CriteriaUIHelper *_owner;
    NSButton *_removeButton;
    NSButton *_addButton;
    NSView *_currentView;
    NSPopUpButton *_criterionPopUp;
    NSPopUpButton *_qualifierPopUp;
    NSTextField *_expressionStringField;
    NSTextField *_expressionNumberField;
    NSTextField *_expressionOtherNumberField;
    NSDatePicker *_dateFieldPicker;
    NSDatePicker *_otherDateFieldPicker;
    NSPopUpButton *_unitsPopUp;
    NSMenu *_criterionMenu;
    NSMenu *_dateQualifierMenu;
    BOOL _isSmartMailboxCriterion;
    NSString *_expressionGuess;
    MFMailbox *_mailboxBeingEdited;
    long long _criterionType;
    long long _criterionTypeForOtherArea;
    NSView *_headerCriteriaView;
    NSView *_simpleCriteriaView;
    NSView *_accountOrGroupView;
    NSView *_mailboxesView;
    NSView *_daysOldDatesView;
    NSView *_simpleDatesView;
    NSView *_daysAgoDatesView;
    NSView *_inThelastDaysDatesView;
    NSView *_daysAgoRangeDatesView;
    NSView *_beforeAfterDatesView;
    NSView *_dateRangeDatesView;
    NSView *_attachmentTypeView;
    NSView *_flaggedStatusView;
    NSNumberFormatter *_daysFormatter;
    NSNumberFormatter *_daysOldFormatter;
    MailboxesChooser *_mailboxesChooser;
}

@property(retain, nonatomic) MailboxesChooser *mailboxesChooser; // @synthesize mailboxesChooser=_mailboxesChooser;
@property(retain, nonatomic) NSNumberFormatter *daysOldFormatter; // @synthesize daysOldFormatter=_daysOldFormatter;
@property(retain, nonatomic) NSNumberFormatter *daysFormatter; // @synthesize daysFormatter=_daysFormatter;
@property(retain, nonatomic) NSView *flaggedStatusView; // @synthesize flaggedStatusView=_flaggedStatusView;
@property(retain, nonatomic) NSView *attachmentTypeView; // @synthesize attachmentTypeView=_attachmentTypeView;
@property(retain, nonatomic) NSView *dateRangeDatesView; // @synthesize dateRangeDatesView=_dateRangeDatesView;
@property(retain, nonatomic) NSView *beforeAfterDatesView; // @synthesize beforeAfterDatesView=_beforeAfterDatesView;
@property(retain, nonatomic) NSView *daysAgoRangeDatesView; // @synthesize daysAgoRangeDatesView=_daysAgoRangeDatesView;
@property(retain, nonatomic) NSView *inThelastDaysDatesView; // @synthesize inThelastDaysDatesView=_inThelastDaysDatesView;
@property(retain, nonatomic) NSView *daysAgoDatesView; // @synthesize daysAgoDatesView=_daysAgoDatesView;
@property(retain, nonatomic) NSView *simpleDatesView; // @synthesize simpleDatesView=_simpleDatesView;
@property(retain, nonatomic) NSView *daysOldDatesView; // @synthesize daysOldDatesView=_daysOldDatesView;
@property(retain, nonatomic) NSView *mailboxesView; // @synthesize mailboxesView=_mailboxesView;
@property(retain, nonatomic) NSView *accountOrGroupView; // @synthesize accountOrGroupView=_accountOrGroupView;
@property(retain, nonatomic) NSView *simpleCriteriaView; // @synthesize simpleCriteriaView=_simpleCriteriaView;
@property(retain, nonatomic) NSView *headerCriteriaView; // @synthesize headerCriteriaView=_headerCriteriaView;
- (void)ownerSearchAreaChanged:(id)arg1;
- (void)mailboxCriterionPopUpChangedSelection:(id)arg1;
- (void)_setExpressionGuess:(id)arg1;
- (void)makeRemoveButtonEnabled:(BOOL)arg1;
- (void)criterionPopupChanged:(id)arg1;
- (void)_criterionPopupWillPopup:(id)arg1;
- (void)qualifierPopupChanged:(id)arg1;
- (BOOL)_populateQualifierPopup;
- (void)putHeaderCriteriaInPopUpMenu;
- (id)_timeSince1970StringFromDatePicker:(id)arg1 atEndOfDay:(BOOL)arg2;
- (id)_subcriteriaForRelativeDatesFrom:(long long)arg1 to:(long long)arg2 units:(long long)arg3 criterionType:(long long)arg4;
- (void)_insertBestGuessForExpressionField;
- (void)_configureViewForQualifierTag:(long long)arg1 criterion:(id)arg2;
- (void)_setEnglishStringsForPopUpMenuHeaderItems:(id)arg1;
- (id)criterion;
- (void)configureForCriterion:(id)arg1;
- (id)_menuUsingInfo:(struct menuItemInfo *)arg1 length:(long long)arg2;
- (void)setIsSmartMailboxCriterion:(BOOL)arg1 mailbox:(id)arg2;
- (void)awakeFromNib;
@property long long criterionType;
- (void)dealloc;

@end

@interface MailMoveCommand : NSMoveCommand
{
}

+ (void)_performBackgroundCommand:(id)arg1 copyMessages:(id)arg2 fromStores:(id)arg3 toMailbox:(id)arg4 shouldDelete:(BOOL)arg5;
- (id)performDefaultImplementation;

@end

@interface MailCopyCommand : NSCloneCommand
{
}

- (id)performDefaultImplementation;

@end

@interface MailDeleteCommand : NSDeleteCommand
{
}

- (id)performDefaultImplementation;

@end

@interface DateCell : NSTextFieldCell
{
    int _dateDetailLevel;
    double _lastWidth;
    _Bool _lastStringWasRTL;
    BOOL _forceTextColor;
}

+ (void)resetDateFormats;
+ (void)initialize;
@property(nonatomic) BOOL forceTextColor; // @synthesize forceTextColor=_forceTextColor;
- (id)accessibilityAttributeValue:(id)arg1 forParameter:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)stringValue;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (double)minimumWidth;
- (void)setObjectValue:(id)arg1;
- (void)setTimeIntervalSince1970:(double)arg1;
- (void)updateLocale;
- (void)setUnderlinesText:(BOOL)arg1;
- (BOOL)underlinesText;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (void)_updateDateColumnDetailLevels;
- (void)_updateDateColumnDetailLevelWidths;
- (BOOL)_readWidthsFromDefaults;
- (void)_saveWidthsToDefaults;
- (id)_newWeekdayWidthReferenceDatesFirstWeekday:(long long *)arg1;
- (id)_newMonthWidthReferenceDates;
- (double)_widthOfLongestDateStringWithLevel:(int)arg1 format:(id)arg2;
- (double)_widthOfStringWithTimeFormat:(id)arg1 withDatePrefix:(id)arg2;
- (id)lastFont;
- (void)setLastFont:(id)arg1;
- (id)drawingAttributes;
- (void)setDrawingAttributes:(id)arg1;
- (void)_initDateFormatter;
- (void)_dateCellCommonInit;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    long long _indexOfSelectedHandler;
}

- (void)_selectApplication:(id)arg1;
- (void)_setDefaultEmailHandler:(id)arg1;
- (void)_selectHandlerWithBundleIdentifier:(id)arg1 url:(id)arg2;
- (long long)_addHandlerWithBundleIdentifier:(id)arg1 url:(id)arg2;
- (void)_populateMenu;
- (void)refreshApplicationList;

@end

@interface DeliveryFailure : NSObject <AccountStatusDataSourceDelegate>
{
    AccountStatusDataSource *_deliveryASDS;
    DocumentEditor *_editor;
    MCError *_error;
    NSPanel *_panel;
    NSTextField *_errorLabel;
    NSTextView *_errorDescriptionLabel;
    NSView *_contents;
    NSTableView *_table;
    NSButton *_tryLaterButton;
    NSButton *_tryOtherButton;
}

@property(nonatomic) NSButton *tryOtherButton; // @synthesize tryOtherButton=_tryOtherButton;
@property(nonatomic) NSButton *tryLaterButton; // @synthesize tryLaterButton=_tryLaterButton;
@property(nonatomic) NSTableView *table; // @synthesize table=_table;
@property(nonatomic) NSView *contents; // @synthesize contents=_contents;
@property(nonatomic) NSTextView *errorDescriptionLabel; // @synthesize errorDescriptionLabel=_errorDescriptionLabel;
@property(nonatomic) NSTextField *errorLabel; // @synthesize errorLabel=_errorLabel;
@property(retain, nonatomic) NSPanel *panel; // @synthesize panel=_panel;
- (void)_retile;
- (void)_tile;
- (void)_postDeliveryFailureHappened;
- (void)_deliveryAccountsDidChange:(id)arg1;
- (void)_selectedAccountDidChangeFrom:(id)arg1 to:(id)arg2;
- (id)_setDynamicDeliveryAccountForAccount:(id)arg1;
- (void)editServerList:(id)arg1;
- (void)tryOtherAccount:(id)arg1;
- (void)editMessage:(id)arg1;
- (void)sendLater:(id)arg1;
- (void)runChooseAlternateDeliveryAccountSheet;
- (void)reportError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)editorWillClose;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)initWithDocumentEditor:(id)arg1;

@end

@interface DeliveryQueue : MCInvocationQueue <MCActivityTarget, MVTerminationHandler>
{
    double _beginDeliveryTime;
    MCActivityMonitor *_deliveryMonitor;
    MFMessageStore *_outboxStore;
    NSMutableDictionary *_errorResponses;
    NSMutableDictionary *_alternateDeliveryAccounts;
    NSMutableSet *_accountsOnHold;
    BOOL _queueIsActive;
    BOOL _isBackgroundProcessingEnabled;
    BOOL _resetDeliveryQueueWhenDoneWithCurrentMessage;
    NSMutableSet *_documentIdsToIgnore;
}

+ (id)sharedDeliveryQueue;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain) NSMutableSet *documentIdsToIgnore; // @synthesize documentIdsToIgnore=_documentIdsToIgnore;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)stopIgnoringDocumentId:(id)arg1;
- (void)ignoreDocumentId:(id)arg1;
- (id)alternateDeliveryAccountForAccount:(id)arg1;
- (void)unfreezeDeliveryAccount:(id)arg1 reprocessQueue:(BOOL)arg2;
- (void)setAlternateDeliveryAccount:(id)arg1 forAccount:(id)arg2;
- (void)_deliveryAccountsDidChange:(id)arg1;
- (void)_networkConfigurationChanged:(id)arg1;
- (void)cancelDeliveryOfMessageWithDocumentId:(id)arg1;
- (void)cancelDeliveryOfMessage:(id)arg1;
- (long long)_performDeliveryOfMessage:(id)arg1 accountUsed:(id *)arg2;
- (void)_closeOutboxStore;
- (void)_outboxDidOpen:(id)arg1;
- (BOOL)_openOutboxStoreIfNeeded;
@property(retain) MFMessageStore *outboxStore;
- (void)_resetStateAndReprocessQueueIfNecessary;
- (void)resetStateAndReprocessQueueIfNecessary;
- (void)resetStateAndReprocessQueue;
- (long long)appendMessageToQueue:(id)arg1 replacingOriginalMessage:(id)arg2;
- (long long)appendMessageToQueue:(id)arg1;
- (BOOL)_isMessageBeingEdited:(id)arg1;
- (void)_deliverQueuedMessages:(unsigned long long)arg1;
- (void)_processDeliveryQueueStartingAtIndex:(unsigned long long)arg1;
- (void)_setDeliveryMonitor:(id)arg1;
- (BOOL)isBackgroundProcessingEnabled;
- (void)setBackgroundProcessingEnabled:(BOOL)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface DockCountController : NSObject
{
    MFMailbox *_mailBadgeMailbox;
    int _mailBadgeScope;
    NSOperationQueue *_workQueue;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)setMailBadgeScope:(int)arg1 mailbox:(id)arg2;
- (int)mailBadgeScope;
- (void)unreadCountChanged:(id)arg1;
- (id)mailBadgeMailbox;
- (void)_setMailBadgeMailbox:(id)arg1;
- (void)_mailboxWillBeInvalidated:(id)arg1;
- (void)_setDockBadgeForCount:(id)arg1;
- (void)clearCountAndStopUpdating;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface HeaderLayoutManager : NSLayoutManager
{
}

- (void)textContainerChangedGeometry:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface DocumentEditor : NSObject <NSToolbarDelegate, MailFullScreenWindowDelegate, MCActivityTarget, MVTerminationHandler, NSAnimationDelegate, NSTextFinderClient, NSUserInterfaceValidations, NSWindowDelegate, ImageResizerDelegate>
{
    WebViewEditor *_webViewEditor;
    HeadersEditor *_headersEditor;
    NSWindow *_window;
    NSToolbar *_toolbar;
    NSDictionary *_toolbarItems;
    unsigned long long _messageType;
    EditingMessageWebView *_composeWebView;
    ComposeHeaderView *_composeHeaderView;
    ComposeBackEnd *_backEnd;
    NSInspectorBar *_inspectorBar;
    MailInspectorBarItemController *_inspectorBarItemController;
    LoadingOverlay *_loadingOverlay;
    struct {
        unsigned int userSavedMessage:1;
        unsigned int userWantsToCloseWindow:1;
        unsigned int userKnowsSaveFailed:1;
        unsigned int registeredForNotifications:1;
        unsigned int userCanApplyStationery:1;
        unsigned int autoShowEditor:1;
        unsigned int isLoaded:1;
        unsigned int isAutoSaving:1;
        unsigned int shouldSaveAfterLoading:1;
    } _flags;
    struct CGPoint _originalCascadePoint;
    NSMutableDictionary *_bodiesByAttachmentURL;
    NSOperationQueue *_operationQueue;
    NSOperation *_finishLoadingEditorOperation;
    BOOL _inspectorBarDisplayed;
    DeliveryFailure *_deliveryFailure;
    NSTextField *_stationeryNameTextField;
    NSButton *_stationeryNameSaveButton;
    NSScroller *_fakeScroller;
    NSViewAnimation *_stationeryPaneAnimator;
    NSMutableArray *_imageResizers;
    unsigned long long _encryptionOverhead;
    unsigned long long _textLengthForLastEstimatedMessageSize;
    BOOL _sendWhenFinishLoading;
    BOOL _hasIncludedAttachmentsFromOriginal;
    NSMutableArray *_unapprovedRecipients;
    NSMutableArray *_userActionQueue;
    NSTextFinder *_textFinder;
    NSView<NSTextFinderBarContainer> *_findBarContainer;
    NSWindow *_transparentWindow;
    CALayer *_mainWindowLayer;
    CALayer *_composeContentLayer;
    CALayer *_headerAndBodyHostingLayer;
    CALayer *_messageHeaderLayer;
    CALayer *_messageBodyLayer;
    CALayer *_composeHeaderLayer;
    CALayer *_composeBodyLayer;
    CALayer *_composeToolbarLayer;
    MailWindowShadowLayer *_shadowLayer;
    struct CGRect _startRect;
    struct CGRect _endRect;
    struct CGRect _composeWindowFrame;
    struct CGImage *_mainWindowNonKeySnapshot;
    MessageViewer *_messageViewerToAttach;
    BOOL _sendAnimationIsInProgress;
    BOOL _sendAnimationCancelled;
    BOOL _shouldCloseWindowWhenAnimationCompletes;
    BOOL _shouldSaveWhenClosing;
    BOOL _shouldDoPopOutAnimation;
    id _loadDelegate;
    NSDictionary *_settings;
    EditingWebMessageController *_webMessageController;
    MessageViewer *_possibleFullScreenViewerParent;
    NSRunningApplication *_activeApplicationBeforeEditorOpened;
    NSWindow *_stationeryNameSheet;
    ColorBackgroundView *_stationeryPane;
    StationerySelector *_stationerySelector;
    ColorBackgroundView *_borderView;
    ComposeStatusView *_composeStatusView;
    NSString *_userHTMLForSharingTop;
    NSString *_userHTMLForSharingBottom;
    NSString *_URLShareUUID;
    WebArchive *_pageWebArchive;
    WebArchive *_readerWebArchive;
    MCAttachment *_PDFAttachment;
}

+ (id)keyPathsForValuesAffectingDeliveryAccount;
+ (void)_emailAddresses:(id)arg1 approvedOrRejected:(BOOL)arg2;
+ (void)emailsRejected:(id)arg1;
+ (void)emailAddressesApproved:(id)arg1;
+ (void)_autoSaveTimerFired;
+ (void)setNeedsAutosave;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)_mailApplicationDidFinishLaunching:(id)arg1;
+ (id)restoreDraftMessage:(id)arg1 withSavedState:(id)arg2;
+ (void)showEditorWithSavedState:(id)arg1 completionHandler:(id)arg2;
+ (void)restoreFromDefaults;
+ (void)handleFailedDeliveryOfMessage:(id)arg1 error:(id)arg2;
+ (void)_presentFullScreenDeliveryFailureWithError:(id)arg1;
+ (void)_setMessageStatus:(id)arg1 onMessageID:(id)arg2;
+ (id)createEditorWithType:(unsigned long long)arg1 settings:(id)arg2;
+ (id)keyPathsForValuesAffectingDocumentID;
+ (id)existingEditorForMessage:(id)arg1;
+ (id)editorsForDocumentID:(id)arg1 editorClass:(Class)arg2;
+ (id)existingEditorForMessage:(id)arg1 editorClass:(Class)arg2;
+ (id)documentWebPreferencesIdentifierForRichText:(BOOL)arg1;
+ (BOOL)documentType;
+ (void)unregisterDocumentEditor:(id)arg1;
+ (void)registerDocumentEditor:(id)arg1;
+ (id)documentEditors;
+ (id)_documentEditors;
+ (void)setAutosaveTimer:(id)arg1;
+ (id)autoSaveTimer;
+ (void)initialize;
@property BOOL shouldDoPopOutAnimation; // @synthesize shouldDoPopOutAnimation=_shouldDoPopOutAnimation;
@property(retain, nonatomic) MCAttachment *PDFAttachment; // @synthesize PDFAttachment=_PDFAttachment;
@property(retain, nonatomic) WebArchive *readerWebArchive; // @synthesize readerWebArchive=_readerWebArchive;
@property(retain, nonatomic) WebArchive *pageWebArchive; // @synthesize pageWebArchive=_pageWebArchive;
@property(retain, nonatomic) NSString *URLShareUUID; // @synthesize URLShareUUID=_URLShareUUID;
@property(retain, nonatomic) NSString *userHTMLForSharingBottom; // @synthesize userHTMLForSharingBottom=_userHTMLForSharingBottom;
@property(retain, nonatomic) NSString *userHTMLForSharingTop; // @synthesize userHTMLForSharingTop=_userHTMLForSharingTop;
@property(retain, nonatomic) ComposeStatusView *composeStatusView; // @synthesize composeStatusView=_composeStatusView;
@property(retain, nonatomic) ColorBackgroundView *borderView; // @synthesize borderView=_borderView;
@property(retain, nonatomic) StationerySelector *stationerySelector; // @synthesize stationerySelector=_stationerySelector;
@property(retain, nonatomic) ColorBackgroundView *stationeryPane; // @synthesize stationeryPane=_stationeryPane;
@property(retain, nonatomic) NSWindow *stationeryNameSheet; // @synthesize stationeryNameSheet=_stationeryNameSheet;
@property(retain, nonatomic) NSRunningApplication *activeApplicationBeforeEditorOpened; // @synthesize activeApplicationBeforeEditorOpened=_activeApplicationBeforeEditorOpened;
@property BOOL shouldSaveWhenClosing; // @synthesize shouldSaveWhenClosing=_shouldSaveWhenClosing;
@property MessageViewer *possibleFullScreenViewerParent; // @synthesize possibleFullScreenViewerParent=_possibleFullScreenViewerParent;
@property(readonly) EditingWebMessageController *webMessageController; // @synthesize webMessageController=_webMessageController;
@property(retain) NSDictionary *settings; // @synthesize settings=_settings;
@property id loadDelegate; // @synthesize loadDelegate=_loadDelegate;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) HeadersEditor *headersEditor; // @synthesize headersEditor=_headersEditor;
@property(retain, nonatomic) WebViewEditor *webViewEditor; // @synthesize webViewEditor=_webViewEditor;
- (void)_cancelSendAnimation;
- (void)_sendAnimationCompleted;
- (void)_performSendAnimation;
- (void)_animationCompleted;
- (void)_cleanupAnimation;
- (void)_performPopOutAnimation;
- (void)_doPopOutAnimationIfPossible;
- (id)_toolbarAnimation;
- (id)_mainWindowAnimation;
- (id)_composeBodyAnimation;
- (id)_messageBodyAnimation;
- (id)_composeHeaderAnimation;
- (id)_messageHeaderAnimation;
- (id)_sizeAnimation;
- (id)_positionAnimationWithStartPosition:(struct CGPoint)arg1 endPosition:(struct CGPoint)arg2 percentFromStart:(double)arg3;
- (void)_setupPopOutAnimation:(id)arg1;
- (BOOL)_canDoPopOutAnimation;
- (void)_getSnapshotsForAnimation:(id)arg1;
- (void)_getMainWindowSnapshot;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)restoreFrame;
- (BOOL)mailFullScreenWindowShouldClose:(id)arg1;
- (id)windowForMailFullScreen;
- (void)forceClose;
- (void)windowWillClose:(id)arg1;
- (void)prepareToGoAway;
- (BOOL)windowShouldClose:(id)arg1;
- (void)endDocumentMove;
- (void)beginDocumentMove;
- (id)shouldSaveHelptag;
- (id)shouldSaveDescription;
- (id)shouldSaveTitle;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)_hideStatusBar;
- (void)_showStatusBar;
- (void)showAddressPanel:(id)arg1;
- (void)toggleCheckGrammarWithSpelling:(id)arg1;
- (void)changeSpellCheckingBehavior:(id)arg1;
- (void)_printAsExportJob:(BOOL)arg1;
- (void)exportAsPDF:(id)arg1;
- (void)showPrintPanel:(id)arg1;
- (void)performClose:(id)arg1;
- (void)saveChangedDocument:(id)arg1;
- (void)saveDocument:(id)arg1;
- (void)setMessagePriority:(id)arg1;
- (void)addReplyToHeader:(id)arg1;
- (void)addBccHeader:(id)arg1;
- (void)addCcHeader:(id)arg1;
- (void)makeFontSmaller:(id)arg1;
- (void)makeFontBigger:(id)arg1;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (void)insertBulletedList:(id)arg1;
- (void)insertNumberedList:(id)arg1;
- (void)toggleRich:(id)arg1;
- (void)makePlainText:(id)arg1;
- (void)makeRichText:(id)arg1;
- (BOOL)_sendButtonShouldBeEnabled;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly, getter=isEditable) BOOL editable;
- (void)didFindNonIncrementalSearchInWebView:(id)arg1 DOMRange:(id)arg2;
- (id)currentlySelectedWebView;
- (id)webViews;
- (void)performTextFinderAction:(id)arg1;
- (void)_generateParsedMessagesToAppendForMessages:(id)arg1;
- (void)_appendMessages:(id)arg1 withParsedMessages:(id)arg2;
- (void)appendMessageArray:(id)arg1;
- (void)appendMessages:(id)arg1;
- (id)mailAttachmentsAdded:(id)arg1;
- (void)_attachmentDidFinishReading:(id)arg1;
- (void)mailAttachmentsDeleted:(id)arg1;
- (void)_mailAttachmentsDeleted;
- (id)findBarContainerView;
- (void)_setImageSizePopupToSize:(id)arg1;
- (void)_saveImageSizeToDefaults;
- (unsigned long long)_estimateMessageSize;
- (unsigned long long)_encryptionOverhead;
- (unsigned long long)_signatureOverhead;
- (unsigned long long)_textLengthEstimate;
- (BOOL)_attachmentCanBeResized:(id)arg1;
- (BOOL)_resizeImageAttachments:(id)arg1;
- (BOOL)_resizeAttachment:(id)arg1;
- (id)_resizerForAttachment:(id)arg1;
- (BOOL)_isResizingImages;
- (void)imageResizer:(id)arg1 didFinishResizingWithResultCode:(long long)arg2;
- (id)_maxImageSizeAsString;
- (struct CGSize)_selectedImageSize;
- (struct CGSize)_imageSizeForTag:(long long)arg1;
- (void)_hideImageStatus;
- (void)_showImageStatus;
- (BOOL)_imageStatusHidden;
- (void)_updateImageSizePopup;
- (unsigned char)_attachmentsContainScalableImage:(id)arg1 scalables:(id)arg2;
- (unsigned char)_isAttachmentScalable:(id)arg1;
- (void)updateAttachmentStatus;
- (void)encryptionStatusDidChange;
- (void)messageSizeDidChange:(id)arg1;
- (void)imageSizePopupChanged:(id)arg1;
- (void)_addAttachmentsFromShareKit;
- (BOOL)_isReplyingFromShareKitWithFileAttachments;
- (id)_parsedMessageFromShareDictionary:(id)arg1;
- (void)_showURLPicker;
- (void)_setupDefaultURLState;
- (BOOL)_needsURLPicker;
- (void)_showURLPickerIfNeeded;
- (void)_validateURLPicker;
- (void)_insertUserHTMLSpans;
- (void)_wrapCurrentContentInSpan;
- (void)_getUserHTMLForEditing;
- (void)_addBaseURLToDocumentIfNeeded;
- (void)webViewDidFinishLoadForFrameWhenSharing:(id)arg1;
- (void)_changeSharedURLToDisplayType:(long long)arg1;
- (void)refreshShareContentsForDisplayType:(long long)arg1;
- (void)URLPickerPopupChanged:(id)arg1;
- (void)setDeliveryAccount:(id)arg1;
- (id)deliveryAccount;
- (void)editSignatures:(id)arg1;
- (void)changeSignature:(id)arg1;
- (void)showImmediately;
- (void)_setUnapprovedRecipients:(id)arg1;
- (void)replyAllMessage:(id)arg1;
- (void)replyMessage:(id)arg1;
- (void)changeReplyMode:(id)arg1;
- (unsigned long long)messageType;
- (void)_displayPendingAttachmentAlert;
- (void)insertFile:(id)arg1;
- (void)attachFilesAtEnd:(id)arg1;
- (void)alwaysAttachFilesAtEnd:(id)arg1;
- (void)_setSendWindowsFriendlyAttachments:(BOOL)arg1;
- (void)sendWindowsFriendlyAttachments:(id)arg1;
- (void)alwaysSendWindowsFriendlyAttachments:(id)arg1;
- (BOOL)_restoreOriginalAttachments;
- (void)insertOriginalAttachments:(id)arg1;
- (void)removeAttachments:(id)arg1;
- (BOOL)_hasPendingAttachmentReads;
- (id)mimeBodyForAttachmentWithURL:(id)arg1;
- (void)composePrefsChanged;
- (void)updateUIAfterAppleScriptModification:(id)arg1;
- (void)updateWindowContent;
- (void)webViewDidChange:(id)arg1;
- (void)backEndSenderDidChange:(id)arg1;
- (void)backEndDidChange:(id)arg1;
- (BOOL)backEnd:(id)arg1 shouldSaveMessage:(id)arg2;
- (void)backEnd:(id)arg1 willCreateMessageWithHeaders:(id)arg2;
- (void)_saveMessageDueToUserAction:(BOOL)arg1;
- (void)saveMessageToDrafts:(id)arg1;
@property(readonly) BOOL canSave;
- (void)backEndDidSaveMessage:(id)arg1 result:(int)arg2;
- (void)reportSaveFailure:(id)arg1;
@property(readonly) BOOL hasChanges;
- (void)setUserSavedMessage:(BOOL)arg1;
@property(readonly) BOOL shouldSave;
- (BOOL)autoSave;
- (void)loadingOverlayDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)backEnd:(id)arg1 didBeginBackgroundLoadActivity:(id)arg2;
- (void)saveSaveAsStationery:(id)arg1;
- (void)cancelSaveAsStationery:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)saveAsStationery:(id)arg1;
- (void)loadStationery:(id)arg1;
- (id)currentStationery;
@property(readonly) BOOL stationeryPaneIsVisible;
- (void)animationDidEnd:(id)arg1;
- (void)showOrHideStationery:(id)arg1;
- (double)_animationDuration;
- (void)toolbarWillAddItem:(id)arg1;
- (void)_synchronizeIncludeAttachmentsToolbarItem:(id)arg1;
- (void)continueLoadingInitialContent;
- (id)parsedMessageFromSettings:(id)arg1;
- (void)_attachmentFinishedDownloading:(id)arg1;
- (void)backEndDidLoadInitialContent:(id)arg1;
- (void)loadInitialDocumentIntoWebView:(id)arg1;
- (void)_sanitizeHTML;
- (void)_setupSpellingAndGrammarChecking;
- (void)_registerForNotificationsIfNeeded;
- (void)postDocumentEditorDidFinishSetup;
- (void)prepareContent;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (id)_frameSaveName;
- (id)_savedState;
- (id)webView;
- (id)document;
- (BOOL)isModal;
@property BOOL wantsToClose;
@property BOOL userCanApplyStationery;
@property BOOL autoShowEditor;
- (id)toolbar;
- (id)webMessageDocument;
@property(retain) ComposeBackEnd *backEnd;
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForEncryptionError:(id)arg2;
- (id)missingCertificatesMessageForRecipients:(id)arg1 uponDelivery:(BOOL)arg2;
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForMissingCertificatesForRecipients:(id)arg2;
- (void)cancelModal:(id)arg1;
- (void)reportDeliveryFailure:(id)arg1;
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForError:(id)arg2;
- (void)_setMessageStatusOnOriginalMessage;
- (BOOL)backEnd:(id)arg1 shouldDeliverMessage:(id)arg2;
- (void)backEndDidAppendMessageToOutbox:(id)arg1 result:(int)arg2;
- (void)backEndDidCancelMessageDeliveryForAttachmentError:(id)arg1;
- (void)sendMessageAfterChecking:(id)arg1;
- (void)send:(id)arg1;
- (void)_didToggleComposeFormatInspectorBar;
- (void)_willToggleComposeFormatInspectorBar;
- (void)toggleComposeFormatInspectorBar:(id)arg1;
- (void)updateInspectorBar;
- (void)setShouldDisplayInspectorBar:(BOOL)arg1;
- (BOOL)shouldDisplayInspectorBar;
- (id)_inspectorBarVisibilityKey;
- (void)setHeaders:(id)arg1;
- (void)show;
- (long long)editorSharedNib;
- (void)setOperationQueue:(id)arg1;
- (id)operationQueue;
- (BOOL)_loadEditorNib;
- (void)dealloc;
- (Class)backEndClass;
- (void)finishLoadingEditor;
- (void)performOperationAfterLoad:(id)arg1;
@property(readonly) BOOL isFinishedLoading;
- (id)finishLoadingEditorOperation;
- (id)loadInitialDocumentOperation;
- (id)prepareContentOperation;
- (id)showInterfaceOperation;
- (BOOL)shouldRecordTypeAheadEvents;
- (BOOL)load;
@property(readonly) BOOL isAutoSaving;
- (void)setLoaded:(BOOL)arg1;
@property(readonly) BOOL isLoaded;
- (id)init;
- (id)initWithBackEnd:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 settings:(id)arg2;
- (id)initWithType:(unsigned long long)arg1 settings:(id)arg2 backEnd:(id)arg3;
- (id)description;
- (BOOL)isEditingDocumentID:(id)arg1;
@property(readonly) NSUUID *documentID;
- (id)menuForListsItem;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)configureSegmentedItem:(id)arg1 withDictionary:(id)arg2 forSegment:(long long)arg3;
- (void)updateSendButtonStateInToolbar;
- (void)toggleReplyType:(unsigned long long)arg1;
- (void)synchronizeChangeReplyItem:(id)arg1 messageType:(unsigned long long)arg2;
- (id)toolbarIdentifier;
- (void)setupFullScreenButtonWidths;
- (void)setupToolbar;
- (BOOL)validateToolbarItem:(id)arg1;
- (oneway void)release;

// Remaining properties
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) NSArray *visibleCharacterRanges;

@end

@interface DocumentEditor_Scripting : DocumentEditor
{
}

- (Class)backEndClass;

@end

@interface DynamicErrorWindowController : NSWindowController
{
    NSTextField *_message;
    NSTextField *_explanation;
    NSButton *_leftButton;
    NSProgressIndicator *_progressIndicator;
    NSButton *_rightButton;
    NSButton *_helpButton;
    long long _diagnosisCode;
    double _distanceToRightEdge;
    double _distanceBetweenButtons;
    double _distanceToBottomEdge;
    double _distanceFromProgresBarToButtons;
    double _progressIndicatorHeight;
    id <DynamicErrorWindowDelegate> _delegate;
}

- (void)rightActionSelected:(id)arg1;
- (void)leftActionSelected:(id)arg1;
- (void)errorDiagnosedAs:(long long)arg1;
- (void)updateWindowLayout;
- (void)setDelegate:(id)arg1;
- (void)awakeFromNib;
- (void)relocateButton:(id)arg1 relativeTo:(double)arg2;
- (void)collectBasicWindowMetrics;
- (void)updateTextField:(id)arg1 withText:(id)arg2 belowControl:(id)arg3;
- (void)updateTextFieldHeightForNewContent:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface EditableWebMessageDocument : MFWebMessageDocument
{
    DOMHTMLDocument *_htmlDocument;
    DOMHTMLElement *_contentElement;
    NSMutableDictionary *_savedUserContent;
    NSMutableDictionary *_savedUserAttachments;
    NSMutableArray *_orderedUserAttachmentsURLs;
    NSMutableArray *_savedUserImages;
}

- (id)attachmentElementEnumeratorForRange:(id)arg1 withOptions:(int)arg2;
- (id)attachmentElementEnumeratorWithOptions:(int)arg1;
- (void)copyBackgroundImageFromURL:(id)arg1 toURL:(id)arg2;
- (id)prepareToAddArchive:(id)arg1;
- (id)prepareToAddArchive:(id)arg1 attachmentDelegate:(id)arg2;
- (id)attachmentForURLString:(id)arg1;
- (void)removeAllBackgroundAttachments;
- (void)removeAllCompositeImageAttachments;
- (void)removeAllAttachments;
- (id)attachmentsIncludingBackgrounds;
- (void)saveAttachmentsWithURLsAsBackgroundAttachments:(id)arg1;
- (id)backgroundImageAttachments;
- (id)attachments;
- (id)userImageDictionaryFromAttachment:(id)arg1 withURL:(id)arg2;
- (void)forgetAllSavedContentAttachmentsAndImages;
- (void)insertSavedUserImagesIntoCompositeImages;
- (id)savedUserImagesFromCompositeImages;
- (void)saveUserImagesFromCompositeImages;
- (id)orderedCompositeImagesAndTheirURLs:(id *)arg1;
- (void)removeSavedUserAttachmentWithURL:(id)arg1;
- (id)savedUserAttachmentForURL:(id)arg1;
- (id)savedUserAttachmentsOrdering;
- (void)saveUserAttachments:(id)arg1 withOrdering:(id)arg2;
- (void)forgetSavedContentWithKeys:(id)arg1;
- (id)savedUserContent;
- (void)saveUserContent:(id)arg1;
- (void)setContentElement:(id)arg1;
- (id)contentElement;
- (void)setHTMLDocument:(id)arg1;
- (id)htmlDocument;
- (void)dealloc;

@end

@interface _ComposeAttachmentEnumerator : NSEnumerator
{
    unsigned int _acceptDeleted:1;
    unsigned int _acceptNonDeleted:1;
    DOMNode *_currentNode;
    DOMNode *_containerNode;
    DOMNode *_endNode;
    EditableWebMessageDocument *_document;
}

@property(retain) EditableWebMessageDocument *document; // @synthesize document=_document;
@property(retain) DOMNode *endNode; // @synthesize endNode=_endNode;
@property(retain) DOMNode *containerNode; // @synthesize containerNode=_containerNode;
@property(retain) DOMNode *currentNode; // @synthesize currentNode=_currentNode;
- (id)nextObject;
- (short)acceptNode:(id)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(int)arg2 range:(id)arg3;

@end

@interface EditingMessageWebView : TilingWebView <NSInspectorBarClient, NSTextInputClient>
{
    DOMHTMLElement *_contentElement;
    DOMNode *_cursorPositionNode;
    struct {
        unsigned int delegateRespondsToCanInsertFromDraggingInfo:1;
        unsigned int delegateRespondsToCanInsertFromPasteboard:1;
    } _flags;
}

+ (id)insertablePasteboardTypes;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)validAttributesForMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (BOOL)hasMarkedText;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)doCommandBySelector:(SEL)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (id)textInput;
- (id)inspectorBarItemIdentifiers;
- (BOOL)validateUserInterfaceItem:(id)arg1 fallThrough:(char *)arg2;
- (BOOL)validateMenuItem:(id)arg1 fallThrough:(char *)arg2;
- (BOOL)selectionIsInEmptyListItem;
- (BOOL)selectionIsInList;
- (BOOL)selectionIsInListTypes:(id)arg1;
- (BOOL)selectionIsInListType:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)insertListWithNumbers:(BOOL)arg1 undoTitle:(id)arg2;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (void)convertListFromType:(id)arg1 toType:(id)arg2 undoTitle:(id)arg3;
- (void)layoutResizingAttachmentViews;
- (void)viewDidEndLiveResize;
- (void)changeDocumentBackgroundColorToColor:(id)arg1;
- (void)viewWillStartLiveResize;
- (void)makeFontSmaller:(id)arg1;
- (void)makeFontBigger:(id)arg1;
- (void)removeFragmentBlockQuote:(id)arg1;
- (void)removeBlockQuoteFromTree:(id)arg1;
- (long long)compareRange:(id)arg1 toEndOfNode:(id)arg2;
- (void)splitUpBlockQuotesOverlappingEndOfRange:(id)arg1;
- (void)splitUpBlockQuotesOverlappingStartOfRange:(id)arg1;
- (void)changeQuoteLevel:(id)arg1;
- (BOOL)removeAllQuotingFromTree:(id)arg1;
- (void)changeIndentation:(long long)arg1;
- (void)changeIndentationIfAllowed:(long long)arg1;
- (void)decreaseIndentation:(id)arg1;
- (void)increaseIndentation:(id)arg1;
- (void)addHorizontalRule:(id)arg1;
- (void)removeLink:(id)arg1;
- (void)editLink:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)setCursorPositionNode:(id)arg1;
- (void)pasteWithCurrentStyle:(id)arg1;
- (void)pasteAsQuotation:(id)arg1;
- (void)paste:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)saveMessageToDrafts:(id)arg1;
- (void)registerForDraggedTypes:(id)arg1;
- (id)insertablePasteboardTypes;
- (void)insertNode:(id)arg1 atRange:(id)arg2;
- (void)saveSelectionForUndo;
- (void)setSelectionStart:(id)arg1 offset:(int)arg2 end:(id)arg3 offset:(int)arg4 affinity:(unsigned long long)arg5;
- (id)selectedContainerWithNameInArray:(id)arg1;
- (BOOL)isFirstLineOfDocument;
- (id)selectedAnchor;
- (id)temporaryStartingSelectionMarker;
- (id)temporaryEndingSelectionMarker;
- (void)deleteTemporarySelectionMarkersFromDocument:(id)arg1;
- (void)restoreSelectionFromTemporaryMarkers:(BOOL)arg1;
- (void)restoreSelectionFromTemporaryMarkers;
- (void)insertTemporarySelectionMarkersForRange:(id)arg1;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)removeAllFormatting;
- (BOOL)resetMainDocumentBodyAttributes;
- (BOOL)removeNonBodyChildrenAndAttributesFromMainDocumentElement;
- (BOOL)removeFormattingFromTree:(id)arg1 forDocument:(id)arg2 hasDocumentContext:(BOOL)arg3 imageStrippingMode:(int)arg4;
- (BOOL)removeHeadFromDocument:(id)arg1;
- (void)setMainDocumentURI:(id)arg1;
- (void)setStyleProperty:(id)arg1 value:(id)arg2 priority:(id)arg3 ofElement:(id)arg4;
- (void)setValue:(id)arg1 forAttribute:(id)arg2 ofElement:(id)arg3;
- (void)insertNode:(id)arg1 parent:(id)arg2 offset:(int)arg3;
- (void)insertNode:(id)arg1 parent:(id)arg2 nextSibling:(id)arg3;
- (void)replaceNode:(id)arg1 oldNode:(id)arg2;
- (void)deleteRange:(id)arg1;
- (void)deleteNode:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)selectionCouldBeMadeIntoALink;
- (BOOL)isSelectionInContentElement;
- (void)dealloc;
- (void)setContentElement:(id)arg1;
- (id)contentElement;
- (BOOL)isContentEditable;
- (BOOL)replaceSelectionWithFragment:(id)arg1 attachments:(id)arg2 pasteboard:(id)arg3 types:(id)arg4 action:(int)arg5 options:(int)arg6 isPlainText:(BOOL)arg7;
- (BOOL)replaceSelectionUsingContext:(id)arg1;
- (BOOL)_replaceSelectionWithPasteboardContentsDraggingInfo:(id)arg1 pasteboard:(id)arg2 pasteboardType:(id)arg3 action:(int)arg4 options:(int)arg5;
- (BOOL)_replaceSelectionWithContentsOfWebpage:(id)arg1;
- (BOOL)replaceSelectionWithPasteboardContentsDraggingInfo:(id)arg1 pasteboardType:(id)arg2 action:(int)arg3 options:(int)arg4;
- (BOOL)replaceSelectionWithPasteboardContentsPasteboard:(id)arg1 pasteboardType:(id)arg2 action:(int)arg3 options:(int)arg4;
- (unsigned long long)pastedGraphicCounter;
- (void)setEditingDelegate:(id)arg1;
- (id)editingDelegate;
- (id)mailPreferredPboardTypeFromTypes:(id)arg1 pasteboard:(id)arg2 isForDrag:(BOOL)arg3 preferHTML:(BOOL)arg4;
- (BOOL)isActive;
- (BOOL)maintainsInactiveSelection;

@end

@interface EditingWebMessageController : WebMessageController
{
}

- (BOOL)considerBaseURLsInternal;
- (void)setMainFrameDocumentView:(id)arg1;

@end

@interface EmailImporter : Importer
{
    NSString *_attachmentBeingSearchedFor;
    NSString *_rootFolderPath;
    NSArray *_sourceFolderPaths;
    NSArray *_sourcePaths;
    NSString *_destinationFolderName;
    NSString *_lastDirectoryFound;
    NSString *_temporaryImportFolderPath;
    char *_lineDelimiter;
    char *_fromSpaceSeparator;
    NSData *_newline;
    NSData *_greaterThanSign;
    NSData *_fromSpace;
    BOOL _errorsDuringImport;
}

- (void)dealloc;
- (id)mailboxForImportItem:(id)arg1;
- (id)mailboxNameForImportItem:(id)arg1;
- (id)_fromSpace;
- (id)_greaterThanSign;
- (id)_newline;
- (id)copyAttachmentsToMailFolder:(id)arg1;
- (BOOL)isAttachmentBeingSearchedFor:(id)arg1;
- (id)locateAttachments:(id)arg1 inFolder:(id)arg2;
- (id)createAttachmentText:(id)arg1 isHTML:(BOOL)arg2;
- (id)regenerateMessageData:(id)arg1 isHTML:(BOOL)arg2 isRich:(BOOL)arg3;
- (id)longestCommonPathForItems:(id)arg1;
- (id)uniqueDirectoriesForItems:(id)arg1;
- (id)searchForValidItemInsideDirectory:(id)arg1 validitySelector:(SEL)arg2 searchDepth:(long long)arg3;
- (id)searchForValidItemsInsideDirectory:(id)arg1 validitySelector:(SEL)arg2 limit:(unsigned long long)arg3 searchDepth:(long long)arg4;
- (id)validItemsFromPaths:(id)arg1 validitySelector:(SEL)arg2;
- (void)convertChar:(BOOL)arg1 toChar:(BOOL)arg2 inBytes:(char *)arg3 length:(long long)arg4;
- (void)updateSubjectStringForMessageHeaders:(id)arg1;
- (void)addMessagesToLibrary:(id)arg1 withMailbox:(id)arg2;
- (id)messageWithImporterData:(id)arg1;
- (BOOL)errorsDuringImport;
- (void)setErrorsDuringImport:(BOOL)arg1;
- (BOOL)isValidMailbox:(id)arg1;
- (void)setSourceList:(id)arg1;
- (id)sourceList;
- (void)setSourceFolders:(id)arg1;
- (id)sourceFolders;
- (void)setRootFolder:(id)arg1;
- (id)rootFolder;
- (void)setFromSpaceSeparator:(char *)arg1;
- (char *)fromSpaceSeparator;
- (void)setLineDelimiter:(char *)arg1;
- (id)destinationFolderName;
- (id)regexForAttachmentName:(id)arg1;
- (char *)lineDelimiter;
- (id)preProcessSourceData:(id)arg1;
- (void)importMailbox:(id)arg1;
- (void)processUserSelection;
- (void)readMailbox:(id)arg1 intoMailbox:(id)arg2;
- (void)cleanup;
- (id)statusLine;
- (id)importFinishedText;
- (void)importFinished;
- (void)revealMailbox:(id)arg1;
- (void)performImport;
- (id)init;

@end

@interface EudoraEmailImporter : FilesystemEmailImporter
{
}

+ (id)explanatoryText;
+ (id)name;
- (BOOL)isAttachmentBeingSearchedFor:(id)arg1;
- (id)_attachmentsInEudoraMessage:(id)arg1;
- (void)_stripTag:(char *)arg1 fromData:(id)arg2;
- (struct _NSRange)_rangeOfDataContainedByTag:(char *)arg1 endTag:(char *)arg2 inData:(id)arg3;
- (id)preProcessSourceData:(id)arg1;
- (BOOL)isValidMailbox:(id)arg1;
- (char *)fromString;

@end

@interface EWSAccountDetails : AccountDetails
{
    NSTextField *_internalServerPath;
    NSTextField *_externalServerPath;
    NSTextField *_externalPortNumber;
    NSButton *_externalUseSSL;
    BOOL _warnedAboutCachingAndIndexing;
    NSButton *_cachePolicyCheckbox;
}

@property(nonatomic) NSButton *cachePolicyCheckbox; // @synthesize cachePolicyCheckbox=_cachePolicyCheckbox;
- (void)cachePolicyChanged:(id)arg1;
- (void)didDisplayTabViewItem:(id)arg1;
- (id)portFieldForSSLCheckBox:(id)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (void)setupAccountFromValuesInUI:(id)arg1 forValidation:(BOOL)arg2;
- (void)setupUIFromValuesInAccount:(id)arg1;

@end

@interface EWSAccountSpecialMailboxes : RemoteStoreAccountSpecialMailboxes
{
}

- (id)init;

@end

@interface EWSQuota : RemoteStoreQuota
{
}

- (void)_updateUsageField;
- (void)engineUpdated:(id)arg1;
- (void)engineDidFinish;
- (void)engineDidStart;
- (Class)engineClass;
- (id)initWithAccount:(id)arg1;

@end

@interface FauxUIElement : NSObject
{
    NSString *_role;
    NSString *_identifier;
    id _parent;
}

+ (id)elementWithRole:(id)arg1 parent:(id)arg2 identifier:(id)arg3;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)identifier;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithRole:(id)arg1 parent:(id)arg2 identifier:(id)arg3;

@end

@interface MessageSegmentedCell : NSSegmentedCell
{
}

- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)_drawMenuIndicatorForSegment:(long long)arg1 withRect:(struct CGRect)arg2 inView:(id)arg3;
- (double)_alphaForSegment:(long long)arg1;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (double)_edgeInset;
- (double)_imageTextGap;

@end

@interface MessageSegmentedControl : NSSegmentedControl
{
    NSTrackingArea *_trackingArea;
}

+ (Class)cellClass;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)_updateRolloverWithMouseLocation:(struct CGPoint)arg1;
- (void)_updateRollover;
- (void)updateTrackingAreas;
- (void)setHidden:(BOOL)arg1;
- (void)setCell:(id)arg1;
- (id)cell;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FavoriteButtonMailboxProperties : NSObject
{
    BOOL _isContainer;
    BOOL _isPreferredSelection;
    int _type;
    NSString *_persistentIdentifier;
    NSString *_selectedSubMailboxPersistentIdentifier;
    NSString *_displayName;
    NSString *_accountURLString;
}

@property(nonatomic) BOOL isPreferredSelection; // @synthesize isPreferredSelection=_isPreferredSelection;
@property(nonatomic) BOOL isContainer; // @synthesize isContainer=_isContainer;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *accountURLString; // @synthesize accountURLString=_accountURLString;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain, nonatomic) NSString *selectedSubMailboxPersistentIdentifier; // @synthesize selectedSubMailboxPersistentIdentifier=_selectedSubMailboxPersistentIdentifier;
@property(retain, nonatomic) NSString *persistentIdentifier; // @synthesize persistentIdentifier=_persistentIdentifier;
- (id)dictionaryRepresentation;
- (void)dealloc;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithPersistentIdentifier:(id)arg1 selectedSubMailboxPersistentIdentifier:(id)arg2 displayName:(id)arg3 accountURLString:(id)arg4 type:(int)arg5 isContainer:(BOOL)arg6 isPreferredSelection:(BOOL)arg7;

@end

@interface _FavoriteButtonCell : MailBarContainerButtonCell
{
}

- (BOOL)_shouldDrawBezel;

@end

@interface FavoriteButton : MailBarContainerButton <FavoritesMenuDelegateProtocol, NSCopying>
{
    id <MFUIMailbox> _mailbox;
    FavoritesMenuController *_menuController;
    NSTimer *_showMenuTimer;
    NSTimer *_flashButtonTimer;
    long long _flashCount;
    BOOL _menuIsOpen;
    MFMailbox *_selectedSubMailbox;
    FavoriteButtonMailboxProperties *_mailboxProperties;
}

+ (BOOL)enabledStateforMailbox:(id)arg1;
+ (Class)cellClass;
+ (id)titleForMailbox:(id)arg1 selectedSubMailbox:(id)arg2 shouldUseExtendedName:(BOOL)arg3 countsChildren:(BOOL)arg4;
+ (unsigned long long)_unreadCountForMailbox:(id)arg1 countsChildren:(BOOL)arg2;
+ (void)setDraggedButton:(id)arg1;
+ (id)draggedButton;
@property(retain, nonatomic) FavoriteButtonMailboxProperties *mailboxProperties; // @synthesize mailboxProperties=_mailboxProperties;
@property(retain, nonatomic) MFMailbox *selectedSubMailbox; // @synthesize selectedSubMailbox=_selectedSubMailbox;
- (id)selectedMailbox;
- (void)menuDidSelectMailbox:(id)arg1;
- (void)menuDidClose;
- (void)menuDidPresent;
- (void)showMenu;
- (void)_showMenuTimerFired;
- (void)_toggleFlashState;
- (void)_stopShowMenuTimer;
- (void)_startShowMenuTimer;
- (id)description;
- (BOOL)_canAcceptMailboxAtPoint:(struct CGPoint)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)_dragOperationForCurrentEvent;
- (BOOL)_canDragMessageIntoSubMailboxesOrMailbox:(id)arg1;
- (BOOL)_canDragMessageIntoMailbox:(id)arg1;
- (void)flash;
- (void)_finishFlash:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_presentContextualPopupForEvent:(id)arg1;
- (BOOL)_shouldDispayMenuForEvent:(id)arg1;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)_performDragFromMouseDown:(id)arg1 withViewFrameOrigin:(struct CGPoint)arg2;
- (struct CGSize)_currentEventOffsetFromEvent:(id)arg1;
- (BOOL)_canDragHorizontally:(BOOL)arg1 fromMouseDown:(id)arg2;
- (id)_draggingImage;
- (void)dealloc;
- (BOOL)hasIndicator;
- (void)_setIndicator:(BOOL)arg1;
- (id)activeMailbox;
- (id)mailbox;
- (void)_fullScreenStateChanged:(id)arg1;
- (void)_mailboxSectionListingDidChange:(id)arg1;
- (void)_flagMailboxVisibilityChanged:(id)arg1;
- (void)_unreadCountDidChange:(id)arg1;
- (void)_mailboxInfoDidChange:(id)arg1;
- (void)_mailboxWillBecomeInvalid:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithMailbox:(id)arg1 selectedSubMailbox:(id)arg2;
- (void)_registerChildrenForUnreadCountChangesForMailbox:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)registerForDraggedTypes;

@end

@interface _MailboxPlaceholder : NSObject <MFUIMailbox, NSCopying>
{
    BOOL _isContainer;
    int _type;
    NSString *_persistentIdentifier;
    NSString *_displayName;
    NSString *_accountURLString;
}

@property(nonatomic) BOOL isContainer; // @synthesize isContainer=_isContainer;
@property int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *accountURLString; // @synthesize accountURLString=_accountURLString;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain, nonatomic) NSString *persistentIdentifier; // @synthesize persistentIdentifier=_persistentIdentifier;
- (id)extendedDisplayName;
- (unsigned long long)displayCount;
- (id)description;
- (void)dealloc;
- (BOOL)isPlaceholder;
- (BOOL)isDescendantOfMailboxWithType:(int)arg1;
- (id)children;
- (unsigned long long)numberOfChildren;
- (BOOL)hasChildren;
- (BOOL)isStore;
- (BOOL)isSmartMailbox;
- (id)account;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPersistentIdentifier:(id)arg1 name:(id)arg2 accountURLString:(id)arg3 type:(int)arg4 isContainer:(BOOL)arg5;

@end

@interface FavoritesBarView : SlidingViewsBar <ClippedItemsIndicatorDelegate>
{
    MailBarContainerView *_mailBarContainerView;
    NSMutableArray *_clippedMenuItems;
    NSMutableDictionary *_favoriteButtonsByMailboxes;
    NSSet *_duplicateMailboxesSet;
    double _firstFavoriteLeftEdge;
    double _buttonHeight;
    double _lastWidth;
    BOOL _preparedForFirstLayout;
    BOOL _windowDidClose;
    BOOL _shouldCheckForDuplicates;
    BOOL _isForSearch;
    MFMailbox *_selectedMailbox;
    MessageViewer *_messageViewer;
    NSMutableArray *_mailboxProperties;
}

+ (id)mailboxForFavoritesBarPosition:(unsigned long long)arg1;
+ (id)_favoriteMailboxPropertiesFromPreferences;
+ (id)_mailboxForMailboxProperties:(id)arg1;
+ (id)_mailboxPropertiesFromMailbox:(id)arg1;
+ (double)buttonBottomOffset;
+ (id)_menuItemForMailboxProperties:(id)arg1;
@property(retain, nonatomic) NSMutableArray *mailboxProperties; // @synthesize mailboxProperties=_mailboxProperties;
@property(nonatomic) MessageViewer *messageViewer; // @synthesize messageViewer=_messageViewer;
@property(retain, nonatomic) MFMailbox *selectedMailbox; // @synthesize selectedMailbox=_selectedMailbox;
- (void)flashButtonAtPosition:(unsigned long long)arg1;
- (struct CGPoint)centerOfButtonForFavoritesBarPosition:(unsigned long long)arg1;
- (id)_mailboxPropertiesForFavoritesBarPosition:(unsigned long long)arg1;
- (void)setFavoritesBarIsForSearch:(BOOL)arg1;
- (BOOL)_havePreviouslyAddedMailbox:(id)arg1;
- (void)_setFavoriteMailboxAddedDefaultForMailbox:(id)arg1;
- (void)_getDefaultSetOfMailboxes;
- (void)_finishedGettingDefaultMailboxes;
- (void)_writeFavoriteMailboxPropertiesToPreferences;
- (void)saveFavoritesBar;
- (void)_upgradeFavoritesBar;
- (BOOL)_favoritesPreferenceExists;
- (id)_primaryMailboxes;
- (id)_activeMailboxes;
- (void)_insertMailboxPropertiesFromMailbox:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_addMailboxPropertiesFromMailbox:(id)arg1;
- (void)updateButtonSelectionWithPreferredProperties:(id)arg1;
- (void)_VIPSendersChanged:(id)arg1;
- (void)clearButtons;
- (BOOL)isMailboxInFavoritesBar:(id)arg1;
- (double)_rightEdgeOfFavoritesViewSubviews;
- (void)_resetClippedItems;
- (void)_refreshButtonsSoon;
- (void)layOutButtons;
- (void)_favoritesViewFrameChanged:(id)arg1;
- (void)_mailboxSelectionChanged:(id)arg1;
- (void)_favoritesBarDidChanged:(id)arg1;
- (void)_mailAccountWillBeDeleted:(id)arg1;
- (void)_mailboxesChanged:(id)arg1;
- (void)_mailboxListingDidChange:(id)arg1;
- (void)_registerForNotifications;
- (id)_selectedButton;
- (void)deleteMailbox:(id)arg1;
- (void)deleteDraggedMailbox:(id)arg1;
- (id)_buttonAtMouseLocation:(struct CGPoint)arg1;
- (BOOL)addDroppedMailboxes:(id)arg1 atIndex:(long long)arg2;
- (void)favoriteButtonClicked:(id)arg1;
- (id)_addButtonForMailboxProperties:(id)arg1;
- (void)windowWillClose;
- (double)widthOfDraggingInfo:(id)arg1;
- (unsigned long long)updateDropTarget:(id)arg1;
- (void)reorderedSlidingView:(id)arg1;
- (void)refreshButtons;
- (void)_refreshMailboxProperties;
- (double)_paddingForSidebar;
- (double)paddingBetweenButtons;
- (double)maxButtonXWithoutClipIndicator;
- (double)maxButtonXWithClipIndicator;
- (double)minSlidingViewX;
- (double)minButtonX;
- (unsigned long long)lastNonSlidingViewIndex;
- (unsigned long long)dropIndexFromDraggingInfo:(id)arg1;
- (void)finishedSlidingAnimation:(id)arg1;
- (id)menuItemsForClippedItemsIndicator:(id)arg1;
- (void)_favoritesBarViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FavoriteMenuScrollHoverView : NSView
{
    NSTrackingArea *_trackingArea;
    NSImage *_arrowImage;
    unsigned long long _direction;
    id _delegate;
}

@property id delegate; // @synthesize delegate=_delegate;
@property(readonly) unsigned long long direction; // @synthesize direction=_direction;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)updateTrackingAreas;
- (id)initWithDirection:(unsigned long long)arg1;

@end

@interface RoundedCornersView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FavoritesMenuOutlineView : NSOutlineView
{
    NSTrackingArea *_trackingArea;
    FavoritesMenuController *_controller;
}

@property FavoritesMenuController *controller; // @synthesize controller=_controller;
- (void)scrollWheel:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)updateTrackingAreas;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FavoritesMenuController : NSObject <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NSWindow *_window;
    NSWindow *_parentWindow;
    MFMailbox *_mailbox;
    NSScrollView *_scrollView;
    FavoritesMenuOutlineView *_outlineView;
    id _mouseClickedMonitor;
    BOOL _isOpeningMenu;
    NSView *_upScrollHoverView;
    NSView *_downScrollHoverView;
    BOOL _needsScrollers;
    NSTimer *_scrollTimer;
    BOOL _isScrolling;
    id _delegate;
}

+ (void)closeExitingMenu;
@property(readonly) BOOL isScrolling; // @synthesize isScrolling=_isScrolling;
@property id delegate; // @synthesize delegate=_delegate;
- (void)stopScrolling:(unsigned long long)arg1;
- (void)stopScrolling;
- (void)startScrolling:(unsigned long long)arg1;
- (void)updateScrollArrows;
- (void)_scrollToNextPoint:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (BOOL)_canDragMessageIntoMailbox:(id)arg1;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (unsigned long long)_dragOperationForCurrentEvent;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)_nibForFavoriteMenuItemView;
- (id)_titleForTopLevelMailbox:(id)arg1;
- (void)presentPopupAtLocation:(struct CGPoint)arg1;
- (void)_insertOutlineViewInScrollView;
- (void)_constrainWindowToScreen;
- (void)_sizeWindowToFitCells;
- (struct CGSize)_windowSizeForOutlineViewSize:(struct CGSize)arg1;
- (void)_mouseClickedInApplicationWithEvent:(id)arg1;
- (void)_dragEnded:(id)arg1;
- (void)_applicationShouldClosePopup:(id)arg1;
- (void)closePopup;
- (void)dealloc;
- (void)_cleanupMenu;
- (id)initWithMailbox:(id)arg1 atWindow:(id)arg2;

@end

@interface FavoritesMenuItemRowView : NSTableRowView
{
}

- (void)drawSelectionInRect:(struct CGRect)arg1;

@end

@interface FavoritesMenuItem : NSTableCellView
{
    NSImageView *_menuStateImageView;
    unsigned long long _indentationLevel;
    NSImage *_image;
    NSImage *_alternateImage;
}

@property(retain, nonatomic) NSImage *alternateImage; // @synthesize alternateImage=_alternateImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(nonatomic) unsigned long long indentationLevel; // @synthesize indentationLevel=_indentationLevel;
@property(nonatomic) NSImageView *menuStateImageView; // @synthesize menuStateImageView=_menuStateImageView;
- (void)setState:(long long)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (double)preferredWidth;
- (void)dealloc;

@end

@interface FeedbackCollector : NSObject <MCActivityTarget, NSWindowDelegate>
{
    WebView *_metricsWebView;
    NSButton *_includeMetricsCheckbox;
    NSProgressIndicator *_spinner;
    NSTextField *_collectingTextField;
    NSView *_statusContainerView;
    NSButton *_continueButton;
    NSMutableString *_feedbackHTMLString;
    BOOL _sendMetricsImmediately;
    BOOL _currentlyLoading;
    NSWindow *_window;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)cancel:(id)arg1;
- (void)continue:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)_loadStringIntoWebView;
- (void)_cleanUpWindow;
- (void)_sendMetricsIfRequested;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)_collectMetrics;
- (void)run;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface FilesystemEmailImporter : EmailImporter
{
}

- (void)verifyFromSpaceHeaderForScanner:(id)arg1 dataLength:(long long)arg2;
- (void)sniffLineDelimiterFromData:(id)arg1;
- (BOOL)isValidMailbox:(id)arg1;
- (char *)fromString;
- (id)pathExtensions;
- (void)readMailbox:(id)arg1 intoMailbox:(id)arg2;
- (void)processUserSelection;
- (double)progressValueForMailboxAtPath:(id)arg1;
- (id)prepareForImport;

@end

@interface FindBarContainer : NSView <NSTextFinderBarContainer>
{
    NSView *_findBarView;
    BOOL _findBarVisible;
    NSView *_containerView;
}

- (void)updateLayer;
- (void)_layoutSubviews;
@property(getter=isFindBarVisible) BOOL findBarVisible;
@property(retain) NSView *findBarView;
- (id)contentView;
- (void)findBarViewDidChangeHeight;
- (BOOL)isFlipped;
- (BOOL)wantsUpdateLayer;
- (void)dealloc;

@end

@interface FlaggedStatusToolbarItem : NSToolbarItem
{
    id <FlaggedStatusToolbarItemDelegate> _delegate;
}

@property(nonatomic) id <FlaggedStatusToolbarItemDelegate> delegate; // @synthesize delegate=_delegate;
- (void)validate;
- (void)dealloc;
- (id)initWithItemIdentifier:(id)arg1;

@end

@interface FlaggedStatusView : NSSegmentedControl
{
    NSMutableDictionary *_flagIcons;
    BOOL _flagColorToDisplay;
    FlaggedStatusToolbarItem *_toolbarItem;
}

+ (BOOL)defaultFlagColor;
+ (id)menuForFlaggedStatus;
@property(nonatomic) FlaggedStatusToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;
- (void)_segmentedControlClicked:(id)arg1;
- (void)setupAccessibilityForButton:(BOOL)arg1;
@property(nonatomic) BOOL flagColorToDisplay;
- (void)dealloc;
- (void)_flaggedStatusViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FlagButtonImageView : NSImageView
{
    BOOL _selected;
    BOOL _displayMouseOverStyle;
}

@property(nonatomic) BOOL displayMouseOverStyle; // @synthesize displayMouseOverStyle=_displayMouseOverStyle;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FlagsMenuItemView : NSView
{
    NSTextField *_flagTitleTextField;
    NSTextField *_flagNameTextField;
    FlagButtonImageView *_clearFlaggedStatusView;
    NSMutableDictionary *_flagViews;
    NSMutableArray *_trackingAreas;
}

- (void)setEnabled:(BOOL)arg1;
- (void)viewDidMoveToWindow;
- (void)mouseUp:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_drawSelectedOutlineForView:(id)arg1;
- (id)_viewForFlagColor:(BOOL)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_flagsMenuItemViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FlatTableView : NSTableView
{
    NSImage *_selectionHighlightLeftEndCap;
    NSImage *_selectionHighlightCenter;
    NSImage *_selectionHighlightRightEndCap;
    NSImage *_dropDestinationLeftEndCap;
    NSImage *_dropDestinationCenter;
    NSImage *_dropDestinationRightEndCap;
}

- (BOOL)isOpaque;
- (void)tile;
- (id)_highlightColorForCell:(id)arg1;
- (void)highlightRow:(long long)arg1 withLeftEndCap:(id)arg2 center:(id)arg3 rightEndCap:(id)arg4;
- (void)_drawDropHighlightOnRow:(long long)arg1;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FlatTableViewDataCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface FontPreferenceContainerView : NSView
{
    NSButton *_selectButton;
    NSTextField *_labelTextField;
    NSTextField *_sampleTextField;
    struct CGRect _myOriginalFrame;
    struct CGRect _sampleTextFieldOriginalFrame;
    double _buttonOffset;
    double _labelOffset;
    double _sampleOffset;
    SEL _getSEL;
    SEL _setSEL;
}

@property SEL setSEL; // @synthesize setSEL=_setSEL;
@property SEL getSEL; // @synthesize getSEL=_getSEL;
- (void)sizeToFit;
- (void)layoutVertically;
- (void)awakeFromNib;

@end

@interface FontsAndColorsPreferences : NSPreferencesModule
{
    FontPreferenceContainerView *_messageListContainerView;
    FontPreferenceContainerView *_messageTextContainerView;
    FontPreferenceContainerView *_fixedWidthContainerView;
    NSArray *_fontPrefContainerViews;
    double _containerSuperViewSpacingY;
    double _containerContainerSpacingY;
    int _changingFontPreference;
    NSMutableDictionary *_midYDict;
    NSPopUpButton *_colorPopupOne;
    NSPopUpButton *_colorPopupTwo;
    NSPopUpButton *_colorPopupThree;
    NSPopUpButton *_lastColorPopupSelected;
    NSTextView *_exampleTextView;
    BOOL _isQuotedTextColored;
    BOOL _isPlainTextOfFixedWidth;
    NSFont *_messageListFont;
    NSFont *_messageFont;
    NSFont *_fixedWidthFont;
    NSArray *_colorList;
}

+ (id)keyPathsForValuesAffectingFixedWidthSampleFont;
+ (id)keyPathsForValuesAffectingMessageSampleFont;
+ (id)keyPathsForValuesAffectingMessageListSampleFont;
@property(retain) NSArray *colorList; // @synthesize colorList=_colorList;
@property BOOL isPlainTextOfFixedWidth; // @synthesize isPlainTextOfFixedWidth=_isPlainTextOfFixedWidth;
@property BOOL isQuotedTextColored; // @synthesize isQuotedTextColored=_isQuotedTextColored;
@property(retain) NSFont *fixedWidthFont; // @synthesize fixedWidthFont=_fixedWidthFont;
@property(retain) NSFont *messageFont; // @synthesize messageFont=_messageFont;
@property(retain) NSFont *messageListFont; // @synthesize messageListFont=_messageListFont;
- (unsigned long long)validModesForFontPanel:(id)arg1;
- (void)_colorPicked:(id)arg1;
- (void)colorPopupChanged:(id)arg1;
- (void)colorQuotesButtonClicked:(id)arg1;
- (void)_updateColorList;
- (void)_updateExampleTextView;
- (void)_setColor:(id)arg1 forPopup:(id)arg2;
- (void)_setOtherColor:(id)arg1 forPopup:(id)arg2;
- (void)changeFont:(id)arg1;
- (double)_sizeContainerView:(id)arg1;
- (id)_containerViewForFontPreference:(int)arg1;
- (void)toggleUseFixedWidthFont:(id)arg1;
- (void)toggleColorQuotedText:(id)arg1;
- (void)selectFont:(id)arg1;
- (void)moduleWillBeRemoved;
- (void)_populateFontPrefContainers;
- (id)_sampleFontForFont:(id)arg1;
@property(readonly) NSFont *fixedWidthSampleFont;
@property(readonly) NSFont *messageSampleFont;
@property(readonly) NSFont *messageListSampleFont;
- (void)_replaceExampleTextView;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (BOOL)isResizable;
- (void)_layoutFromFontPreference:(int)arg1;
- (void)_updateAutoresizeFlags:(int)arg1;
- (void)_growWindowVertically:(double)arg1 animate:(BOOL)arg2;
- (void)initializeFromDefaults;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FullScreenModalCapableWindow : NSWindow
{
    BOOL _hasTransform;
    BOOL _disableFrameConstraint;
    BOOL _isModal;
    BOOL _shouldNotSaveFrame;
    WindowTransformAnimation *_windowTransformAnimation;
    NSResponder *_nextFirstResponder;
}

@property BOOL shouldNotSaveFrame; // @synthesize shouldNotSaveFrame=_shouldNotSaveFrame;
@property BOOL isModal; // @synthesize isModal=_isModal;
@property(retain) NSResponder *nextFirstResponder; // @synthesize nextFirstResponder=_nextFirstResponder;
@property BOOL disableFrameConstraint; // @synthesize disableFrameConstraint=_disableFrameConstraint;
@property WindowTransformAnimation *windowTransformAnimation; // @synthesize windowTransformAnimation=_windowTransformAnimation;
- (void)setIdentityTransform;
- (void)setTransformForAnimation:(struct CGAffineTransform)arg1 anchorPoint:(struct CGPoint)arg2;
- (BOOL)isMainWindow;
- (BOOL)canEnterFullScreenMode;
- (void)makeKeyAndOrderFrontForAnimation;
- (void)makeKeyAndOrderFront:(id)arg1;
- (void)orderFront:(id)arg1;
- (void)saveFrameUsingName:(id)arg1;
- (void)orderOut:(id)arg1;
- (struct CGRect)constrainFrameRect:(struct CGRect)arg1 toScreen:(id)arg2;
- (void)keyDown:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)dealloc;

@end

@interface ModalDimmingWindow : NSWindow
{
}

- (void)dim;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface FullScreenWindowController : NSObject <NSAnimationDelegate>
{
    ModalDimmingWindow *_modalDimmingWindow;
    id <MailFullScreenWindowDelegate> _modalWindowDelegate;
    MessageViewer *_messageViewer;
    NSWindow *_coverExitAnimationWindow;
    CALayer *_mainWindowAnimationLayer;
    CALayer *_modalWindowAnimationLayer;
    MailWindowShadowLayer *_mainShadowLayer;
    MailWindowShadowLayer *_modalShadowLayer;
    struct CGImage *_mainWindowNonFullScreenSnapshot;
    struct CGImage *_modalWindowNonFullScreenSnapshot;
    struct CGRect _nonFullScreenWindowFrame;
    BOOL _isPerformingAnimation;
}

+ (void)waitForFullScreenSpaceSwitchIfNeeded;
+ (BOOL)isFrontmostMessageViewerInFullScreen;
+ (BOOL)preventCreationOfViewerOfClass:(Class)arg1;
+ (BOOL)preventCreationOfEditorOfClass:(Class)arg1 withType:(unsigned long long)arg2;
@property(readonly) BOOL isPerformingAnimation; // @synthesize isPerformingAnimation=_isPerformingAnimation;
- (void)_exitAnimationFinished;
- (void)startExitAnimationWithDuration:(double)arg1;
- (void)_animateModalWindow;
- (void)_animateMainWindow;
- (id)prepareExitAnimation;
- (struct CGImage *)_newModalWindowSnapshot;
- (void)_closeAnimationFinished;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)_animationDidEndOrStop:(id)arg1;
- (void)_openAnimationFinished;
- (id)_operationNameForAnimationType:(long long)arg1;
- (void)finishedReplyAnimation;
- (void)attachModalWindowWithDelegate:(id)arg1;
- (void)willAttachModalWindowWithDelegate:(id)arg1;
- (void)windowWillEnterFullScreen;
- (void)_setupDimmingWindow;
- (void)_cleanUpAfterModalWindowClose;
- (void)_closeModalWindow;
- (void)_modalWindowWillClose:(id)arg1;
- (struct CGRect)modalWindowRectWithParentWindow:(id)arg1;
- (BOOL)isModalWindowPresent;
- (void)_prepareModalWindowForNonFullScreen;
- (double)_titleBarHeight;
- (void)prepareWindowForFullScreen:(id)arg1;
- (void)presentModalWindowWithDelegate:(id)arg1;
- (void)closeModalWindowForcibly:(BOOL)arg1 animate:(BOOL)arg2 animationType:(long long)arg3;
- (void)closeModalWindowForcibly:(BOOL)arg1 animate:(BOOL)arg2;
- (BOOL)_isFullScreen;
- (id)_parentWindow;
- (void)dealloc;
- (id)initWithMessageViewer:(id)arg1;

@end

@interface GeneralPreferences : NSPreferencesModule <SoundPopUpButtonDelegate>
{
    NSPopUpButton *_fetchFrequencyPopup;
    SoundPopUpButton *_newMailSoundPopup;
    NSButton *_playMailSoundsCheckbox;
    NSPopUpButton *_dockBadgePopup;
    NSPopUpButton *_userNotificationPopup;
    MailboxesChooser *_dockBadgeMailboxesChooser;
    MailboxesChooser *_userNotificationMailboxesChooser;
    DefaultApplicationPopUpButton *_defaultMailClientPopUp;
    NSButton *_indexDecryptedMessagesButton;
    NSButton *_indexTrashButton;
    NSButton *_indexJunkButton;
    NSPopUpButton *_downloadFolderPopup;
    NSPopUpButton *_addInvitationsPopup;
    NSPopUpButton *_attachmentDeletionPopup;
}

- (void)attachmentDeletionPopupChanged:(id)arg1;
- (void)addInvitationsPopupChanged:(id)arg1;
- (void)chooseNewDownloadFolder:(id)arg1;
- (void)userNotificationPopupChanged:(id)arg1;
- (void)dockBadgePopupChanged:(id)arg1;
- (void)playSoundsClicked:(id)arg1;
- (id)titleForSoundFile:(id)arg1;
- (void)newMailSoundDidChange:(id)arg1;
- (void)indexJunkButtonClicked:(id)arg1;
- (void)indexTrashButtonClicked:(id)arg1;
- (void)indexDecryptedMessagesButtonClicked:(id)arg1;
- (void)fetchFrequencyChanged:(id)arg1;
- (void)initializeFromDefaults;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_setupUserNotificationPopup;
- (void)_setupDockCountPopup;
- (void)_addInvitationsBehaviorChanged:(id)arg1;
- (void)_updateAddInvitationsPopup;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;

@end

@interface GenericAttachmentFetcher : NSObject <MCActivityTarget>
{
    NSArray *_attachments;
    NSMutableSet *_attachmentsBeingDownloaded;
}

- (double)temporaryFolderTimeout;
- (void)didSaveAttachment:(id)arg1 toPath:(id)arg2;
- (void)didSaveAttachments:(id)arg1 paths:(id)arg2;
- (void)downloadedAllAttachments;
- (void)didFinishBackgroundLoadOfAttachment:(id)arg1;
- (void)beginSaveOfAttachments:(id)arg1 toTemporaryFolderWithName:(id)arg2 taskName:(id)arg3;
- (void)_saveAttachments:(id)arg1 itemManager:(id)arg2;
- (id)downloadedAttachments;
- (void)cancelBackgroundLoad;
- (void)beginBackgroundLoad;
- (void)_downloadCompleted:(id)arg1;
- (id)init;
- (id)initWithAttachments:(id)arg1;
- (void)dealloc;

@end

@interface GlassButton : NSButton
{
}

+ (Class)cellClass;
- (void)updateLayer;
- (double)baselineOffsetFromBottom;
- (CDStruct_3c058996)alignmentRectInsets;
- (struct CGSize)intrinsicContentSize;
- (BOOL)wantsUpdateLayer;
- (void)awakeFromNib;
- (void)setCell:(id)arg1;
- (void)_glassButtonCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GlassButtonCell : NSButtonCell
{
}

- (void)setBackgroundStyle:(long long)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)attributedTitle;
- (id)_titleAttributes;

@end

@interface HeaderButtonCell : NSButtonCell
{
}

- (BOOL)_shouldDrawTextWithDisabledAppearance;

@end

@interface HeaderButton : NSButton
{
    NSTrackingArea *_trackingArea;
}

@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
- (void)cursorUpdate:(id)arg1;
- (void)updateTrackingAreas;
- (CDStruct_3c058996)alignmentRectInsets;
- (void)dealloc;

@end

@interface HeadersEditor : NSObject <AccountStatusDataSourceDelegate, NSUserInterfaceValidations, NSWindowDelegate>
{
    DocumentEditor *_documentEditor;
    ComposeHeaderView *_composeHeaderView;
    NSPopUpButton *_fromPopup;
    NSPopUpButton *_signaturePopup;
    NSPopUpButton *_priorityPopup;
    NSSegmentedControl *_signButton;
    NSSegmentedControl *_encryptButton;
    AccountStatusDataSource *_deliveryASDS;
    NSPopUpButton *_deliveryPopUp;
    NSTextField *_subjectField;
    NSMutableArray *_accessoryViewOwners;
    BOOL _hasChanges;
    BOOL _registeredForAnimationObservation;
    MUIAddressField *_toField;
    MUIAddressField *_ccField;
    MUIAddressField *_bccField;
    MUIAddressField *_replyToField;
    NSTextField *_toTitle;
    NSTextField *_ccTitle;
    NSTextField *_bccTitle;
    NSTextField *_replyToTitle;
}

+ (id)keyPathsForValuesAffectingDeliveryAccount;
@property(nonatomic) BOOL registeredForAnimationObservation; // @synthesize registeredForAnimationObservation=_registeredForAnimationObservation;
@property BOOL hasChanges; // @synthesize hasChanges=_hasChanges;
@property(nonatomic) NSTextField *replyToTitle; // @synthesize replyToTitle=_replyToTitle;
@property(nonatomic) NSTextField *bccTitle; // @synthesize bccTitle=_bccTitle;
@property(nonatomic) NSTextField *ccTitle; // @synthesize ccTitle=_ccTitle;
@property(nonatomic) NSTextField *toTitle; // @synthesize toTitle=_toTitle;
@property(retain, nonatomic) MUIAddressField *replyToField; // @synthesize replyToField=_replyToField;
@property(retain, nonatomic) MUIAddressField *bccField; // @synthesize bccField=_bccField;
@property(retain, nonatomic) MUIAddressField *ccField; // @synthesize ccField=_ccField;
@property(retain, nonatomic) MUIAddressField *toField; // @synthesize toField=_toField;
- (id)_newSenderMarkupStringIncludeBrackets:(BOOL)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)dealloc;
- (void)prepareToCloseWindow;
- (void)_clearFieldIfHidden:(id)arg1;
- (void)addReplyToHeader:(id)arg1;
- (void)addBccHeader:(id)arg1;
- (void)addCcHeader:(id)arg1;
- (BOOL)headerCustomizationIsInProgress;
- (void)composeHeaderViewDidEndCustomization:(id)arg1;
- (void)composeHeaderViewWillBeginCustomization:(id)arg1;
- (void)changeSignature:(id)arg1;
- (void)editSignatures:(id)arg1;
- (void)_updateEncryptButtonInBackground;
- (void)securityControlChanged:(id)arg1;
- (void)setMessagePriority:(id)arg1;
- (void)changeFromHeader:(id)arg1;
- (void)changeHeaderField:(id)arg1;
- (void)accountStatusDidChange:(id)arg1;
- (id)mailAccount;
- (void)setDeliveryAccount:(id)arg1;
- (void)_setDynamicDeliveryAccountForAccount:(id)arg1;
- (id)deliveryAccount;
- (void)setSelectedAccount:(id)arg1;
- (void)toggleAccountLock:(id)arg1;
- (void)editServerList:(id)arg1 selectedAccount:(id)arg2;
- (BOOL)isOkayToSaveMessage:(id)arg1;
- (BOOL)canSignFromAnyAccount;
- (BOOL)messageHasRecipients;
- (BOOL)messageIsToBeEncrypted;
- (BOOL)messageIsToBeSigned;
- (void)changeSignatureFrom:(id)arg1 to:(id)arg2;
- (void)turnOffEncryption;
- (void)setCheckGrammarWithSpelling:(BOOL)arg1;
- (void)setInlineSpellCheckingEnabled:(BOOL)arg1;
- (void)appendAddresses:(id)arg1 toHeader:(id)arg2;
- (void)setHeaders:(id)arg1;
- (BOOL)_headerFieldIsNonEmpty:(id)arg1;
- (void)_addressFieldChanged;
- (void)_subjectChanged;
- (void)_textFieldBeganOrEndedEditing:(id)arg1;
- (void)loadHeadersFromBackEnd:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_headerKeyForView:(id)arg1;
- (id)fieldForHeader:(id)arg1;
- (void)_configureTextField:(id)arg1 isAddressField:(BOOL)arg2;
- (void)_setupField:(id)arg1 withAddressesForKey:(id)arg2 visibilityBlock:(id)arg3;
- (void)_setupAddressField:(id)arg1;
- (void)webViewDidLoadStationery:(id)arg1;
- (void)updateCcOrBccMyselfFieldWithSender:(id)arg1 oldSender:(id)arg2;
- (double)deliveryPopUpSizeToFitWidth;
- (void)_configureDeliveryPopupButton;
- (void)updateDeliveryAccountControl:(id)arg1;
- (void)updateSignatureControlOverridingExistingSignature:(BOOL)arg1;
- (void)_updateFromAndSignatureControls:(id)arg1;
- (void)_updateEncryptButtonToolTip;
- (void)_toggleEncrypButtonImages;
- (void)_updateSignButtonToolTip;
- (void)_toggleSignButtonImages;
- (void)_updateSecurityStateInBackgroundForRecipients:(id)arg1 sender:(id)arg2;
- (void)updateSecurityControls;
- (void)updatePriorityPopUpMakeActive:(BOOL)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)_accountInfoDidChange:(id)arg1;
- (void)_mailAccountsDidChange:(id)arg1;
- (void)composePrefsChanged;
- (void)initializePriorityPopUp;
- (void)configureButtonsAndPopUps;
- (void)setAGoodFirstResponder;
- (void)finishSetUp;
- (void)setUpFieldsAndButtons;
- (void)awakeFromNib;

@end

@interface HeaderView : NSView
{
    NSTrackingArea *_trackingArea;
    HeaderViewController *_viewController;
}

@property(nonatomic) HeaderViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (BOOL)transferSelectionToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
@property(readonly, nonatomic) MCMessage *displayedMessage;
- (void)cursorUpdate:(id)arg1;
- (void)updateTrackingAreas;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)dealloc;

@end

@interface HeaderViewController : NSViewController <HeaderLayoutManagerDelegate, NSTextStorageDelegate, NSTokenAttachmentDelegate>
{
    long long _detailsHidden;
    long long _detailLevel;
    long long _addressDisplayMode;
    BOOL _showMailboxLink;
    BOOL _showMessageNumber;
    BOOL _showVIPButton;
    NSFont *_font;
    HeaderView *_view;
    NSTextField *_dateReceivedField;
    NSButton *_detailsButton;
    NSView *_dividerView;
    NSButton *_mailboxNameButton;
    NSTextField *_messageNumberField;
    NSImageView *_senderImageView;
    NSButton *_unreadVIPButton;
    HeaderLayoutManager *_layoutManager;
    HeaderTextContainer *_textContainer;
    HeaderTextView *_textView;
    NSTextAttachment *_flagTextAttachment;
    NSTextAttachment *_attachmentTextAttachment;
    NSMutableDictionary *_displayStringsByHeaderKey;
    NSMutableSet *_expandedHeaderKeys;
    NSLayoutConstraint *_dateReceivedFieldTopAlignmentConstraint;
    NSLayoutConstraint *_dateReceivedFieldTrailingSpaceConstraint;
    NSLayoutConstraint *_dividerViewTrailingAlignmentConstraint;
    NSLayoutConstraint *_mailboxNameButtonBottomSpaceConstraint;
    NSLayoutConstraint *_mailboxNameButtonTrailingSpaceConstraint;
    NSLayoutConstraint *_messageNumberFieldBottomSpaceConstraint;
    NSLayoutConstraint *_senderImageViewBottomSpaceConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *senderImageViewBottomSpaceConstraint; // @synthesize senderImageViewBottomSpaceConstraint=_senderImageViewBottomSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *messageNumberFieldBottomSpaceConstraint; // @synthesize messageNumberFieldBottomSpaceConstraint=_messageNumberFieldBottomSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *mailboxNameButtonTrailingSpaceConstraint; // @synthesize mailboxNameButtonTrailingSpaceConstraint=_mailboxNameButtonTrailingSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *mailboxNameButtonBottomSpaceConstraint; // @synthesize mailboxNameButtonBottomSpaceConstraint=_mailboxNameButtonBottomSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *dividerViewTrailingAlignmentConstraint; // @synthesize dividerViewTrailingAlignmentConstraint=_dividerViewTrailingAlignmentConstraint;
@property(retain, nonatomic) NSLayoutConstraint *dateReceivedFieldTrailingSpaceConstraint; // @synthesize dateReceivedFieldTrailingSpaceConstraint=_dateReceivedFieldTrailingSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *dateReceivedFieldTopAlignmentConstraint; // @synthesize dateReceivedFieldTopAlignmentConstraint=_dateReceivedFieldTopAlignmentConstraint;
@property(readonly, nonatomic) NSMutableSet *expandedHeaderKeys; // @synthesize expandedHeaderKeys=_expandedHeaderKeys;
@property(readonly, nonatomic) NSMutableDictionary *displayStringsByHeaderKey; // @synthesize displayStringsByHeaderKey=_displayStringsByHeaderKey;
@property(readonly, nonatomic) NSTextAttachment *attachmentTextAttachment; // @synthesize attachmentTextAttachment=_attachmentTextAttachment;
@property(readonly, nonatomic) NSTextAttachment *flagTextAttachment; // @synthesize flagTextAttachment=_flagTextAttachment;
@property(retain, nonatomic) HeaderTextView *textView; // @synthesize textView=_textView;
@property(readonly, nonatomic) HeaderTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(readonly, nonatomic) HeaderLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(retain, nonatomic) NSButton *unreadVIPButton; // @synthesize unreadVIPButton=_unreadVIPButton;
@property(retain, nonatomic) NSImageView *senderImageView; // @synthesize senderImageView=_senderImageView;
@property(retain, nonatomic) NSTextField *messageNumberField; // @synthesize messageNumberField=_messageNumberField;
@property(retain, nonatomic) NSButton *mailboxNameButton; // @synthesize mailboxNameButton=_mailboxNameButton;
@property(retain, nonatomic) NSView *dividerView; // @synthesize dividerView=_dividerView;
@property(retain, nonatomic) NSButton *detailsButton; // @synthesize detailsButton=_detailsButton;
@property(retain, nonatomic) NSTextField *dateReceivedField; // @synthesize dateReceivedField=_dateReceivedField;
- (void)toggleVIP:(id)arg1;
- (void)toggleDetails:(id)arg1;
- (void)showSignerCertificate:(id)arg1;
- (id)menuForTokenAttachment:(id)arg1;
- (BOOL)hasMenuForTokenAttachment:(id)arg1;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (id)layoutManager:(id)arg1 shouldUseSelectedTextAttributes:(id)arg2 atCharacterIndex:(unsigned long long)arg3 effectiveRange:(struct _NSRange *)arg4;
- (void)layoutManager:(id)arg1 textContainerChangedGeometry:(id)arg2;
- (void)_layoutTextStorageIfNeeded;
- (id)_displayStringForSecurityKey;
- (id)_displayStringForHeaderKey:(id)arg1;
- (id)_displayStringForCombinedRecipientsKey;
- (id)_displayStringForAddressHeaderKey:(id)arg1;
- (void)_updateUnreadVIPButton;
- (void)_updateTextStorageWithHardInvalidation:(BOOL)arg1;
- (void)_updateSenderImageView;
- (void)_updateMessageNumberField;
- (void)_updateMailboxNameButton;
- (void)_updateFlagTextAttachment;
- (void)_updateDividerView;
- (void)_updateDetailsButton;
- (void)_updateDateReceivedField;
- (void)_updateAttachmentTextAttachment;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) BOOL showVIPButton;
@property(nonatomic) BOOL showMailboxLink;
@property(nonatomic) BOOL showMessageNumber;
@property(copy, nonatomic) NSFont *font;
@property(nonatomic) long long detailLevel;
@property(nonatomic) long long detailsHidden;
@property(nonatomic) long long addressDisplayMode;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (id)view;
- (void)dealloc;
- (void)_setupTextSystem;
- (void)_setupControls;
- (void)awakeFromNib;
- (void)_headerViewControllerCommonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface HyperlinkEditor : NSObject
{
    NSTextField *_linkTextField;
    NSButton *_okButton;
    NSButton *_removeButton;
    EditingMessageWebView *_webView;
    id _delegate;
    DOMHTMLAnchorElement *_selectedAnchor;
    DOMNode *_selectionContents;
    NSString *_replacementLink;
    NSPanel *_linkSheet;
}

@property(retain, nonatomic) NSPanel *linkSheet; // @synthesize linkSheet=_linkSheet;
- (void)_setReplacementLink:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)orderOutPanel:(id)arg1;
- (void)removeSelectedLink;
- (void)editLink;
- (id)initForWebView:(id)arg1 delegate:(id)arg2;
- (void)dealloc;

@end

@interface ImageResizer : NSObject <MCActivityTarget>
{
    NSData *_sourceData;
    NSString *_sourceFilename;
    unsigned int _sourceFileType;
    id _representedObject;
    struct CGRect _maxBounds;
    unsigned long long _maxFileBytes;
    struct CGSize _sourceSize;
    struct CGSize _destSize;
    MCActivityMonitor *_monitor;
    NSData *_resultData;
    NSString *_resultUTI;
    id <ImageResizerDelegate> _delegate;
}

+ (struct CGSize)scaleSize:(struct CGSize)arg1 toContainSize:(struct CGSize)arg2;
+ (struct CGSize)scaleSize:(struct CGSize)arg1 toFitSize:(struct CGSize)arg2;
+ (BOOL)isFileResizableImage:(id)arg1;
+ (void)initialize;
@property(nonatomic) id <ImageResizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *resultUTI; // @synthesize resultUTI=_resultUTI;
@property(retain, nonatomic) NSData *resultImageData; // @synthesize resultImageData=_resultData;
- (void)_resizeImage;
- (void)_didFinishResizingWithResultCode:(long long)arg1;
- (struct CGSize)resultImageSize;
- (unsigned int)resultFileType;
- (id)resultFileExtension;
- (void)cancel;
- (BOOL)isResizing;
- (void)resizeImage;
- (id)sourceFilename;
- (void)setMaxFileBytes:(unsigned long long)arg1;
- (unsigned long long)maxFileBytes;
- (void)setMaxImageSize:(struct CGSize)arg1;
- (struct CGSize)maxImageSize;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)dealloc;
- (id)init;
- (id)initWithImageData:(id)arg1 sourceFilename:(id)arg2 sourceFileType:(unsigned int)arg3;

@end

@interface IMAPAccountDetails : AccountDetails
{
    NSButton *_compactWhenClosing;
    NSTextField *_serverPathPrefix;
    BOOL _warnedAboutCachingAndIndexing;
    NSButton *_useIDLECommand;
    NSButton *_cachePolicyCheckbox;
}

@property(nonatomic) NSButton *cachePolicyCheckbox; // @synthesize cachePolicyCheckbox=_cachePolicyCheckbox;
- (void)cachePolicyChanged:(id)arg1;
- (void)didDisplayTabViewItem:(id)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (void)setupAccountFromValuesInUI:(id)arg1 forValidation:(BOOL)arg2;
- (void)setupUIFromValuesInAccount:(id)arg1;

@end

@interface IMAPAccountSpecialMailboxes : RemoteStoreAccountSpecialMailboxes
{
    NSButton *_trashCheckbox;
    BOOL _moveDeletedMessagesToTrash;
    BOOL _isGmailAccount;
}

@property(nonatomic) BOOL isGmailAccount; // @synthesize isGmailAccount=_isGmailAccount;
@property(nonatomic) BOOL moveDeletedMessagesToTrash; // @synthesize moveDeletedMessagesToTrash=_moveDeletedMessagesToTrash;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (BOOL)setupAccountFromValuesInUI:(id)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;
- (id)init;

@end

@interface _IMAPMailboxEntry : NSObject
{
    BOOL _subscribed;
    BOOL _isNoSelect;
    BOOL _hasEnabledDescendants;
    NSString *_name;
    NSString *_path;
    NSArray *_children;
    NSArray *_filteredChildren;
    MFMailbox *_mailbox;
    _IMAPMailboxEntry *_parent;
    IMAPMailboxes *_controller;
}

@property(nonatomic) IMAPMailboxes *controller; // @synthesize controller=_controller;
@property(retain, nonatomic) _IMAPMailboxEntry *parent; // @synthesize parent=_parent;
@property(nonatomic) BOOL hasEnabledDescendants; // @synthesize hasEnabledDescendants=_hasEnabledDescendants;
@property(nonatomic) BOOL isNoSelect; // @synthesize isNoSelect=_isNoSelect;
@property(retain, nonatomic) MFMailbox *mailbox; // @synthesize mailbox=_mailbox;
@property(retain, nonatomic) NSArray *children; // @synthesize children=_children;
@property(nonatomic) BOOL subscribed; // @synthesize subscribed=_subscribed;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (BOOL)isValidForCurrentFilter;
- (BOOL)isPathValidForCurrentFilter;
@property(copy, nonatomic) NSArray *filteredChildren; // @synthesize filteredChildren=_filteredChildren;
- (long long)compare:(id)arg1;
- (void)dealloc;

@end

@interface IMAPMailboxes : NSObject <AccountInfoTabOwner, MCActivityTarget, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NSView *_mailboxesView;
    NSSearchField *_searchField;
    NSOutlineView *_mailboxesOutline;
    NSButton *_subscribeButton;
    NSButton *_unsubscribeButton;
    NSProgressIndicator *_fetchProgressIndicator;
    NSTextField *_fetchStatusField;
    NSImageView *_statusImageView;
    MFIMAPAccount *_account;
    IMAPGateway *_gateway;
    NSPredicate *_predicate;
    NSArray *_mailboxes;
    NSArray *_filteredMailboxes;
    MCActivityMonitor *_mailboxListMonitor;
    MCInvocationQueue *_subscribeQueue;
    NSWindow *_window;
}

@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void)accountInfoWillShowView:(id)arg1;
- (void)accountInfoWillHideView:(id)arg1;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)_handleError:(id)arg1 settingSubscribedState:(id)arg2 forMailboxPath:(id)arg3 account:(id)arg4;
- (void)_setSubscribedState:(BOOL)arg1 forMailboxPath:(id)arg2 parentUid:(id)arg3;
- (void)_reallySetSubscribedState:(id)arg1 parentUid:(id)arg2 account:(id)arg3 forMailboxPath:(id)arg4;
- (void)_reallySetSubscribedState:(BOOL)arg1 forMailboxPath:(id)arg2 parentUid:(id)arg3 account:(id)arg4 refreshListing:(BOOL)arg5;
- (void)_updateEntryTreeForChangedEntry:(id)arg1 oldValue:(BOOL)arg2;
- (id)_mailboxEntryForMailbox:(id)arg1;
- (id)_mailboxEntryForPath:(id)arg1;
- (id)predicate;
- (void)_clearFilteredMailboxes:(id)arg1;
- (void)_clearFilteredMailboxes;
- (void)filterMailboxList:(id)arg1;
- (void)unsubscribeButtonClicked:(id)arg1;
- (void)subscribeButtonClicked:(id)arg1;
- (void)_handleSubscriptionRequest:(BOOL)arg1;
- (void)_handleSubscriptionRequest:(BOOL)arg1 forItem:(id)arg2 refreshSet:(id)arg3 recursive:(BOOL)arg4;
- (void)_reallyStopSubscriptionRequest:(id)arg1 refreshList:(id)arg2;
- (void)_stopSubscriptionRequest:(id)arg1;
- (void)_reallyStartSubscriptionRequest:(id)arg1;
- (void)_startSubscriptionRequest;
- (id)view;
- (void)_fetchMailboxListingForAccount:(id)arg1;
- (id)_recursivelyCreateMailboxEntriesForList:(id)arg1 subscribedList:(id)arg2 inLocalPath:(id)arg3 remotePath:(id)arg4 forAccount:(id)arg5;
- (void)_mailboxFetchCompleted:(id)arg1 forAccount:(id)arg2;
- (void)setupUIWithAccount:(id)arg1;
- (void)_setupNotifications;
- (void)setUIEnabled:(BOOL)arg1;
- (void)_updateUIForOnlineState:(id)arg1;
- (id)_alertIcon;
- (void)dealloc;
- (id)init;

@end

@interface IMAPQuota : RemoteStoreQuota
{
    NSPopUpButton *_quotaPopup;
    NSTextField *_quotaPopupLabel;
    NSView *_quotaContainerView;
    QuotaBar *_quotaBar;
    NSTextField *_capacityField;
    NSTextField *_statusField;
    double _spaceUnderQuotaPopup;
}

- (id)_stringForSize:(unsigned long long)arg1 andCount:(long long)arg2 isCapacity:(BOOL)arg3;
- (void)_updateUIForQuotaName:(id)arg1 updateTable:(BOOL)arg2;
- (void)engineUpdated:(id)arg1;
- (void)engineDidFinish;
- (void)_updateQuotaPopupWithQuotaNames:(id)arg1;
- (void)_engineStatusChanged:(id)arg1;
- (void)_updateStatusField;
- (void)_updateQuotaBarWithSize:(unsigned long long)arg1 maxSize:(unsigned long long)arg2 count:(long long)arg3 maxCount:(long long)arg4;
- (id)_selectedQuotaName;
- (void)quotaPopupChanged:(id)arg1;
- (BOOL)tableShouldIncludeMailbox:(id)arg1;
- (Class)engineClass;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithAccount:(id)arg1;

@end

@interface ImportAssistant : Assistant
{
    NSTabView *_tabView;
    NSMatrix *_importClients;
    NSTextField *_explanatoryTextInImportClientTab;
    NSProgressIndicator *_progressWheelInImportClientTab;
    NSTextField *_statusLineInImportClientTab;
    NSMatrix *_importTypes;
    NSTextField *_explanatoryText;
    NSProgressIndicator *_progressWheel;
    NSTextField *_statusLine;
    NSTableView *_tableView;
    NSProgressIndicator *_progressBar;
    NSTextField *_textFieldAbove;
    NSTextField *_textFieldBelow;
    NSTextField *_importFinished;
    NSArray *_clients;
    NSDictionary *_client;
    int _currentTab;
    EmailImporter *_importer;
    NSMutableArray *_importers;
    NSMutableArray *_startingImporters;
    double _currentTime;
    double _referenceTime;
    NSView *_topView;
    id _activityToken;
}

@property(retain, nonatomic) id activityToken; // @synthesize activityToken=_activityToken;
@property(retain, nonatomic) NSView *topView; // @synthesize topView=_topView;
- (void)_endUserInitiatedActivity;
- (void)_beginUserInitiatedActivity;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)shouldUpdateTextFields;
- (void)updateProgressIndicatorByValue:(double)arg1;
- (void)updateProgressIndicatorWithItem:(id)arg1;
- (void)updateProgressIndicatorWithFraction:(double)arg1 ofItem:(id)arg2;
- (void)_setProgressStartOnItem:(id)arg1;
- (void)_updateProgressIndicatorToValue:(id)arg1;
- (void)_updateProgressIndicatorByValue:(id)arg1;
- (void)initializeProgressIndicator;
- (void)reloadTableView;
- (void)setExplanatoryText:(id)arg1;
- (void)setTextFieldBelow:(id)arg1;
- (void)setTextFieldAbove:(id)arg1;
- (void)updateTextField:(id)arg1 withValue:(id)arg2;
- (void)clearStatusLine;
- (void)setStatusLine:(id)arg1;
- (void)askForMailboxLocationAllowedFileTypes:(id)arg1 allowsMultipleSelection:(BOOL)arg2;
- (void)askForMailboxLocation;
- (void)importFinished;
- (void)moveToTab:(int)arg1;
- (void)presentAlertSheetWithString:(id)arg1;
- (void)runImporter;
- (void)createNewImporter;
- (void)importClientSelected:(id)arg1;
- (void)goBackward;
- (void)goForward;
- (void)stop;
- (BOOL)shouldStop;
- (void)start;
- (id)windowTitle;
- (void)dealloc;
- (id)initWithAssistentManager:(id)arg1;

@end

@interface Importer : NSObject
{
    ImportAssistant *_delegate;
    NSMutableArray *_importArray;
    NSString *_applicationString;
    NSArray *_importFields;
    BOOL _importCanceled;
}

+ (id)name;
+ (id)explanatoryText;
- (void)dealloc;
- (void)importFinished;
- (void)performImport;
- (id)prepareForImport;
- (void)cleanup;
- (id)creatorCode;
- (id)importFinishedText;
- (id)statusLine;
- (void)sortArray:(id)arg1;
- (void)setImportFields:(id)arg1;
- (id)importFields;
- (void)setImportCanceled:(BOOL)arg1;
- (BOOL)importCanceled;
- (unsigned long long)countOfEnabledItems;
- (void)addItemToImportArray:(id)arg1;
- (void)clearImportArray;
- (id)importArray;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)name;
- (id)init;

@end

@interface ImportItem : NSObject
{
    NSString *_fullPath;
    NSString *_relativePath;
    long long _itemCount;
    id _identifier;
    long long _subfolderCount;
    id _importFields;
    BOOL _isEnabled;
    NSString *_displayName;
    double _progressValue;
    double _progressStart;
}

- (void)setImportFields:(id)arg1;
- (id)importFields;
- (void)setSubfolderCount:(long long)arg1;
- (long long)subfolderCount;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (void)setItemCount:(long long)arg1;
- (long long)itemCount;
- (void)setRelativePath:(id)arg1;
- (id)relativePath;
- (void)setFullPath:(id)arg1;
- (id)fullPath;
- (void)setProgressStart:(double)arg1;
- (double)progressStart;
- (void)setProgressValue:(double)arg1;
- (double)progressValue;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (void)setIsEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)dealloc;

@end

@interface InvitationAttachmentOpener : TemporaryAttachmentOpener
{
    BOOL _openImmediately;
}

- (void)beginSaveOfAttachments:(id)arg1 toTemporaryFolderWithName:(id)arg2 taskName:(id)arg3;
- (void)_saveAttachmentsToICalCaches:(id)arg1;
- (id)initWithAttachments:(id)arg1 openImmediately:(BOOL)arg2;

@end

@interface IOErrorWindowDelegate : NSObject <DynamicErrorWindowDelegate>
{
}

- (void)rightActionSelectedWithDiagnosis:(long long)arg1;
- (void)leftActionSelectedWithDiagnosis:(long long)arg1;
- (unsigned long long)helpTopicForDiagnosis:(long long)arg1;
- (id)rightButtonTextForErrorDiagnosis:(long long)arg1;
- (id)leftButtonTextForErrorDiagnosis:(long long)arg1;
- (id)errorDescriptionForErrorDiagnosis:(long long)arg1;
- (id)errorMessageForErrorDiagnosis:(long long)arg1;
- (BOOL)displayIndeterminateProgress;

@end

@interface JunkMailBannerViewController : LoadImagesBannerViewController
{
    NSTextField *_messageField;
}

@property(nonatomic) NSTextField *messageField; // @synthesize messageField=_messageField;
- (void)markNotJunk:(id)arg1;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (BOOL)shouldDisplayToLoadImages;
- (CDStruct_3c058996)iconAlignmentRectInsets;
- (id)backgroundColor;
- (void)dealloc;
- (id)nibName;

@end

@interface JunkPreferences : NSPreferencesModule
{
    NSButton *_advancedButton;
    NSMatrix *_junkMailMode;
    NSButton *_junkMailOnOffSwitch;
    NSMatrix *_junkMailWhitelist;
    long long _junkMailBehavior;
}

+ (id)keyPathsForValuesAffectingIsAdvancedEnabled;
+ (id)keyPathsForValuesAffectingIsEnabled;
+ (id)keyPathsForValuesAffectingLabelColor;
- (void)showCustomJunkMailSettings:(id)arg1;
- (void)resetJunkMailMap:(id)arg1;
- (void)changeJunkMailBehavior:(id)arg1;
@property(readonly) BOOL isAdvancedEnabled;
@property(readonly) BOOL isEnabled;
@property long long junkMailBehavior;
- (void)whitelistChanged:(id)arg1;
- (void)junkMailToggled:(id)arg1;
- (void)initializeFromDefaults;
@property(readonly) NSColor *labelColor;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (void)_messageRuleChanged:(id)arg1;
- (BOOL)isResizable;
- (void)moduleWasInstalled;
- (void)moduleWillBeRemoved;

@end

@interface LDAPServer : NSObject
{
}

- (void)setScope:(unsigned int)arg1;
- (unsigned int)scope;
- (void)setPort:(id)arg1;
- (id)port;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (void)setEntryName:(id)arg1;
- (id)entryName;
- (void)setSearchBase:(id)arg1;
- (id)searchBase;
- (void)setServerAddress:(id)arg1;
- (id)serverAddress;
- (id)objectSpecifier;

@end

@interface LibraryImportAssistant : Assistant <MCActivityTarget>
{
    MCActivityMonitor *_activityMonitor;
    NSTimer *_updateTimer;
    long long _state;
    BOOL _importWasSuccessful;
    BOOL _accountsAreNewlyCreated;
    NSView *_introView;
    NSView *_patienceView;
    NSView *_doneView;
    NSView *_errorView;
    NSView *_recoveryIntroView;
    NSTextField *_mailboxStatusField;
    NSTextField *_messageStatusField;
    NSTextField *_timeRemainingField;
    NSProgressIndicator *_progressBar;
    NSButton *_showNewFeaturesButton;
    NSTextField *_theNewFeaturesTextField;
}

@property(nonatomic) NSTextField *theNewFeaturesTextField; // @synthesize theNewFeaturesTextField=_theNewFeaturesTextField;
@property(nonatomic) NSButton *showNewFeaturesButton; // @synthesize showNewFeaturesButton=_showNewFeaturesButton;
@property(nonatomic) NSProgressIndicator *progressBar; // @synthesize progressBar=_progressBar;
@property(nonatomic) NSTextField *timeRemainingField; // @synthesize timeRemainingField=_timeRemainingField;
@property(nonatomic) NSTextField *messageStatusField; // @synthesize messageStatusField=_messageStatusField;
@property(nonatomic) NSTextField *mailboxStatusField; // @synthesize mailboxStatusField=_mailboxStatusField;
@property(retain, nonatomic) NSView *recoveryIntroView; // @synthesize recoveryIntroView=_recoveryIntroView;
@property(retain, nonatomic) NSView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) NSView *doneView; // @synthesize doneView=_doneView;
@property(retain, nonatomic) NSView *patienceView; // @synthesize patienceView=_patienceView;
@property(retain, nonatomic) NSView *introView; // @synthesize introView=_introView;
- (void)showNewFeatures:(id)arg1;
- (void)synchronouslyDoTheImport;
- (id)formattedTimeForSeconds:(double)arg1;
- (double)runningAverageWithNewValue:(double)arg1;
- (void)updateProgress:(id)arg1;
- (id)windowTitle;
- (void)goForward;
- (BOOL)_checkAccountDirectoryPermissions;
- (void)stop;
- (void)start;
- (void)setAccountsAreNewlyCreated:(BOOL)arg1;
- (void)dealloc;
- (id)initWithAssistentManager:(id)arg1;

@end

@interface LibraryUpgradeAssistant : Assistant <MFLibraryUpgraderDelegate, NSOpenSavePanelDelegate>
{
    MFLibraryUpgrader *_libraryUpgrader;
    NSView *_currentView;
    int _state;
    BOOL _accountsRequireStoragePolicyChange;
    NSView *_accountsRequireCachePolicyChangeView;
    NSView *_unresolvedAccountsView;
    NSView *_complexMigrationView;
    NSView *_patienceView;
    NSView *_epilogueView;
    NSView *_errorView;
    NSButton *_showNewFeaturesButton;
    NSTextField *_migrationDestinationTextField;
    NSTextField *_errorText;
}

@property(nonatomic) BOOL accountsRequireStoragePolicyChange; // @synthesize accountsRequireStoragePolicyChange=_accountsRequireStoragePolicyChange;
@property(nonatomic) NSTextField *errorText; // @synthesize errorText=_errorText;
@property(nonatomic) NSTextField *migrationDestinationTextField; // @synthesize migrationDestinationTextField=_migrationDestinationTextField;
@property(nonatomic) NSButton *showNewFeaturesButton; // @synthesize showNewFeaturesButton=_showNewFeaturesButton;
@property(retain, nonatomic) NSView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) NSView *epilogueView; // @synthesize epilogueView=_epilogueView;
@property(retain, nonatomic) NSView *patienceView; // @synthesize patienceView=_patienceView;
@property(retain, nonatomic) NSView *complexMigrationView; // @synthesize complexMigrationView=_complexMigrationView;
@property(retain, nonatomic) NSView *unresolvedAccountsView; // @synthesize unresolvedAccountsView=_unresolvedAccountsView;
@property(retain, nonatomic) NSView *accountsRequireCachePolicyChangeView; // @synthesize accountsRequireCachePolicyChangeView=_accountsRequireCachePolicyChangeView;
- (void)chooseMigrationDestination:(id)arg1;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)showNewFeatures:(id)arg1;
- (void)upgrader:(id)arg1 didFailWithError:(id)arg2;
- (void)upgraderDidFinish:(id)arg1;
- (void)requestUserAttentionWithRequestType:(unsigned long long)arg1;
- (void)goForward;
- (void)stop;
- (void)start;
- (void)setCurrentView:(id)arg1;
- (id)currentView;
- (void)setState:(int)arg1;
- (int)state;
- (id)windowTitle;
- (void)setLibraryUpgrader:(id)arg1;
- (id)libraryUpgrader;
- (void)dealloc;
- (id)initWithAssistentManager:(id)arg1;

@end

@interface LoadImagesBannerViewController : BannerViewController
{
    NSButton *_loadImagesButton;
    NSLayoutConstraint *_messageFieldToLoadImagesButtonHorizontalSpacing;
    BannerImageView *_icon;
}

@property(nonatomic) BannerImageView *icon; // @synthesize icon=_icon;
@property(nonatomic) NSLayoutConstraint *messageFieldToLoadImagesButtonHorizontalSpacing; // @synthesize messageFieldToLoadImagesButtonHorizontalSpacing=_messageFieldToLoadImagesButtonHorizontalSpacing;
@property(nonatomic) NSButton *loadImagesButton; // @synthesize loadImagesButton=_loadImagesButton;
- (void)loadImages:(id)arg1;
- (void)updateWantsDisplay;
- (void)updateBannerContents;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (void)awakeFromNib;
@property(readonly, nonatomic) BOOL shouldDisplayToLoadImages;
@property(readonly, nonatomic) CDStruct_3c058996 iconAlignmentRectInsets;
- (id)backgroundColor;
- (void)dealloc;
- (id)nibName;

@end

@interface LoadingOverlay : NSObject
{
    MCActivityMonitor *_monitor;
    NSView *_overlayView;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_statusMessageField;
    id _modalDelegate;
}

@property id modalDelegate; // @synthesize modalDelegate=_modalDelegate;
@property(nonatomic) NSTextField *statusMessageField; // @synthesize statusMessageField=_statusMessageField;
@property(nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) NSView *overlayView; // @synthesize overlayView=_overlayView;
- (void)stop;
- (void)_activityEnded:(id)arg1;
@property(retain) NSString *statusMessage;
@property(retain, nonatomic) MCActivityMonitor *activityMonitor;
- (void)displayInSuperviewAfterDelay:(id)arg1;
- (void)displayInSuperview:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithModalDelegate:(id)arg1;

@end

@interface MailAddressDelegate : NSObject <MUITokenAddressDelegate>
{
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_searchForToken:(id)arg1;
- (void)_removeFromVIPs:(id)arg1;
- (void)_addToVIPs:(id)arg1;
- (void)_openNewMessageForTokenAddress:(id)arg1;
- (BOOL)tokenAddressIsVIP:(id)arg1;
- (void)tokenAddress:(id)arg1 didSelectAction:(long long)arg2;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;

@end

@interface MailAnimatingButton : NSButton <NSAnimationDelegate>
{
    NSViewAnimation *_animation;
    NSImageView *_backImageView;
    NSImageView *_frontImageView;
}

- (void)_animationDidEnd;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)setImage:(id)arg1 animates:(BOOL)arg2;
- (void)setImage:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailApp : NSApplication <IMAPUserAgent, MCUserAgent, MFUserAgent, MCActivityTarget, MVTerminationHandler, NSApplicationDelegate, NSMenuDelegate>
{
    long long *_errorDiagnosisResult;
    NSMenu *_viewAttachmentContextMenu;
    unsigned int _paused:1;
    id <MVSelectionOwner> _selectionOwner;
    NSMenu *_mailboxesContextMenu;
    NSMenu *_addButtonMenu;
    NSMenu *_messageViewerContextMenu;
    NSMenu *_composeAttachmentContextMenu;
    MailboxesController *_mailboxesController;
    NSString *_noMailSoundPath;
    NSString *_fetchErrorSoundPath;
    DockCountController *_dockCountController;
    NSMutableArray *_stationeryBundlesToInstall;
    double _appDidFinishLaunchingTime;
    DeliveryQueue *_deliveryQueue;
    ActivityViewer *_activityViewer;
    ActivityViewerMailSound *_activityViewerMailSound;
    id _terminationHandlersLock;
    NSMutableArray *_terminationHandlers;
    NSMutableArray *_currentTerminationHandlers;
    unsigned long long _terminateReply;
    unsigned int _autoLaunchHidden:1;
    unsigned int _shouldPlayFetchErrorSound:1;
    unsigned int _appHasFinishedLaunching:1;
    unsigned int _synchronizingAllAccounts:1;
    unsigned int _groupingByThreadDefaultsToOn:1;
    unsigned int _updateEmailAliasesOnNextActivation:1;
    NSMutableSet *_accountsCurrentlySynchronizing;
    unsigned long long _numberOfAccountsEmptyingTrash;
    BOOL _accountsAreNew;
    BOOL _runningEmptyTrashSheet;
    NSMutableArray *_appleEventDescriptorQueue;
    BOOL _isTerminating;
    BOOL _isExitingFullscreen;
    BOOL _hasPerformedDelayedInitialization;
    BOOL _accountsHaveBeenConfigured;
    FlagsMenuItemView *_flagsMenuItemView;
    NSWindow *_errorDiagnosisWindow;
    DynamicErrorWindowController *_errorDiagnosisWindowController;
}

+ (void)_testMachPorts;
@property BOOL accountsHaveBeenConfigured; // @synthesize accountsHaveBeenConfigured=_accountsHaveBeenConfigured;
@property BOOL hasPerformedDelayedInitialization; // @synthesize hasPerformedDelayedInitialization=_hasPerformedDelayedInitialization;
@property BOOL isExitingFullscreen; // @synthesize isExitingFullscreen=_isExitingFullscreen;
@property BOOL isCurrentlyTerminating; // @synthesize isCurrentlyTerminating=_isTerminating;
@property(retain, nonatomic) DynamicErrorWindowController *errorDiagnosisWindowController; // @synthesize errorDiagnosisWindowController=_errorDiagnosisWindowController;
@property(retain, nonatomic) NSWindow *errorDiagnosisWindow; // @synthesize errorDiagnosisWindow=_errorDiagnosisWindow;
@property(retain, nonatomic) FlagsMenuItemView *flagsMenuItemView; // @synthesize flagsMenuItemView=_flagsMenuItemView;
- (void)_delayedUpgradeSteps;
- (void)_handleSyncNotification:(id)arg1;
- (void)_smartMailboxesChanged:(id)arg1;
- (void)_rulesChanged:(id)arg1;
- (BOOL)shouldRestoreStateOnNextLaunch;
- (void)replyToApplicationShouldTerminate:(BOOL)arg1;
- (void)handler:(id)arg1 approvedQuit:(BOOL)arg2;
- (void)removeTerminationHandler:(id)arg1;
- (void)addTerminationHandler:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (id)_currentTerminationHandler;
- (void)_nowWouldBeAGoodTimeForHandler:(id)arg1 toTerminateFromSelector:(SEL)arg2;
- (void)_backfillDateLastViewedAttribute;
- (void)_fixAttachmentCache;
- (void)_cleanOldDatabases:(id)arg1;
- (void)_cleanUpAccount:(id)arg1;
- (void)_cleanupFinished:(id)arg1;
- (void)_approveQuitIfFinished:(id)arg1;
- (void)_terminateNoConfirm;
- (void)quitNoMatterWhat;
- (void)timeMachineDismiss:(id)arg1;
- (void)_timeMachineSendEvent:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (id)preferredReplyAddressBasedOnCurrentSelection;
- (id)preferredAccountBasedOnSelection;
- (id)selectionOwner;
- (id)selectionExpandingThreadsAndHiddenCopies:(BOOL)arg1;
- (id)selection;
- (void)resignSelectionFor:(id)arg1;
- (void)setSelectionFrom:(id)arg1;
- (id)deliveryQueue;
- (void)mailTo:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)mailSelection:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (id)messageEditor;
- (void)_mailDocuments:(id)arg1;
- (id)frameworkVersion;
- (id)applicationVersion;
- (BOOL)handleClickOnURL:(id)arg1 visibleText:(id)arg2 window:(id)arg3 dontSwitch:(BOOL)arg4;
- (BOOL)handleMessageURL:(id)arg1;
- (BOOL)handleMailToURL:(id)arg1;
- (void)_preferencesChanged:(id)arg1;
- (id)mailboxesController;
- (void)menuWillOpen:(id)arg1;
- (void)willPresentContextualMenu:(id)arg1;
- (id)toolbarItemCopyMenu;
- (id)toolbarItemMoveMenu;
@property(retain, nonatomic) NSMenu *composeAttachmentContextMenu;
@property(retain, nonatomic) NSMenu *viewAttachmentContextMenu;
@property(retain, nonatomic) NSMenu *messageViewerContextMenu;
@property(retain, nonatomic) NSMenu *mailboxesContextMenu;
@property(retain, nonatomic) NSMenu *addButtonMenu;
- (void)loadMailboxesContextMenuNib;
- (id)activityViewer;
- (void)_addressManagerLoaded:(id)arg1;
- (id)_messageEditorWithSettings:(id)arg1;
- (id)openMessageEditorWithParsedMessage:(id)arg1 headers:(id)arg2 activatingApp:(BOOL)arg3;
- (id)openStoreWithMailbox:(id)arg1 andMakeKey:(BOOL)arg2;
- (id)openStoreWithMailbox:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)updateEmailAliasesOnNextActivation;
- (void)applicationDidUnhide:(id)arg1;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (void)handleStationeryBundles;
- (BOOL)_handleOpenMessage:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)_mailAccountNeedsChecking:(id)arg1;
- (void)fetchErrorHasOccurred;
- (void)_backgroundFetchCompleted:(id)arg1;
- (void)_autoFetchMail:(id)arg1;
- (void)checkNewMailInSelectedAccounts:(id)arg1;
- (void)_checkNewMailInAccountRepresentedByMailbox:(id)arg1;
- (void)checkNewMail:(id)arg1;
- (void)checkNewMailInAccount:(id)arg1;
- (void)checkNewMailInAccount:(id)arg1 isAutocheck:(BOOL)arg2;
- (void)_doBackgroundFetch:(BOOL)arg1;
- (void)_checkNewMail:(BOOL)arg1;
- (void)_autoFetchDidChange;
- (void)setAutoFetchFrequency:(long long)arg1;
- (long long)autoFetchFrequency;
- (void)setShouldAutoFetch:(BOOL)arg1;
- (BOOL)shouldAutoFetch;
- (void)setGroupingByThreadDefaultsToOn:(BOOL)arg1;
- (BOOL)groupingByThreadDefaultsToOn;
- (void)toggleThreadedMode:(id)arg1;
- (void)eraseJunkMail:(id)arg1;
- (void)showToolbarItemForJunkMail:(BOOL)arg1;
- (void)compactSelectedMailboxes:(id)arg1;
- (void)emptyTrashInAccount:(id)arg1;
- (id)_accountsToEmptyTrashIn:(id)arg1;
- (void)_emptyTrashPromptingUserInAccounts:(id)arg1 storeToCompact:(id)arg2;
- (void)_emptyTrashInAccounts:(id)arg1 storeToCompact:(id)arg2;
- (void)editAccount:(id)arg1;
- (void)_aosAccountMigratedExternally:(id)arg1;
- (void)_webAuthenticationCompleted:(id)arg1;
- (void)_mailAccountsChangedExternally:(id)arg1;
- (void)_deliveryAccountsChangedExternally:(id)arg1;
- (void)_accountsChanged:(id)arg1;
- (void)_setupCheckSpellingSubMenu;
- (void)_setupAccountMenuItems;
- (void)_removeAllItemsInAccountMenuWithTag:(long long)arg1;
- (void)_removeExtraSeparatorsInMailboxMenu;
- (void)bringUpGetNewMailMenu:(id)arg1;
- (void)bringUpEmptyTrashMenu:(id)arg1;
- (void)bringUpSynchronizeAccountMenu:(id)arg1;
- (void)bringUpOnlineOfflineMenu:(id)arg1;
- (void)_synchronizeAccountListMenuWithTagIfNeeded:(long long)arg1;
- (void)_getActiveAccountsThatCanGoOffline:(id)arg1 fetch:(id)arg2 sync:(id)arg3 deleteToTrash:(id)arg4 doesNotDeleteToTrash:(id)arg5;
- (id)_getMenuItemInMessageMenuWithTag:(long long)arg1;
- (id)_mailboxMenu;
- (void)_resetMenuItemWithTag:(long long)arg1;
- (void)insertOriginalAttachments:(id)arg1;
- (void)attachFilesAtEnd:(id)arg1;
- (void)alwaysAttachFilesAtEnd:(id)arg1;
- (void)sendWindowsFriendlyAttachments:(id)arg1;
- (void)alwaysSendWindowsFriendlyAttachments:(id)arg1;
- (void)showAccountInfo:(id)arg1;
- (void)showReleaseNotes:(id)arg1;
- (void)importMailboxes:(id)arg1;
- (void)addAccount:(id)arg1;
- (void)openSystemAccountPreferences:(id)arg1;
- (void)collectFeedback:(id)arg1;
- (void)showPreferencesPanel:(id)arg1;
- (void)showActivityViewer:(id)arg1;
- (void)showAddressHistoryPanel:(id)arg1;
- (void)showAddressPanel:(id)arg1;
- (void)showMediaBrowser:(id)arg1;
- (void)selectMailbox:(id)arg1;
- (void)newViewerWindow:(id)arg1;
- (void)addFontTrait:(id)arg1;
- (void)orderFrontStylesPanel:(id)arg1;
- (void)showComposeWindow:(id)arg1;
- (void)showInfoPanel:(id)arg1;
- (void)showConnectionDoctor:(id)arg1;
- (void)closeAll:(id)arg1;
- (void)_emailsRejected:(id)arg1;
- (void)_emailAddressesApproved:(id)arg1;
- (void)_handleNetworkConfigurationChange;
- (void)_networkConfigurationChanged:(id)arg1;
- (void)synchronizeAccount:(id)arg1;
- (void)performSynchronizationForAccounts:(id)arg1;
- (void)_clearAccountsCurrentlySynchronizing;
- (BOOL)_isAccountCurrentlySynchronizing:(id)arg1;
- (void)_removeFromAccountsCurrentlySynchronizing:(id)arg1;
- (void)_addToAccountsCurrentlySynchronizing:(id)arg1;
- (void)toggleAccountOnlineStatus:(id)arg1;
- (void)disconnectThisAccountFromContextMenu:(id)arg1;
- (void)connectThisAccountFromContextMenu:(id)arg1;
- (void)connectAllAccountsFromContextMenu:(id)arg1;
- (void)disconnectAllAccountsFromContextMenu:(id)arg1;
- (void)disconnectThisAccount:(id)arg1;
- (void)connectThisAccount:(id)arg1;
- (void)connectAllAccounts:(id)arg1;
- (void)disconnectAllAccounts:(id)arg1;
- (BOOL)_moreThanOneAccountCanGoOffline;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)runPageLayout:(id)arg1;
- (id)_accountBeingViewed;
- (BOOL)_isMailboxBeingViewedSpecial;
- (id)_mailboxBeingViewed;
- (id)_failureInfoForBundle:(id)arg1 path:(id)arg2;
- (void)_loadBundlesFromPath:(id)arg1 failedBundleInfos:(id)arg2;
- (void)_loadBundles;
- (void)_setupInitialState;
- (void)_restoreMessagesFromDefaults;
- (BOOL)accountsAreNew;
- (BOOL)_needToCreateLibraryUpgradingIfNecessary;
- (void)_setupQuitMenu;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)_exitIfInUpgradeOnlyMode;
- (void)transformToBackground;
- (BOOL)applicationIsInBackgroundMode;
- (void)transformToForeground;
- (BOOL)applicationWillBeRestoredByTAL;
- (void)_delayOnStartup;
- (void)_showDatabaseAlert:(BOOL)arg1 databaseFile:(id)arg2;
- (void)_showReadOnlyFolderAlert:(id)arg1;
- (void)_showUnresolvedFolderAlert:(id)arg1;
- (void)_performBackgroundDelayedInitialization;
- (void)_setSourceOnGmailLabels;
- (void)_performDelayedInitialization;
- (void)_tryToPerformDelayedInitialization;
- (void)_updateEmailAliases;
- (void)checkAndEnableMidnightTimerIfNecessary;
- (void)disableMidnightTimer;
- (void)resetAutoFetchTimer;
- (void)checkAndEnableAutoFetchTimerIfNecessary;
- (void)disableAutoFetchTimer;
- (void)_registerForActivityFetchTimerWithFetchInterval:(double)arg1;
- (void)_unregisterForActivityFetchTimer;
- (void)_setupMidnightTimer;
- (void)_midnightPassed;
- (void)_systemTimeChanged;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)_showViewerWindow:(id)arg1;
- (void)showViewerWindow:(id)arg1;
- (void)_accountInfoDidChange:(id)arg1;
- (void)sendEvent:(id)arg1;
- (BOOL)appHasFinishedLaunching;
- (void)dealloc;
- (id)init;
- (id)deliveryAccounts;
- (void)removeFromAccountsAtIndex:(unsigned long long)arg1;
- (void)insertInPopAccounts:(id)arg1;
- (void)insertInPopAccounts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInImapAccounts:(id)arg1;
- (void)insertInImapAccounts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInAosImapAccounts:(id)arg1;
- (void)insertInAosImapAccounts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInAccounts:(id)arg1;
- (void)insertInAccounts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_insertInAccounts:(id)arg1 atIndex:(unsigned long long)arg2;
- (long long)backgroundThreadCount;
- (void)setShouldCheckIntranetDomains:(BOOL)arg1 withString:(id)arg2;
- (void)setInlineSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)inlineSpellCheckingEnabled;
- (void)setEncryptOutgoingMessages:(BOOL)arg1;
- (BOOL)encryptOutgoingMessages;
- (void)setSignOutgoingMessages:(BOOL)arg1;
- (BOOL)signOutgoingMessages;
- (void)setIncludeAllOfOriginalMessage:(BOOL)arg1;
- (BOOL)includeAllOfOriginalMessage;
- (void)setIncludeOriginalMessage:(BOOL)arg1;
- (BOOL)includeOriginalMessage;
- (void)setAlwaysBCCMyself:(BOOL)arg1;
- (BOOL)alwaysBCCMyself;
- (void)setAlwaysCCMyself:(BOOL)arg1;
- (BOOL)alwaysCCMyself;
- (void)setReplyInSameFormat:(BOOL)arg1;
- (BOOL)replyInSameFormat;
- (void)setUseAddressCompletion:(BOOL)arg1;
- (BOOL)useAddressCompletion;
- (void)setExpandGroupAddresses:(BOOL)arg1;
- (BOOL)expandGroupAddresses;
- (void)setCheckGrammarWithSpelling:(BOOL)arg1;
- (BOOL)checkGrammarWithSpelling;
- (void)setSpellCheckingBehavior:(long long)arg1;
- (long long)spellCheckingBehavior;
- (void)setAutosaveComposeWindows:(BOOL)arg1;
- (BOOL)autosaveComposeWindows;
- (void)setDefaultMessageFormat:(unsigned int)arg1;
- (unsigned int)defaultMessageFormat;
- (void)setLevelThreeQuotingColor:(int)arg1;
- (int)levelThreeQuotingColor;
- (void)setLevelTwoQuotingColor:(int)arg1;
- (int)levelTwoQuotingColor;
- (void)setLevelOneQuotingColor:(int)arg1;
- (int)levelOneQuotingColor;
- (int)quotingColorValue:(id)arg1;
- (int)quotingColorForLevel:(long long)arg1;
- (void)setQuotingColor:(int)arg1 forLevel:(long long)arg2;
- (void)setFixedWidthFontSize:(double)arg1;
- (double)fixedWidthFontSize;
- (void)setFixedWidthFont:(id)arg1;
- (id)fixedWidthFont;
- (void)setUseFixedWidthFont:(BOOL)arg1;
- (BOOL)useFixedWidthFont;
- (void)setMessageFontSize:(double)arg1;
- (double)messageFontSize;
- (void)setMessageFont:(id)arg1;
- (id)messageFont;
- (void)setMessageListFontSize:(double)arg1;
- (double)messageListFontSize;
- (void)setMessageListFont:(id)arg1;
- (id)messageListFont;
- (void)setColorQuotedText:(BOOL)arg1;
- (BOOL)colorQuotedText;
- (void)setFixedPitchFont:(id)arg1 size:(double)arg2;
- (void)setMessageFont:(id)arg1 size:(double)arg2;
- (void)fontsAndColorsPreferencesDidChange;
- (void)fontsAndColorsPreferencesDidChange:(BOOL)arg1;
- (void)setIndexDecryptedMessages:(BOOL)arg1;
- (BOOL)indexDecryptedMessages;
- (void)setDownloadFolderURL:(id)arg1;
- (id)downloadFolderURL;
- (void)setMailSoundForNewMail:(id)arg1;
- (id)mailSoundForNewMail;
- (void)setSoundPathForNewMail:(id)arg1;
- (id)soundPathForNewMail;
- (void)setPlayOtherMailSounds:(BOOL)arg1;
- (BOOL)playOtherMailSounds;
- (void)handleShowAccountPreferencesEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleSafariPDFEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleSafariReaderArchiveEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleSafariPageArchiveEvent:(id)arg1 replyEvent:(id)arg2;
- (void)shareInMailEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleMailWebLinkEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleMailWebPageEvent:(id)arg1 replyEvent:(id)arg2;
- (void)handleGURLAppleEvent:(id)arg1 replyEvent:(id)arg2;
- (void)queueAppleEvent:(id)arg1 replyEvent:(id)arg2;
- (void)_unregisterAppleEventHandlers;
- (void)_registerAppleEventHandlers;
- (void)_registerAppleEventQueue;
- (id)handleImportMboxCommand:(id)arg1;
- (id)handleSynchronizeAccountCommand:(id)arg1;
- (id)handleCheckMailCommand:(id)arg1;
- (id)logMessages;
- (void)setLogActivityOnHosts:(id)arg1;
- (id)logActivityOnHosts;
- (void)setLogActivityOnPorts:(id)arg1;
- (id)logActivityOnPorts;
- (void)setLogAllSocketActivity:(BOOL)arg1;
- (BOOL)logAllSocketActivity;
- (void)setUseKeychain:(BOOL)arg1;
- (BOOL)useKeychain;
- (id)_objectSpecifierForObject:(id)arg1 inArray:(id)arg2 withKey:(id)arg3;
- (id)valueInComposeMessagesWithUniqueID:(id)arg1;
- (void)removeFromComposeMessagesAtIndex:(unsigned long long)arg1;
- (void)insertInComposeMessages:(id)arg1;
- (void)insertInComposeMessages:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)composeMessages;
- (void)removeFromMessageEditorsAtIndex:(unsigned long long)arg1;
- (void)insertInMessageEditors:(id)arg1;
- (void)insertInMessageEditors:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)messageEditors;
- (void)replaceInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInMailboxes:(id)arg1;
- (void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeFromMailboxesAtIndex:(unsigned long long)arg1;
- (id)valueInMailboxesWithName:(id)arg1;
- (id)mailboxes;
- (id)junkMailbox;
- (id)trashMailbox;
- (id)sentMailbox;
- (id)draftsMailbox;
- (id)outbox;
- (id)inbox;
- (void)removeFromMessageViewersAtIndex:(unsigned long long)arg1;
- (void)insertInMessageViewers:(id)arg1;
- (void)insertInMessageViewers:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)valueInMessageViewersWithUniqueID:(id)arg1;
- (id)messageViewers;
- (void)removeFromDeliveryAccountsAtIndex:(unsigned long long)arg1;
- (void)insertInDeliveryAccounts:(id)arg1;
- (void)insertInDeliveryAccounts:(id)arg1 atIndex:(long long)arg2;
- (id)aosImapAccounts;
- (id)imapAccounts;
- (id)popAccounts;
- (id)_accountsOfClass:(Class)arg1;
- (id)accounts;
- (id)applescriptSelection;
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)arg1;
- (void)openHelpTopic:(id)arg1;
- (id)_convertSnowLeopardToLionKey:(id)arg1;
- (void)_setAutoFetchFrequencyToAutomatic;
- (void)_migrateRecentsToCoreRecents;
- (void)_migrateDefaultsToSharedDomain;
- (void)_removeViewRelatedMessagesToolbarButtonByDefault;
- (void)_upgradeExpandedMailboxesPreference;
- (void)_adoptNewToolbarDefaultConfigurations;
- (void)_preserveSignatureAboveQuotedTextPreference;
- (void)_switchToolbarsToIconOnly;
- (void)_upgradeFlagToolbarItems;
- (void)_turnOnConversationView;
- (void)performMailUpgrade;
- (BOOL)doParentalControlProcessingForMessage:(id)arg1;
- (BOOL)addInvitationsToCalendarAutomatically;
- (void)addInvitationsToCalendarFromMessages:(id)arg1;
- (id)junkStringFromHTMLData:(id)arg1 textEncodingName:(id)arg2 context:(id)arg3;
- (long long)junkMailBehavior;
- (id)headersRequiredForParentalControl;
- (id)headersRequiredForRouting;
- (void)setIsInTimeMachineMode:(BOOL)arg1;
- (BOOL)isInTimeMachineMode;
- (id)localAttachmentFilesDirectory;
- (BOOL)openTemporaryAttachments:(id)arg1 applicationBundle:(id)arg2;
- (void)relaunchAndQuitWithAdditionalArguments:(id)arg1;
- (void)relaunchAndQuit;
- (BOOL)isTerminating;
- (id)sharedAttachmentContextMenu;
- (void)storeBeingInvalidated:(id)arg1;
- (void)_downloadBigMessage:(id)arg1;
- (long long)queryUserForBigMessageAction:(id)arg1;
- (void)informUserOfBusyDatabaseWithRecoverer:(id)arg1 diagnosis:(long long *)arg2;
- (void)informUserOfIOErrorWithStateIn:(long long *)arg1;
- (void)_informUserOfDatabaseError:(id)arg1;
- (BOOL)queryUserWithMessageText:(id)arg1 informativeText:(id)arg2 defaultButton:(id)arg3 alternateButton:(id)arg4;
- (void)informUserOfError:(id)arg1;
- (long long)runAlertPanelWithTitle:(id)arg1 firstButtonTitle:(id)arg2 secondButtonTitle:(id)arg3 thirdButtonTitle:(id)arg4 message:(id)arg5;
- (void)_runAlertPanelInMainThreadWithInfo:(id)arg1;
- (void)resetSuppressedAccount:(id)arg1;
- (BOOL)promptForPassword:(id)arg1;
- (void)removeFromRulesAtIndex:(unsigned long long)arg1;
- (void)insertInRules:(id)arg1;
- (void)insertInRules:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)rules;
- (void)removeFromSignaturesAtIndex:(unsigned long long)arg1;
- (void)insertInSignatures:(id)arg1;
- (void)insertInSignatures:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setSelectedSignature:(id)arg1;
- (id)selectedSignature;
- (void)setChooseSignatureWhenComposing:(BOOL)arg1;
- (BOOL)chooseSignatureWhenComposing;
- (id)signatures;
- (BOOL)shouldShowUnreadMessagesInBold;
- (void)setShouldShowUnreadMessagesInBold:(BOOL)arg1;
- (void)setShouldHighlightThreads:(BOOL)arg1;
- (BOOL)shouldHighlightThreads;
- (void)setHeaderDetail:(int)arg1;
- (int)headerDetail;
- (void)setDownloadHTMLAttachments:(BOOL)arg1;
- (BOOL)downloadHTMLAttachments;

@end

@interface MailToCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface ExtractAddressCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;
- (id)executeCommand;
- (id)_getRawAddressForObject:(id)arg1;

@end

@interface ExtractNameCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;
- (id)executeCommand;
- (id)_getAddressDisplayNameForObject:(id)arg1;

@end

@interface _MVAlertInfo : NSObject
{
    MCError *_error;
    NSString *_firstButtonTitle;
    NSString *_secondButtonTitle;
    NSString *_thirdButtonTitle;
    long long _returnCode;
}

@property(nonatomic) long long returnCode; // @synthesize returnCode=_returnCode;
@property(nonatomic) NSString *thirdButtonTitle; // @synthesize thirdButtonTitle=_thirdButtonTitle;
@property(nonatomic) NSString *secondButtonTitle; // @synthesize secondButtonTitle=_secondButtonTitle;
@property(nonatomic) NSString *firstButtonTitle; // @synthesize firstButtonTitle=_firstButtonTitle;
@property(nonatomic) MCError *error; // @synthesize error=_error;

@end

@interface MailBarContainerButtonCell : NSButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MailBarContainerButton : NSButton
{
    BOOL _isPerformingSearchScope;
}

+ (id)mailBarContainerButtonFont;
+ (Class)cellClass;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
@property(nonatomic) BOOL isPerformingSearchScope;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailSearchScopeView : NSView
{
    NSTextField *_searchLabel;
    MailBarContainerView *_mailBarContainerView;
    MailBarContainerButton *_allButton;
    MailBarContainerButton *_extraButton;
}

@property(readonly, nonatomic) MailBarContainerButton *extraButton; // @synthesize extraButton=_extraButton;
@property(readonly, nonatomic) MailBarContainerButton *allButton; // @synthesize allButton=_allButton;
@property(nonatomic) MailBarContainerView *mailBarContainerView; // @synthesize mailBarContainerView=_mailBarContainerView;
- (void)scopeButtonClicked:(id)arg1;
- (void)addExtraButtonTitle:(id)arg1;
- (double)searchScopeViewWidth;
- (BOOL)isFlipped;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _SidebarButton : MailBarContainerButton
{
}

+ (Class)cellClass;
- (unsigned long long)draggingEntered:(id)arg1;

@end

@interface _SidebarButtonCell : NSButtonCell
{
}

- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;

@end

@interface MailBarContainerView : NSView
{
    FavoritesBarView *_favoritesBarView;
    NSButton *_leftSidebarButton;
    NSView *_searchScopeViewSuperview;
    MailSearchScopeView *_searchScopeView;
    NSButton *_saveButton;
    NSProgressIndicator *_progressIndicator;
    double _xPositionOfSeparator;
    BOOL _isSearchScopeViewVisible;
    unsigned long long _animationCount;
    BOOL _isVisible;
    BOOL _barWasHiddenBeforeSearch;
    int _searchTarget;
    MessageViewer *_messageViewer;
}

+ (id)colorForLightSeparatorLineShadowIsMain:(BOOL)arg1;
+ (id)colorForLightSeparatorLineIsMain:(BOOL)arg1;
@property(readonly, nonatomic) BOOL barWasHiddenBeforeSearch; // @synthesize barWasHiddenBeforeSearch=_barWasHiddenBeforeSearch;
@property int searchTarget; // @synthesize searchTarget=_searchTarget;
@property(nonatomic) BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) MessageViewer *messageViewer; // @synthesize messageViewer=_messageViewer;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (BOOL)extraButtonsSelected;
- (void)scopeToAllMailboxes;
- (void)_saveButtonAction:(id)arg1;
@property(readonly, nonatomic) NSArray *scopeMailboxes;
- (void)_scopeChanged;
- (void)_scopeWillChange;
- (BOOL)isShowingSearchResults;
- (void)setCanSearchSelectedMailbox:(BOOL)arg1;
- (void)setCanSaveSearch:(BOOL)arg1;
- (void)stopProgressAnimation;
- (void)startProgressAnimation;
- (void)clearSearchButtons;
- (void)_tearDown;
- (void)finishedShowHideAnimation;
- (void)setSearchScopeViewVisible:(BOOL)arg1 animate:(BOOL)arg2;
- (void)_setupSearchScopeViewUI;
- (void)_mailboxesVisibilityChanged:(id)arg1;
- (id)_sidebarButton;
- (id)_sidebarButtonToolTip;
- (id)_sidebarButtonText;
- (id)_sidebarButtonImage;
- (void)_toolbarVisibilityDidChange:(id)arg1;
- (id)toggleBarContainerAnimationDictionary;
- (double)barHeight;
- (double)_startPositionOfFirstViewAfterSeparator;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (BOOL)isFlipped;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_windowStateChanged:(id)arg1;
- (void)_mailBarContainerViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailboxBadgeCell : NSButtonCell
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;

@end

@interface MailboxBadgeView : NSButton
{
}

+ (Class)cellClass;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_mailboxBadgeViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MailboxTextField : NSTextField
{
}

- (BOOL)canBecomeKeyView;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_mailboxTextFieldCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MailboxIndicatorCell : NSButtonCell
{
}

- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;

@end

@interface MailboxIndicatorView : NSButton
{
}

+ (Class)cellClass;
- (void)_mailboxIndicatorViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MailboxesChooser : NSObject <NSMenuDelegate>
{
    NSMenu *_rootMenu;
    NSPopUpButton *_popUpButton;
    id _selectedItem;
    NSMutableSet *_updatedMenus;
    BOOL _useSelection;
    id _includeMailboxCondition;
    id _enableMailboxCondition;
    id _target;
    SEL _action;
    NSArray *_additionalItems;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
@property(retain, nonatomic) NSArray *additionalItems; // @synthesize additionalItems=_additionalItems;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(copy, nonatomic) id enableMailboxCondition; // @synthesize enableMailboxCondition=_enableMailboxCondition;
@property(copy, nonatomic) id includeMailboxCondition; // @synthesize includeMailboxCondition=_includeMailboxCondition;
- (void)menuDidClose:(id)arg1;
- (void)_popUpAction:(id)arg1;
- (void)refresh;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_outlineViewStateDidChange:(id)arg1;
- (void)_invalidateUpdatedMenus:(id)arg1;
- (void)invalidateUpdatedMenus;
- (void)_addMenuItemsForItems:(id)arg1 toMenu:(id)arg2 withIndentationLevel:(long long)arg3 initialSeparatorItem:(BOOL)arg4;
- (id)_menuItemForItem:(id)arg1 indentationLevel:(long long)arg2;
@property(retain, nonatomic) id selectedItem;
@property(nonatomic) NSPopUpButton *popUpButton;
@property(nonatomic) NSMenu *rootMenu;
- (void)_setupPopUpButton;
- (void)_mailboxesChooserCommonInitWithSelection:(BOOL)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithSelection:(BOOL)arg1;
- (id)init;

@end

@interface MailboxesController : NSObject <MCActivityTarget, MVTerminationHandler, NSMenuDelegate>
{
    id <MVMailboxSelectionOwner> _currentMailboxSelectionOwner;
    BOOL _currentTransferIsCopy;
    MFMailbox *_currentTransferMailbox;
    NSConditionLock *_smartMailboxesNeedSavingLock;
    MailboxesChooser *_menuMailboxesChooser;
    NSMutableSet *_rootMailboxMenus;
    NSMutableDictionary *_contextualMenus;
    NSArray *_originalGlobalSortOrder;
    NSWindow *_makeNewMailboxPanel;
    NSTextField *_makeNewMailboxField;
    NSTextField *_makeNewMailboxMessage;
    NSButton *_makeNewMailboxOKButton;
    NSPopUpButton *_makeNewMailboxPopUp;
    MailboxesChooser *_makeNewMailboxChooser;
    NSView *_exportChildrenView;
    NSButton *_exportChildrenCheckbox;
}

+ (id)_mergeOldMailUserInfoDictionary:(id)arg1 withSyncChanges:(id)arg2;
+ (id)_filteredMailUserInfoDictionary:(id)arg1;
+ (void)_createDownsizedImages;
+ (id)_imageNameForFlag:(BOOL)arg1 size:(unsigned long long)arg2 style:(unsigned long long)arg3;
+ (id)_iconForSmartMailboxWithSize:(unsigned long long)arg1 style:(unsigned long long)arg2;
+ (id)_iconForGenericMailboxWithSize:(unsigned long long)arg1 style:(unsigned long long)arg2;
+ (id)iconForMailbox:(id)arg1 size:(unsigned long long)arg2 style:(unsigned long long)arg3;
@property(nonatomic) NSButton *exportChildrenCheckbox; // @synthesize exportChildrenCheckbox=_exportChildrenCheckbox;
@property(retain, nonatomic) NSView *exportChildrenView; // @synthesize exportChildrenView=_exportChildrenView;
@property(retain, nonatomic) MailboxesChooser *makeNewMailboxChooser; // @synthesize makeNewMailboxChooser=_makeNewMailboxChooser;
@property(nonatomic) NSPopUpButton *makeNewMailboxPopUp; // @synthesize makeNewMailboxPopUp=_makeNewMailboxPopUp;
@property(nonatomic) NSButton *makeNewMailboxOKButton; // @synthesize makeNewMailboxOKButton=_makeNewMailboxOKButton;
@property(nonatomic) NSTextField *makeNewMailboxMessage; // @synthesize makeNewMailboxMessage=_makeNewMailboxMessage;
@property(nonatomic) NSTextField *makeNewMailboxField; // @synthesize makeNewMailboxField=_makeNewMailboxField;
@property(retain, nonatomic) NSWindow *makeNewMailboxPanel; // @synthesize makeNewMailboxPanel=_makeNewMailboxPanel;
- (id)_smartMailboxesFromDictionaryRepresentations:(id)arg1 andMergeOldUserInfoFromMailboxes:(BOOL)arg2;
- (void)_removeLocalProperties:(id)arg1 fromSmartMailboxes:(id)arg2;
- (id)_smartMailboxesDictionaryRepresentationsFilteredForSync:(BOOL)arg1 localProperties:(id *)arg2;
- (id)_loadDefaultSmartMailboxes;
- (void)_addLocalProperties:(id)arg1 toSmartMailboxes:(id)arg2;
- (id)_readSmartMailboxesFromDisk;
- (id)_sortMailboxesDictionaries:(id)arg1 withIdentifiers:(id)arg2;
- (id)_sortMailboxes:(id)arg1 withIdentifiers:(id)arg2;
- (void)_writeSmartMailboxesToDisk;
- (void)_writeSmartMailboxesToDiskWithDelay;
- (void)_setSmartMailboxesNeedSaving:(BOOL)arg1;
- (BOOL)_smartMailboxesNeedSaving;
- (void)_smartMailboxChanged:(id)arg1;
- (id)smartMailboxesPathForFile:(id)arg1;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (id)smartMailboxes;
- (void)loadSmartMailboxes;
- (void)addSmartMailboxFolder:(id)arg1;
- (void)smartMailboxWasEdited:(id)arg1;
- (void)tentativelyAddSmartMailbox:(id)arg1;
- (void)addSmartMailbox:(id)arg1 select:(BOOL)arg2;
- (BOOL)moveOrCopy:(id)arg1 smartMailboxes:(id)arg2 toIndex:(unsigned long long)arg3;
- (BOOL)copyMailboxes:(id)arg1 toParentMailbox:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_synchronouslyCopyMailboxes:(id)arg1 toParent:(id)arg2 atIndex:(unsigned long long)arg3 originalParent:(id)arg4;
- (BOOL)moveMailboxes:(id)arg1 toParentMailbox:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)removeAccount:(id)arg1;
- (BOOL)moveAccount:(id)arg1 toAfterAccount:(id)arg2;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)_isCopyMenu:(id)arg1;
- (BOOL)_isMoveMenu:(id)arg1;
- (void)bringUpTransferMenu:(id)arg1;
- (void)cancelClicked:(id)arg1;
- (void)okClicked:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (id)_unreadMessagesInMailbox:(id)arg1;
- (void)_asynchronouslyChangeReadFlag:(BOOL)arg1 forMessages:(id)arg2;
- (void)_changeReadFlag:(BOOL)arg1 forMessages:(id)arg2;
- (void)markAllAsRead:(id)arg1;
- (void)_gatherMessagesForFlagChange:(id)arg1;
- (void)setSpecialMailbox:(id)arg1;
- (void)exportMailbox:(id)arg1;
- (void)_exportMailboxes:(id)arg1 toDirectory:(id)arg2 includeChildren:(id)arg3;
- (void)_userEditedMailboxName:(id)arg1;
- (void)renameMailbox:(id)arg1;
- (void)_synchronouslySetName:(id)arg1 andParent:(id)arg2 forMailboxes:(id)arg3 insertionIndex:(unsigned long long)arg4;
- (void)_updateDisplayIndexesInParentMailbox:(id)arg1 byMovingMailboxes:(id)arg2 toIndex:(unsigned long long)arg3;
- (void)removeFromVIPSenders:(id)arg1;
- (void)deleteMailbox:(id)arg1;
- (void)_synchronouslyDeleteMailboxes:(id)arg1;
- (void)mailboxPopUpChanged:(id)arg1;
- (void)newGroup:(id)arg1;
- (void)newFolder:(id)arg1;
- (void)duplicateSmartMailbox:(id)arg1;
- (void)editSmartMailbox:(id)arg1;
- (void)newSmartMailbox:(id)arg1;
- (void)showOutOfOfficeSettings:(id)arg1;
- (void)newMailbox:(id)arg1;
- (void)_configureNewMailboxPanelForMailbox:(id)arg1;
- (void)_synchronouslyCreateNewMailboxWithName:(id)arg1 parent:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (id)mailboxSelectionOwnerFromSender:(id)arg1;
- (void)resignMailboxSelectionOwnerFor:(id)arg1;
- (void)setMailboxSelectionOwnerFrom:(id)arg1;
- (id)mailboxSelectionOwner;
- (id)smartMailboxesSyncedFile;
- (BOOL)currentTransferDeletesOriginals;
- (id)currentTransferMailbox;
- (void)setCurrentTransferMailbox:(id)arg1 deletedOriginals:(BOOL)arg2;
- (void)saveDefaults;
- (void)readDefaults;
- (id)menuForMailbox:(id)arg1 isContextMenu:(BOOL)arg2;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)previousMailboxIdentifiersOfType:(id)arg1 fromDictionary:(id)arg2;
- (id)previousVersionedSmartMailboxIdentifiersFromDictionary:(id)arg1;
- (id)previousSmartMailboxIdentifiersFromDictionary:(id)arg1;

@end

@interface MailboxesOutlineView : NSOutlineView
{
    BOOL _reloading;
    BOOL _allowsSelectAll;
    BOOL _showsUnnecessaryDisclosureTriangles;
    BOOL _draggingIsBeingUpdated;
}

@property(nonatomic) BOOL draggingIsBeingUpdated; // @synthesize draggingIsBeingUpdated=_draggingIsBeingUpdated;
@property(nonatomic) BOOL showsUnnecessaryDisclosureTriangles; // @synthesize showsUnnecessaryDisclosureTriangles=_showsUnnecessaryDisclosureTriangles;
@property(nonatomic) BOOL allowsSelectAll; // @synthesize allowsSelectAll=_allowsSelectAll;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)reloadItem:(id)arg1;
- (void)reloadData;
- (void)noteNumberOfRowsChanged;
- (void)_didReload;
- (void)_triggerReloadNotification;
- (void)_willReload;
- (BOOL)inLiveResize;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)arg1;
- (id)menu;
- (void)selectAll:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_mailboxesOutlineViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailboxesScrollView : NSScrollView
{
}

- (BOOL)_accessoryViewMightInterfereWithOverlayScrollers:(id)arg1;

@end

@interface MailboxesOutlineViewController : NSObject <MailboxesOutlineViewDelegate, MVMailboxSelectionOwner, NSOutlineViewDataSource, MailboxOutlineItemControllerDelegate>
{
    double _idealOutlineViewWidth;
    id <MailboxesOutlineViewControllerDelegate> _delegate;
    long long _reloadingCount;
    long long _wantsToEditInlineCount;
    MailboxesOutlineView *_outlineView;
    NSMutableDictionary *_itemControllers;
    MFMailbox *_clickedMailbox;
}

@property(retain) MFMailbox *clickedMailbox; // @synthesize clickedMailbox=_clickedMailbox;
@property(readonly) NSMutableDictionary *itemControllers; // @synthesize itemControllers=_itemControllers;
@property(retain) MailboxesOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void)mailbox:(id)arg1 nameUpdated:(id)arg2;
- (unsigned long long)badgeCountForItem:(id)arg1;
- (id)mailboxesOutlineView;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)didCloseContextMenu:(id)arg1;
- (void)willShowContextMenu:(id)arg1;
- (void)setFirstResponderAfterMouseDownOnOutlineView:(id)arg1;
- (void)selectAllInOutlineView:(id)arg1;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (unsigned long long)_outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4 allowStoreCreation:(BOOL)arg5;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (id)keyForItem:(id)arg1;
- (void)_removeItemControllerForItem:(id)arg1;
- (id)itemControllerForItem:(id)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)mailboxSelectionWindow;
- (void)_revealMailbox:(id)arg1;
- (void)revealMailbox:(id)arg1;
- (id)sortedSectionItemsForTimeMachine;
- (id)expandedItems;
- (BOOL)sectionIsExpanded:(id)arg1;
- (BOOL)mailboxIsExpanded:(id)arg1;
- (void)selectPathsToMailboxes:(id)arg1 scrollToVisible:(BOOL)arg2;
- (void)selectPathsToMailboxes:(id)arg1;
- (BOOL)isSelectedMailboxSpecial;
- (id)selectedMailbox;
- (id)selectedMailboxes;
- (void)_mailboxPendingNameDidChange:(id)arg1;
- (void)_viewerPreferencesChanged:(id)arg1;
- (void)_userInfoDidChange:(id)arg1;
- (void)_displayCountDidChange:(id)arg1;
- (void)_mailboxesActivityDidChange:(id)arg1;
- (void)_sectionListingDidChange:(id)arg1;
- (void)_mailboxPublicStatusDidChange:(id)arg1;
- (void)_mailboxListingDidChange:(id)arg1;
- (void)_accountOfflineStatusDidChange:(id)arg1;
- (void)_accountAdded:(id)arg1;
- (void)_handleWebAuthenticationRequiredError:(id)arg1 withCompletionHandler:(id)arg2;
- (void)_alertClickedForItem:(id)arg1;
- (void)rowDoubleClicked:(id)arg1;
- (void)rowClicked:(id)arg1;
- (void)alertClicked:(id)arg1;
- (BOOL)_isTopLevelItem:(id)arg1;
- (void)_saveSelectionAndReloadItem:(id)arg1;
- (void)_updateProgressIndicatorForMailbox:(id)arg1;
- (id)_copyActivityMonitorsForMailbox:(id)arg1 finishedCount:(unsigned long long *)arg2 includingDescendants:(BOOL)arg3;
- (void)_redisplayRowsForItems:(id)arg1;
- (unsigned long long)_badgeCountForItem:(id)arg1;
- (id)_firstChildIfCollapsedSpecialMailbox:(id)arg1;
- (void)_endWantsToEditInline;
- (void)_beginWantsToEditInline;
@property(readonly) BOOL wantsToEditInline;
- (void)_endReloading;
- (void)_beginReloading;
@property(readonly) BOOL isReloading;
- (void)editNameOfMailbox:(id)arg1;
- (void)makeMailboxesListFirstResponder;
@property(nonatomic) double idealOutlineViewWidth; // @synthesize idealOutlineViewWidth=_idealOutlineViewWidth;
@property(readonly, nonatomic) double minimumWidthNeededToUseMailboxes;
@property(readonly, nonatomic) double minimizedOutlineViewWidth;
- (void)clearDelegateBecauseWindowIsClosing;
- (void)dealloc;
- (void)_migrateAutosaveName;
@property id <MailboxesOutlineViewControllerDelegate> delegate;
- (void)awakeFromNib;
- (id)init;

@end

@interface HeaderTextView : NSTextView
{
    id <NSTextAttachmentCell> _attachmentCell;
    struct CGSize _contentSize;
    struct CGRect _attachmentCellRect;
}

@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) struct CGRect attachmentCellRect; // @synthesize attachmentCellRect=_attachmentCellRect;
@property(retain, nonatomic) id <NSTextAttachmentCell> attachmentCell; // @synthesize attachmentCell=_attachmentCell;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (id)_selectedAttributedString;
- (id)writablePasteboardTypes;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (id)_attachmentCellForCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)_glyphIndexForPoint:(struct CGPoint)arg1 glyphRect:(struct CGRect *)arg2;
- (void)resetCursorRects;
- (void)keyDown:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (BOOL)autoscroll:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)canBecomeKeyView;
- (void)dealloc;

@end

@interface MailboxesOutlineViewStateStorage : NSObject
{
    NSConditionLock *_shouldShowVariablesLock;
    unsigned long long _shouldShowVariablesToUpdate;
    unsigned long long _shouldShowVariablesToReset;
    BOOL _shouldShowOutbox;
    BOOL _shouldShowDrafts;
    BOOL _shouldShowTrash;
    BOOL _shouldShowJunk;
    BOOL _shouldShowFlags;
    BOOL _shouldShowArchive;
    BOOL _shouldShowVIPs;
    NSMutableSet *_visibleFlagMailboxes;
    id _firstUpdateLock;
    BOOL _firstUpdate;
    id _isListeningForVariablesLock;
    BOOL _isListeningForDocumentEditorNotifications;
    BOOL _isListeningForMessagesAdded;
    BOOL _isListeningForFlagUpdates;
    id _sectionItemsLock;
    NSArray *_sectionItems;
    NSArray *_visibleSectionItems;
    NSArray *_visibleMailboxes;
    id _defaultSectionItemsLock;
    NSSet *_observedTaskNames;
    id _activityMonitorMailboxMapsLock;
    NSMutableDictionary *_mailboxesPerActivityMonitor;
    NSMutableDictionary *_activityMonitorsPerMailbox;
    NSMutableDictionary *_finishedActivityMonitorCountPerMailbox;
    NSConditionLock *_changedMailboxesLock;
    NSMutableSet *_changedMailboxes;
    NSArray *_draggedMailboxes;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain) NSArray *draggedMailboxes; // @synthesize draggedMailboxes=_draggedMailboxes;
- (BOOL)_archiveMessagesOrSubmailboxesExist;
- (BOOL)flagsExist;
- (BOOL)draftsExist;
- (void)_accountInitializedMailboxList:(id)arg1;
- (id)copyActivityMonitorsForMailboxes:(id)arg1 finishedCount:(unsigned long long *)arg2;
- (void)_postChangedMailboxesNotification;
- (void)_notifyChangedMailboxes;
- (void)_setNeedsToNotifyChangedMailboxes:(id)arg1;
- (void)_triggerChangedMailboxesNotification;
- (BOOL)_removeActivityMonitor:(id)arg1 fromMailbox:(id)arg2;
- (BOOL)_addActivityMonitor:(id)arg1 toMailbox:(id)arg2;
- (id)_copyMailboxesForActivityMonitor:(id)arg1;
- (void)_monitoredActivityChanged:(id)arg1;
- (id)_copyKeyForObject:(id)arg1;
@property BOOL shouldShowVIPs;
@property BOOL shouldShowArchive;
@property BOOL shouldShowFlags;
@property BOOL shouldShowJunk;
@property BOOL shouldShowTrash;
@property BOOL shouldShowDrafts;
@property BOOL shouldShowOutbox;
- (void)_setShouldShowVariable:(char *)arg1 withMask:(unsigned long long)arg2 to:(BOOL)arg3;
@property(readonly) NSArray *visibleMailboxes;
@property(readonly) NSArray *visibleSectionItems;
@property(readonly) NSArray *sectionItems;
- (void)_mailboxDisplayCountChanged:(id)arg1;
- (void)_allViewersDidClose:(id)arg1;
- (void)_mailboxListingDidChange:(id)arg1;
- (void)_editorUserSaved:(id)arg1;
- (void)_editorClosed:(id)arg1;
- (void)_viewerPreferencesChanged:(id)arg1;
- (void)_mailAccountsChanged:(id)arg1;
- (void)_handleOutboxCountChange;
- (void)_outboxCountDidChange:(id)arg1;
- (void)_deliveryFailureHappened:(id)arg1;
- (void)_VIPsChanged:(id)arg1;
- (void)_messageFlagsChanged:(id)arg1;
- (void)_messagesWereAddedToMailboxes:(id)arg1;
- (void)moveSectionItem:(id)arg1 beforeItem:(id)arg2;
- (void)_updateSectionItemsWithNewlyVisibleFlagMailboxes:(id)arg1;
- (void)_writeVisibleFlagsMailboxesToDefaults;
- (void)_readVisibleFlagsMailboxesFromDefaults;
- (void)_writeSectionItemsToDefaults;
- (void)_writeSectionItems:(id)arg1 toDefaultsWithKey:(id)arg2;
- (void)_readSectionItemsFromDefaults;
- (id)_sectionItemsFromDefaultSectionItems:(id)arg1;
- (BOOL)_draftsHasMessageWithNoWindow;
- (void)_updateIsListeningForVariables;
- (void)_updateShouldShowVariables;
- (void)_setNeedsToResetShouldShowVariablesWithMask:(unsigned long long)arg1;
- (void)_setNeedsToUpdateShouldShowVariablesWithMask:(unsigned long long)arg1;
- (void)_setShouldShowVariablesNeedUpdateWithUpdateMask:(unsigned long long)arg1 resetMask:(unsigned long long)arg2;
- (void)_triggerShouldShowVariablesUpdate;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface MailboxesSplitViewController : NSObject
{
    char *_isAnimating;
    double _lastUserSelectedPosition;
    NSView *_mailboxesContainer;
    MailSplitView *_mailboxesSplitView;
    MessageViewer *_messageViewer;
}

@property(nonatomic) MessageViewer *messageViewer; // @synthesize messageViewer=_messageViewer;
@property(nonatomic) MailSplitView *mailboxesSplitView; // @synthesize mailboxesSplitView=_mailboxesSplitView;
@property(nonatomic) NSView *mailboxesContainer; // @synthesize mailboxesContainer=_mailboxesContainer;
@property(nonatomic) double lastUserSelectedPosition; // @synthesize lastUserSelectedPosition=_lastUserSelectedPosition;
@property(nonatomic) char *isAnimating; // @synthesize isAnimating=_isAnimating;
- (void)openMailboxesPaneToWidth:(double)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (double)_maxSplitPosition:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;

@end

@interface MailboxOutlineItemController : NSObject <MailboxTextFieldDelegate, MailboxOutlineItemViewDelegate>
{
    MailboxOutlineItemView *_view;
    id _item;
    NSObject<MailboxOutlineItemControllerDelegate> *_delegate;
}

@property NSObject<MailboxOutlineItemControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (id)mailboxOutlineItemViewShouldDisplayImage:(id)arg1;
- (void)mailboxTextFieldEndedEditingSession;
- (void)mailboxTextFieldBeganEditingSession;
- (long long)_alertState;
- (void)updateAlertState;
- (BOOL)_shouldShowBadge;
- (BOOL)_shouldShowProgressIndicator;
- (void)_updateProgressIndicator;
- (BOOL)_isEditing;
- (void)_updateBadgeAnimated:(BOOL)arg1;
- (void)_updateImage;
- (unsigned long long)_iconStyle;
- (unsigned long long)_iconSize;
- (void)_updateValuesForBasicSection;
- (void)_updateValuesForAccount;
- (void)_updateValuesForMailbox;
- (void)updateBadgeCountAnimated:(BOOL)arg1;
- (void)updateAllValues;
- (id)_sectionDisplayName;
- (id)_account;
- (id)_mailbox;
@property id item;
- (void)_connectView:(id)arg1;
- (void)_disconnectView:(id)arg1;
@property MailboxOutlineItemView *view;
- (id)debugDescription;
- (void)dealloc;

@end

@interface MailboxOutlineItemView : NSTableCellView <NSTextFieldDelegate>
{
    MailboxBadgeView *_badgeView;
    NSObject<MailboxOutlineItemViewDelegate> *_delegate;
    NSButton *_indicatorView;
}

@property(nonatomic) NSButton *indicatorView; // @synthesize indicatorView=_indicatorView;
@property(nonatomic) NSObject<MailboxOutlineItemViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) MailboxBadgeView *badgeView; // @synthesize badgeView=_badgeView;
- (void)viewWillDraw;
- (void)_layoutAuxiliaryViews;
- (void)_layoutAuxiliaryViewsForcingBadge:(BOOL)arg1 forcingIndicator:(BOOL)arg2;
- (struct CGRect)_layoutText:(struct CGRect *)arg1 isRTL:(BOOL)arg2;
- (struct CGRect)_layoutIndicator:(struct CGRect *)arg1 force:(BOOL)arg2 isRTL:(BOOL)arg3;
- (struct CGRect)_leftAlignAndVerticallyCenterRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)_rightAlignAndVerticallyCenterRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)_layoutBadge:(struct CGRect *)arg1 force:(BOOL)arg2 isRTL:(BOOL)arg3;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (id)menuForEvent:(id)arg1;
@property(readonly, nonatomic) double idealWidth;
- (void)setAlertTarget:(id)arg1;
- (void)setAlertAction:(SEL)arg1;
- (void)setRowSizeStyle:(long long)arg1;
- (void)showAlertIndicator:(BOOL)arg1 withState:(long long)arg2;
- (void)showBadge:(BOOL)arg1 withCount:(unsigned long long)arg2 animated:(BOOL)arg3;
- (void)_updateImage;
- (void)_windowKeyStateChanged:(id)arg1;
- (void)dealloc;
- (void)prepareForReuse;
- (void)_mailboxOutlineItemViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailboxOutlineRowView : NSTableRowView
{
}

- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (void)didAddSubview:(id)arg1;
- (void)_mailboxOutlineRowViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailboxPaneBottomShadowView : NSView
{
    NSOutlineView *_outlineView;
}

@property(retain, nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void)updateLayer;
- (id)shadowImage;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (void)windowKeyStateDidChange:(id)arg1;
- (BOOL)wantsUpdateLayer;
- (void)_mailboxPaneBottomShadowViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MailEmailImporter : FilesystemEmailImporter <MFAddProgressMonitor>
{
    ImportItem *_currentItem;
    unsigned long long _currentItemMessageIndex;
    unsigned long long _currentItemMessageCount;
    unsigned long long _currentBlockSize;
}

+ (id)explanatoryText;
+ (id)name;
- (id)mailboxNameForImportItem:(id)arg1;
- (void)setFractionDone:(double)arg1;
- (void)importMailbox:(id)arg1;
- (BOOL)isValidMailbox:(id)arg1;
- (id)prepareForImport;
- (double)progressValueForMailboxAtPath:(id)arg1;
- (id)pathExtensions;
- (void)dealloc;

@end

@interface MailInspectorBar : NSInspectorBar
{
    NSWindow *_window;
    NSView *_separatorView;
}

+ (Class)standardItemControllerClass;
- (void)_tile;
- (id)_inspectorBarView;
- (void)_setWindow:(id)arg1;
- (id)loadedNib;
- (void)dealloc;

@end

@interface _MailInspectorBarSeparatorView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (id)initForContainerView:(id)arg1;

@end

@interface MailInspectorBarItemController : NSObject <NSInspectorBarDelegate, NSInspectorBarItemController>
{
    NSView *_view;
    NSInspectorBar *_inspectorBar;
    NSPopUpButton *_fontSizePopUpButton;
    NSPopUpButton *_listPopUpButton;
    NSPopUpButton *_indentationPopUpButton;
    NSSegmentedControl *_textAlignmentSegmentedControl;
}

+ (id)keyForItemIdentifier:(id)arg1;
+ (id)loadedNib;
+ (id)supportedInspectorItemIdentifiers;
@property(nonatomic) NSSegmentedControl *textAlignmentSegmentedControl; // @synthesize textAlignmentSegmentedControl=_textAlignmentSegmentedControl;
@property(nonatomic) NSPopUpButton *indentationPopUpButton; // @synthesize indentationPopUpButton=_indentationPopUpButton;
@property(nonatomic) NSPopUpButton *listPopUpButton; // @synthesize listPopUpButton=_listPopUpButton;
@property(nonatomic) NSPopUpButton *fontSizePopUpButton; // @synthesize fontSizePopUpButton=_fontSizePopUpButton;
@property(nonatomic) NSInspectorBar *inspectorBar; // @synthesize inspectorBar=_inspectorBar;
@property(retain, nonatomic) NSView *view; // @synthesize view=_view;
- (id)viewForInspectorBarItem:(id)arg1;
- (id)inspectorBar:(id)arg1 itemForIdentifier:(id)arg2;
- (void)changeTextAlignment:(id)arg1;
- (void)changeFontSize:(id)arg1;
- (void)removePlaceholderFontSize;
- (void)selectFontSize:(double)arg1;
- (void)selectedFontDidChange:(id)arg1;
- (id)newMenuItemForFontSize:(double)arg1;
- (void)loadNib;
- (void)dealloc;

@end

@interface LazyMenuSegmentedCell : NSSegmentedCell
{
    id _lazyMenuBlock;
    NSMutableDictionary *_loadedMenus;
}

- (id)menuForSegment:(long long)arg1;
- (void)setLazyMenuBlock:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface LazySubmenuMenuItem : NSMenuItem
{
    id _lazySubmenuBlock;
    NSMenu *_loadedSubmenu;
    BOOL _enableLoadedSubmenu;
}

- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (id)submenu;
- (BOOL)hasSubmenu;
- (void)setLazySubmenuBlock:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface _MailNSFontManager : NSFontManager
{
    double _fontSize;
    BOOL _isMultiple;
}

- (id)convertFont:(id)arg1;
- (unsigned long long)currentFontAction;
- (void)modifyFontSize:(double)arg1;
- (void)setSelectedFont:(id)arg1 isMultiple:(BOOL)arg2;
- (void)postSelectedFontChangeNotification;

@end

@interface MailPopoverWell : NSPopoverColorWell
{
}

+ (id)_bezelRenderingButton;
- (struct CGSize)colorSwatchInset;
- (void)awakeFromNib;

@end

@interface MailPreferences : NSPreferences
{
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)_mailApplicationDidFinishLaunching:(id)arg1;
+ (void)configureFetchFrequencyPopUp:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)fontManager:(id)arg1 willIncludeFont:(id)arg2;
- (unsigned long long)validModesForFontPanel:(id)arg1;
- (void)changeFont:(id)arg1;
- (id)windowTitle;

@end

@interface MailScroller : NSScroller
{
    BOOL _isVertical;
    NSImage *_paddingImage;
    NSImage *_hiddenImage;
    NSImage *_slotStartImage;
    NSImage *_slotMiddleImage;
    NSImage *_slotEndImage;
    NSImage *_knobStartImage;
    NSImage *_knobMiddleImage;
    NSImage *_knobEndImage;
    double _startPadding;
    double _endPadding;
}

@property BOOL isVertical; // @synthesize isVertical=_isVertical;
@property double endPadding; // @synthesize endPadding=_endPadding;
@property double startPadding; // @synthesize startPadding=_startPadding;
@property(retain) NSImage *knobEndImage; // @synthesize knobEndImage=_knobEndImage;
@property(retain) NSImage *knobMiddleImage; // @synthesize knobMiddleImage=_knobMiddleImage;
@property(retain) NSImage *knobStartImage; // @synthesize knobStartImage=_knobStartImage;
@property(retain) NSImage *slotEndImage; // @synthesize slotEndImage=_slotEndImage;
@property(retain) NSImage *slotMiddleImage; // @synthesize slotMiddleImage=_slotMiddleImage;
@property(retain) NSImage *slotStartImage; // @synthesize slotStartImage=_slotStartImage;
@property(retain) NSImage *hiddenImage; // @synthesize hiddenImage=_hiddenImage;
@property(retain) NSImage *paddingImage; // @synthesize paddingImage=_paddingImage;
- (BOOL)isOpaque;
- (void)setImagesFlipped:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawImage:(id)arg1 asPart:(int)arg2 withDirtyRect:(struct CGRect)arg3;
- (BOOL)isUseful;
- (struct CGRect)rectForPart:(unsigned long long)arg1;
- (struct CGRect)_drawingRectForPart:(unsigned long long)arg1;
- (struct CGRect)_drawingRectForCustomPart:(int)arg1;
- (double)_getLengthFromImage:(id)arg1;
- (double)_getLengthFromSize:(struct CGSize)arg1;
- (struct CGRect)_rectWithRect:(struct CGRect)arg1 offset:(double)arg2 length:(double)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 isVertical:(BOOL)arg2;

@end

@interface MailSearchCriteriaHelper : NSObject
{
}

+ (id)compoundCriterionWithCriterion:(id)arg1 andAnyDateMatchingQuery:(id)arg2;
+ (id)criterionForAttachmentNameContainsString:(id)arg1;
+ (id)criterionForDateWithin:(id)arg1 and:(id)arg2 withType:(long long)arg3;
+ (id)textSearchCriterionForSearchField:(long long)arg1 queryString:(id)arg2 includeDateTextualRepresentations:(BOOL)arg3 exactMatch:(BOOL)arg4;
+ (id)criterionForMailboxSuggestion:(id)arg1 forSavedSearch:(BOOL)arg2;
+ (id)criterionForMailFlagColorSuggestion:(id)arg1;
+ (id)criterionForPrioritySuggestion:(id)arg1;
+ (id)criterionForAttachmentNameContainsSuggestion:(id)arg1 forSavedSearch:(BOOL)arg2;
+ (id)criterionForMessageHasAttachment;
+ (id)criterionForMailStatusSuggestion:(id)arg1;
+ (id)criterionForDateSuggestion:(id)arg1;
+ (id)mailboxSearchCriterionForScope:(int)arg1 inMessageMall:(id)arg2;
+ (id)_mailboxSearchCriterionForMailboxes:(id)arg1;
+ (id)criterionForSuggestion:(id)arg1 forSavedSearch:(BOOL)arg2;
+ (id)criterionForSuggestions:(id)arg1 scope:(int)arg2 inMessageMall:(id)arg3;

@end

@interface MailSplitView : NSSplitView
{
    long long _dividerToolTipTag;
    NSString *_toolTipString;
    BOOL _isDividerHidden;
    NSString *_oldAutosaveName;
}

@property(nonatomic) BOOL isDividerHidden; // @synthesize isDividerHidden=_isDividerHidden;
@property(copy, nonatomic) NSString *oldAutosaveName; // @synthesize oldAutosaveName=_oldAutosaveName;
- (double)dividerThickness;
- (struct CGRect)_dividerRect;
- (void)setDividerToolTip:(id)arg1;
- (BOOL)isFirstViewVisible;
- (BOOL)isSecondViewVisible;
- (BOOL)_isSubviewAtIndexVisible:(unsigned long long)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)setAutosaveName:(id)arg1;
- (void)windowLayoutDidExitFullScreen:(id)arg1;
- (void)windowLayoutWillExitFullScreen:(id)arg1;
- (void)windowLayoutDidEnterFullScreen:(id)arg1;
- (void)windowLayoutWillEnterFullScreen:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;

@end

@interface StackContainerView : NSView
{
    MailStackViewController *_controller;
}

@property(nonatomic) MailStackViewController *controller; // @synthesize controller=_controller;
- (BOOL)transferSelectionToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)mouseDragged:(id)arg1;
- (BOOL)_shouldDoSpecialDragAnimation;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)viewDidEndLiveResize;
- (BOOL)accessibilityIsIgnored;
- (void)mui_prepareToLayoutSynchronously:(id)arg1;
- (void)mui_performAnimation;
- (void)mui_prepareToAnimate:(id)arg1;

@end

@interface MailStackViewController : NSObject <StackDataSource, StackDelegate>
{
    NSView *_containerView;
    StackContainerView *_stackContainerView;
    CALayer *_stackContainerLayer;
    StackController *_stackController;
    NSMutableDictionary *_messageViewControllers;
    NSMutableDictionary *_messageLayers;
    NSMutableSet *_snapshotWindows;
    BOOL _performingAsynchronousAnimation;
    NSArray *_messages;
    NSImage *_topLayerSnapshot;
}

@property(retain, nonatomic) NSImage *topLayerSnapshot; // @synthesize topLayerSnapshot=_topLayerSnapshot;
@property(nonatomic) BOOL performingAsynchronousAnimation; // @synthesize performingAsynchronousAnimation=_performingAsynchronousAnimation;
@property(retain, nonatomic) NSArray *messages; // @synthesize messages=_messages;
- (void)stackController:(id)arg1 willRemoveLayerForItem:(id)arg2;
- (void)stackController:(id)arg1 willDisplayLayer:(id)arg2 forItem:(id)arg3;
- (void)stackController:(id)arg1 willStackLayer:(id)arg2 forItem:(id)arg3;
- (void)stackControllerDidStopStackingLayers:(id)arg1;
- (void)stackControllerWillStartStackingLayers:(id)arg1;
- (void)stackController:(id)arg1 loadDataForItem:(id)arg2 inLayer:(id)arg3;
- (BOOL)stackController:(id)arg1 isDataLoadedForItem:(id)arg2 inLayer:(id)arg3;
- (id)stackController:(id)arg1 layerForItem:(id)arg2;
- (id)stackContainerLayerForStackController:(id)arg1;
- (id)stackContainerView;
- (void)updateDisplayForSelectedMessages:(id)arg1;
- (id)_stackControllerCreateIfNeeded:(BOOL)arg1;
- (void)_abortAnimations;
- (void)mui_prepareToLayoutSynchronously:(id)arg1;
- (void)mui_performAnimation;
- (void)mui_prepareToAnimate:(id)arg1;
- (void)_viewDidEndLiveResize:(id)arg1;
- (void)_viewFrameDidChange:(id)arg1;
- (void)_resizeMessageViewWithID:(id)arg1 toSize:(struct CGSize)arg2 animating:(BOOL)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_takeSnapshotOfMessageViewForController:(id)arg1 completionHandler:(id)arg2;
- (void)_removeMessageViewForItem:(id)arg1;
- (id)_messageViewForItem:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)_detachMessageViewFromIndividualWindow:(id)arg1;
- (void)_attachMessageViewToIndividualWindow:(id)arg1;
- (void)setStackVisible:(BOOL)arg1 animates:(BOOL)arg2;
- (id)stackSnapshot;
- (void)dealloc;
- (id)initWithContainerView:(id)arg1;

@end

@interface MailStackViewDragController : NSObject
{
    MailStackViewController *_controller;
    NSWindow *_dragWindow;
    NSImage *_sourceImage;
    NSImage *_destinationImage;
    CALayer *_dragLayer;
    struct CGPoint _sourcePoint;
    struct CGRect _sourceRect;
    unsigned long long _dragPositionState;
    unsigned long long _dragImageState;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_morphIntoDragBadge;
- (void)_morphIntoStack;
- (void)_returnLayerToOriginalPosition;
- (void)_centerLayer;
- (struct CGRect)_rectForCenteringTheStack;
- (struct CGPoint)_dragLayerPositionAtDragPoint:(struct CGPoint)arg1;
- (struct CGRect)_dragLayerSourceFrame;
- (struct CGPoint)_dragLayerSourceAnchorPoint;
- (void)_cleanUpController;
- (void)dragCompletedAtPoint:(struct CGPoint)arg1 forCopy:(BOOL)arg2;
- (void)dragCancelledAtPoint:(struct CGPoint)arg1;
- (void)dragMovedToPoint:(struct CGPoint)arg1;
- (void)startDragWithController:(id)arg1 sourceImage:(id)arg2 destinationImage:(id)arg3 sourcePoint:(struct CGPoint)arg4 sourceRect:(struct CGRect)arg5;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface _MailTableHeaderView : NSTableHeaderView
{
    BOOL _didLazyLoadMenu;
}

- (id)menu;

@end

@interface MailTableView : NSTableView <NSScrollViewDelegate>
{
    struct {
        unsigned int delegateProvidesDragImage:1;
        unsigned int delegateDoesCommandBySelector:1;
        unsigned int delegateDragWillEndOperation:1;
        unsigned int delegateDraggedImageMovedTo:1;
        unsigned int delegateProvidesBackgroundShadedRegions:1;
        unsigned int delegateProvidesHighlightStyle:1;
        unsigned int delegateRespondsToWillDrawRowsInRange:1;
        unsigned int delegateApprovesScrolling:1;
        unsigned int delegateRespondsToGotEvent:1;
        unsigned int delegateRespondsToMouseDown:1;
        unsigned int delegateRespondsToWillMoveToWindow:1;
        unsigned int delegateRespondsToDidMoveToWindow:1;
        unsigned int delegateRespondsToWillStartLiveResize:1;
        unsigned int delegateRespondsToDidEndLiveResize:1;
        unsigned int delegateRespondsToDidBecomeFirstResponder:1;
        unsigned int delegateRespondsToDidResignFirstResponder:1;
        unsigned int delegateRespondsToTopLineColor:1;
        unsigned int delegateApprovesRemoveColumn:1;
        unsigned int delegateApprovesAddColumn:1;
    } _extendedTableViewFlags;
    long long _mfClickedRow;
    BOOL _didLazyLoadMenu;
    BOOL _keyEventHandled;
}

@property BOOL keyEventHandled; // @synthesize keyEventHandled=_keyEventHandled;
- (BOOL)isRichTableView;
- (void)scrollRowToVisible:(long long)arg1 position:(int)arg2;
- (void)showSelectionAndCenter:(BOOL)arg1;
- (BOOL)isSelectionVisible;
- (long long)lastSelectedRow;
- (long long)firstSelectedRow;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_postEventNotification:(id)arg1 fromCell:(id)arg2;
- (void)mouseUp:(id)arg1;
- (void)_logSpotlightInfoForClickedMessage;
- (void)mouseDown:(id)arg1;
- (void)_setMFClickedRow:(long long)arg1;
- (long long)clickedRow;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)_colorizeRow:(long long)arg1 inRect:(struct CGRect)arg2 clipRect:(struct CGRect)arg3;
- (void)_highlightRect:(struct CGRect)arg1 withColor:(id)arg2 usingStyle:(int)arg3;
- (BOOL)shouldUseSecondaryHighlightColor;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)addTableColumn:(id)arg1;
- (void)removeTableColumn:(id)arg1;
- (void)moveColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)setTableColumn:(id)arg1 toVisible:(BOOL)arg2 atPosition:(long long)arg3;
- (void)scrollRowToVisible:(long long)arg1;
- (void)showTableColumnsFromArray:(id)arg1 allColumns:(id)arg2;
- (void)drawBackgroundOverhangInRect:(struct CGRect)arg1;
- (id)menu;
- (void)setDelegate:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_mailTableViewCommonInit;
- (id)menuForEvent:(id)arg1;
- (id)_extendedDelegate;
- (BOOL)isOpaque;

@end

@interface MailTimeMachineController : NSObject <MVTerminationHandler>
{
    MessageViewer *_messageViewer;
    BOOL _savingTOC;
    struct CGRect _orignalMailWindowFrame;
    id _tableOfContentsSaveLock;
    NSTimer *_tableOfContentsSaveTimer;
}

+ (id)sharedController;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)relinquishTimeMachineAccess;
- (void)exitTimeMachine;
- (void)prepareToExitTimeMachineModeWithDisplayState:(id)arg1;
- (void)enterTimeMachineMode;
- (void)finishedEnteringTM;
- (BOOL)_launchTimeMachineHelperApp;
- (id)_mailTimeMachineDescriptionForMessage:(id)arg1 withColumns:(id)arg2 andMall:(id)arg3 selected:(BOOL)arg4;
- (void)_threadedSaveTableOfContentsWithEndedSelector:(SEL)arg1;
- (BOOL)_timingOutSaveTableOfContents;
- (void)_threadedSaveTableOfContentsEnded:(id)arg1;
- (void)_thread_saveTableOfContents:(id)arg1;
- (void)_saveTableOfContents;
- (void)_approvedQuit;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)unregisterTimeMachineHandlers;
- (void)registerTimeMachineHandlers;
- (void)disableTableOfContentsSaveTimer:(BOOL)arg1;
- (void)_setTableOfContentsTimer:(id)arg1;
- (void)_setTableOfContentsIsValid:(BOOL)arg1;
- (void)forceSaveTableOfContentsNow;
- (void)saveTableOfContents;
- (void)_invalidateTableOfContents:(id)arg1;
- (void)_invalidateTableOfContentsAndBackupManager:(id)arg1;
- (void)registerNotificationHandlers;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface _MailToolbarSpace : NSView
{
    MailToolbarSpaceItemWithPin *_spaceItem;
    BOOL _inPalette;
}

- (void)setInPalette:(BOOL)arg1;
- (BOOL)inPalette;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithSize:(struct CGSize)arg1 forSpaceItem:(id)arg2;

@end

@interface MailToolbarSpaceItemWithPin : NSToolbarItem
{
    NSView *_pin;
}

+ (id)itemIdentifier;
- (void)updateWidth;
- (void)_pinViewFrameChanged;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (void)_updateSizeForDisplayMode:(unsigned long long)arg1;
- (BOOL)allowsDuplicatesInToolbar;
- (BOOL)_hasContents;
- (BOOL)_emptyContents;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)isSeparatorItem;
- (id)menuFormRepresentation;
- (void)dealloc;
- (id)init;
- (id)initWithItemIdentifier:(id)arg1;
- (id)initWithPin:(id)arg1;

@end

@interface MailUsageStatistics : NSObject
{
}

+ (void)_messageTracePreferences;
+ (void)_messageTraceUsage;
+ (void)_messageTraceAccounts;
+ (void)_messageTraceFullScreen:(id)arg1;
+ (void)_startFullScreenMessageTracerTimer;
+ (void)_messageTrace:(id)arg1;
+ (void)startMessageTracing;

@end

@interface MailWebAttachment : MUIWebAttachment
{
    MCAttachment *_backingAttachment;
    MCMessage *_parentMessage;
    NSURL *_mailDownloadsFileURL;
    id _downloadCompletionBlock;
}

+ (id)keyPathsForValuesAffectingIsDataDownloaded;
@property(copy) id downloadCompletionBlock; // @synthesize downloadCompletionBlock=_downloadCompletionBlock;
@property(retain) NSURL *mailDownloadsFileURL; // @synthesize mailDownloadsFileURL=_mailDownloadsFileURL;
@property MCMessage *parentMessage; // @synthesize parentMessage=_parentMessage;
@property(retain, nonatomic) MCAttachment *backingAttachment; // @synthesize backingAttachment=_backingAttachment;
- (BOOL)isStationeryAttachment;
- (BOOL)isAutoArchiveAttachment;
- (void)_addPrivateAttributes:(id)arg1;
- (void)startDownloadingIfNeededWithProgress:(id)arg1 completionBlock:(id)arg2;
- (id)downloadProgress;
- (BOOL)shouldAlwaysAutomaticallyDownload;
- (BOOL)isDataDownloaded;
- (id)downloadDirectory;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)writeToURL:(id)arg1;
- (id)fileURL;
- (id)filename;
- (unsigned long long)fileSize;
- (id)mimeType;
- (id)iconImage;
- (id)fileWrapper;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFileWrapper:(id)arg1;
- (id)initWithMCAttachment:(id)arg1;

@end

@interface MailWebViewEditor : WebViewEditor <DOMEventListener>
{
    BOOL _needToFinishMakingPlainAfterRemovingStationery;
    NSMutableArray *_uneditedEditableElements;
    NSMutableArray *_editedEditableElements;
    DOMNode *_editableElementWithMouseDown;
    BOOL _shouldAttachFilesAtEnd;
    BOOL _isDeletingAllEncompassingSelection;
    NSArray *_backgroundTilingElements;
    NSArray *_backgroundTilingDivs;
    NSArray *_backgroundTilingFixedSizes;
}

@property(retain) NSArray *backgroundTilingFixedSizes; // @synthesize backgroundTilingFixedSizes=_backgroundTilingFixedSizes;
@property(retain) NSArray *backgroundTilingDivs; // @synthesize backgroundTilingDivs=_backgroundTilingDivs;
@property(retain) NSArray *backgroundTilingElements; // @synthesize backgroundTilingElements=_backgroundTilingElements;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)webView:(id)arg1 didWriteSelectionToPasteboard:(id)arg2;
- (BOOL)insertNewline:(id)arg1;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)webViewDidChangeSelection:(id)arg1;
- (id)replaceOldSignatureWithNewSignature:(id)arg1;
- (void)webViewDidChange:(id)arg1;
- (void)mouseUpDidHappen:(id)arg1 inWebView:(id)arg2;
- (void)mouseDownDidHappen:(id)arg1 inWebView:(id)arg2;
- (id)editedEditableElements;
- (void)_doOrUndoEditingInSignatureWithInfo:(id)arg1;
- (void)handleEvent:(id)arg1;
- (void)_stationeryDidFinishLoadingResources:(id)arg1;
- (void)_webViewDidLoadStationery:(id)arg1;
- (void)prepareToRemoveStationery;
- (BOOL)webView:(id)arg1 canInsertFromPasteboard:(id)arg2 forDrag:(BOOL)arg3;
- (void)insertAttributedStringOfAttachments:(id)arg1 allAttachmentsAreOkay:(BOOL)arg2;
- (BOOL)_isOkayToInsertAttachment:(id)arg1;
- (void)_insertAttributedStringOfAttachments:(id)arg1 allAttachmentsAreOkay:(BOOL)arg2;
@property(nonatomic) BOOL shouldAttachFilesAtEnd;
- (BOOL)isOkayToLoadStationery;
- (BOOL)webView:(id)arg1 shouldInsertAttachments:(id)arg2 context:(id)arg3;
- (id)alertForConvertingToRichText;
- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)allowQuoting;
- (void)setBackEnd:(id)arg1;
- (void)setUp;
- (void)dealloc;
- (void)prepareToGoAway;
@property(readonly) NSArray *insertablePasteboardTypes;

@end

@interface MailWindowShadowLayer : CALayer
{
    CALayer *_topShadow;
    CALayer *_bottomShadow;
    CALayer *_leftShadow;
    CALayer *_rightShadow;
    CALayer *_topRightShadow;
    CALayer *_topLeftShadow;
    CALayer *_bottomRightShadow;
    CALayer *_bottomLeftShadow;
    unsigned long long _shadowType;
    struct CGSize _animationStartSize;
    struct CGSize _animationEndSize;
}

- (id)_shadowImageForShadowPart:(unsigned long long)arg1;
- (double)_rightMargin;
- (double)_leftMargin;
- (double)_bottomMargin;
- (double)_topMargin;
- (void)animateShadowByGrowing:(BOOL)arg1;
- (void)dealloc;
- (id)initWithStartSize:(struct CGSize)arg1 endSize:(struct CGSize)arg2 shadowType:(unsigned long long)arg3;
- (id)init;

@end

@interface MboxEmailImporter : FilesystemEmailImporter
{
}

+ (id)explanatoryText;
+ (id)name;
- (char *)fromString;
- (id)prepareForImport;

@end

@interface MessageBodyScroller : NSScroller
{
    BOOL _forceHidden;
    double _forceYPosition;
}

+ (BOOL)isCompatibleWithOverlayScrollers;
@property(nonatomic) double forceYPosition; // @synthesize forceYPosition=_forceYPosition;
- (void)setHidden:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
@property(nonatomic) BOOL forceHidden;
- (void)_mailBodyScrollerCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageDraft : NSObject <MCActivityTarget>
{
    MCMutableMessageHeaders *_headers;
    BOOL _hasChanges;
    BOOL _hasBeenSavedByUser;
    BOOL _isRedirected;
    BOOL _canEncryptMessage;
    BOOL _canSignMessage;
    unsigned long long _encoding;
    Conversation *_conversation;
    MCMessage *_originalMessage;
    MCInvocationQueue *_saveQueue;
    NSTimer *_saveTimer;
    id _completionBlock;
    MUIWebDocument *_webDocument;
}

+ (int)convertSaveOrSendResultFromResultCodeT:(long long)arg1;
+ (id)_saveTaskName;
@property(nonatomic) BOOL canSignMessage; // @synthesize canSignMessage=_canSignMessage;
@property(nonatomic) BOOL canEncryptMessage; // @synthesize canEncryptMessage=_canEncryptMessage;
@property(readonly) BOOL isRedirected; // @synthesize isRedirected=_isRedirected;
@property(readonly) MUIWebDocument *webDocument; // @synthesize webDocument=_webDocument;
@property(readonly) MCMessageHeaders *headers; // @synthesize headers=_headers;
@property(copy) id completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSTimer *saveTimer; // @synthesize saveTimer=_saveTimer;
@property(readonly) MCInvocationQueue *saveQueue; // @synthesize saveQueue=_saveQueue;
@property(readonly) MCMessage *originalMessage; // @synthesize originalMessage=_originalMessage;
@property(retain, nonatomic) Conversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) unsigned long long encoding; // @synthesize encoding=_encoding;
@property(nonatomic) BOOL hasBeenSavedByUser; // @synthesize hasBeenSavedByUser=_hasBeenSavedByUser;
@property BOOL hasChanges; // @synthesize hasChanges=_hasChanges;
- (id)fromAccount;
- (void)_asyncGenerateMessageAsDraft:(BOOL)arg1 completionHandler:(id)arg2;
- (void)asyncGenerateMessage:(id)arg1;
- (void)_discardInBackgroundWithDocumentId:(id)arg1 account:(id)arg2;
- (void)discard;
- (void)_saveInBackgroundWithMessage:(id)arg1 account:(id)arg2;
- (void)_addBackgroundSaveInvocationToQueue;
- (void)saveWithCompletionBlock:(id)arg1;
- (void)_markDirtyAndSave;
@property(nonatomic) BOOL signMessage;
@property(nonatomic) BOOL encryptMessage;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)_updateCcOrBccMyselfFieldWithSender:(id)arg1 oldSender:(id)arg2;
@property(copy, nonatomic) NSUUID *documentId;
@property(copy, nonatomic) NSString *messageId;
@property(copy, nonatomic) NSString *subject;
@property(retain, nonatomic) MFDeliveryAccount *deliveryAccount;
@property(nonatomic) long long priority;
@property(copy, nonatomic) NSString *from;
@property(readonly) NSArray *allRecipients;
@property(retain, nonatomic) NSArray *replyTo;
@property(retain, nonatomic) NSArray *bcc;
@property(retain, nonatomic) NSArray *cc;
@property(retain, nonatomic) NSArray *to;
@property(retain, nonatomic) NSDate *date;
- (id)_webDocumentForMessage:(id)arg1;
- (id)_webDocumentForMessage:(id)arg1 webDocument:(id)arg2 type:(unsigned long long)arg3;
- (void)_addAddresses:(id)arg1 toAddresses:(id)arg2;
- (id)_addresses:(id)arg1 withoutAddresses:(id)arg2;
- (id)_bccRecipientsWithMessage:(id)arg1 type:(unsigned long long)arg2;
- (id)_ccRecipientsWithMessage:(id)arg1 type:(unsigned long long)arg2;
- (id)_toRecipientsWithMessage:(id)arg1 type:(unsigned long long)arg2;
- (id)_subjectWithMessage:(id)arg1 type:(unsigned long long)arg2;
- (id)_fromAccountWithMessage:(id)arg1;
- (void)dealloc;
- (id)_initWithType:(unsigned long long)arg1 message:(id)arg2 webDocument:(id)arg3;
- (id)initWithType:(unsigned long long)arg1 message:(id)arg2;
- (id)initWithType:(unsigned long long)arg1 messages:(id)arg2;
- (id)initWithType:(unsigned long long)arg1 conversationMember:(id)arg2;
- (id)init;

@end

@interface MessageDragHelper : NSObject
{
    NSOperationQueue *_pasteboardURLProviderQueue;
    NSArray *_draggedMessages;
    NSString *_pasteboardURLString;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain) NSString *pasteboardURLString; // @synthesize pasteboardURLString=_pasteboardURLString;
@property(copy) NSArray *draggedMessages; // @synthesize draggedMessages=_draggedMessages;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)writeMessages:(id)arg1 toPasteboard:(id)arg2 forOwner:(id)arg3;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;

@end

@interface MessageEditor : NSObject
{
}

+ (id)sharedMessageEditor;
+ (void)initialize;
- (void)setBackEnd:(id)arg1;
- (id)objectSpecifier;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface MessageListCell : NSImageCell
{
    int _contentType;
    NSTextFieldCell *_textCell;
    NSString *_stringValue;
    double _maxHeight;
    double _maxWidth;
    unsigned long long _contentCount;
}

- (id)accessibilityActionNames;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)isRepresentedAsButton;
- (BOOL)isRepresentedAsStaticText;
- (id)contentValue;
- (void)setContentCount:(unsigned long long)arg1;
- (void)setContentType:(int)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)setObjectValue:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGPoint)_drawOriginForSize:(struct CGSize)arg1 inRect:(struct CGRect)arg2;
- (struct CGSize)_imageSizeForCellFrame:(struct CGRect)arg1;
- (double)maxWidth;
- (void)setMaxWidth:(double)arg1;
- (double)maxHeight;
- (void)setMaxHeight:(double)arg1;
- (void)setFont:(id)arg1;
- (void)setTextColor:(id)arg1;
- (id)_textCell;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface MessageListColumnManager : NSObject
{
    NSArray *_tableColumns;
    NSDictionary *_viewerPreferences;
    NSMutableDictionary *_tableColumnPreferences;
    BOOL _blockSavingColumnPreferences;
    BOOL _columnPreferencesWereSetupFromScratch;
}

+ (void)setSharedManager:(id)arg1;
+ (id)sharedManager;
@property BOOL wereTableColumnPreferencesSetupFromScratch; // @synthesize wereTableColumnPreferencesSetupFromScratch=_columnPreferencesWereSetupFromScratch;
- (void)_setupUnreadColumnWidthInTableView:(id)arg1 forMailboxes:(id)arg2 isThreaded:(BOOL)arg3;
- (void)setUpUnreadColumnMinWidth:(id)arg1 isThreaded:(BOOL)arg2;
- (long long)calcUnreadColumnWidth:(id)arg1 forUnreadCountString:(id)arg2;
- (void)column:(id)arg1 wasMadeVisible:(BOOL)arg2 inTableView:(id)arg3 forMailboxes:(id)arg4 isSearching:(BOOL)arg5 searchTarget:(int)arg6 searchField:(long long)arg7;
- (void)sizeColumnsToFitInTableView:(id)arg1 forMailboxes:(id)arg2 isThreaded:(BOOL)arg3 threadingDidChange:(BOOL)arg4;
- (void)showColumnsInTableView:(id)arg1 allColumns:(id)arg2 forSearchTarget:(int)arg3 searchField:(long long)arg4 mailboxes:(id)arg5 isThreaded:(BOOL)arg6;
- (void)showColumnsInTableView:(id)arg1 allColumns:(id)arg2 forMailboxes:(id)arg3 isThreaded:(BOOL)arg4 threadingHasChanged:(BOOL)arg5;
- (BOOL)_someMailboxUsesLastViewedDateCriterion:(id)arg1;
- (BOOL)_column:(long long)arg1 isAnAutomaticInsertColumnForMailboxType:(id)arg2 mailboxes:(id)arg3 multipleMailboxes:(BOOL)arg4 isSearching:(BOOL)arg5 searchTarget:(int)arg6 searchField:(long long)arg7;
- (BOOL)_columnsList:(id)arg1 containsColumn:(long long)arg2;
- (id)_widthKeyForMailboxType:(id)arg1 isThreaded:(BOOL)arg2 isSearching:(BOOL)arg3 locationIsVisible:(BOOL)arg4;
- (id)typeOfMailboxes:(id)arg1 multiple:(char *)arg2;
- (id)_visibleTableColumnSettingsForMailboxes:(id)arg1 multipleMailboxes:(BOOL)arg2 ofType:(id)arg3 withLastViewedDate:(BOOL)arg4 isThreaded:(BOOL)arg5 isSearching:(BOOL)arg6 searchTarget:(int)arg7 searchField:(long long)arg8 tableView:(id)arg9;
- (void)_setColumn:(long long)arg1 isVisible:(BOOL)arg2 inSettings:(id)arg3;
- (void)_replaceColumn:(long long)arg1 byColumn:(long long)arg2 inSettings:(id)arg3;
- (id)_convertNormalSettingsFromPreleopardDefaults;
- (long long)_widthAndPosition:(long long *)arg1 forColumn:(id)arg2 mailboxes:(id)arg3 isThreaded:(BOOL)arg4 isSearching:(BOOL)arg5 locationIsVisible:(BOOL)arg6;
- (long long)widthAndPosition:(long long *)arg1 forColumn:(id)arg2 inTableView:(id)arg3 mailboxes:(id)arg4 isThreaded:(BOOL)arg5 isSearching:(BOOL)arg6;
- (id)_settingForColumn:(long long)arg1 forKey:(id)arg2 forMailboxes:(id)arg3;
- (BOOL)isAutomaticInsertionWhileSearchingOkayForColumn:(long long)arg1 forMailboxes:(id)arg2;
- (BOOL)isColumnVisible:(long long)arg1 forMailboxes:(id)arg2;
- (id)_tableColumnPreferencesForMailboxType:(id)arg1;
- (void)takeDefaultsForMailboxes:(id)arg1 isThreaded:(BOOL)arg2 isSearching:(BOOL)arg3 searchTarget:(int)arg4 fromCurrentColumnsInTableView:(id)arg5;
- (void)saveColumnPreferencesToStandardDefaults;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)initWithTableColumns:(id)arg1 viewerPreferences:(id)arg2;

@end

@interface MessageListContainerView : NSView <RichMessageListSortViewProtocol>
{
    MessageViewer *_messageViewer;
    NSTableHeaderView *_previousHeaderView;
    BOOL _isRichMessageList;
    NSTableView *_messageListTableView;
    RichMessageListSortView *_sortView;
}

@property(retain) RichMessageListSortView *sortView; // @synthesize sortView=_sortView;
@property NSTableView *messageListTableView; // @synthesize messageListTableView=_messageListTableView;
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)sortViewDidMouseDown:(id)arg1;
- (void)dealloc;
@property(nonatomic) BOOL isRichMessageList;
- (void)_updateSortViewVisibility;

@end

@interface MessageListHeaderCell : NSTableHeaderCell
{
    MessageListCell *_realCell;
    unsigned long long _imageAlignment;
    NSString *_accessibilityTitle;
}

- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitle;
- (void)setAccessibilityTitle:(id)arg1;
- (void)setImageAlignment:(unsigned long long)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface _MessageThreadingData : NSObject
{
    MCMessage *_parent;
    NSMutableSet *_replies;
    MFMessageThread *_thread;
}

@property(retain, nonatomic) MFMessageThread *thread; // @synthesize thread=_thread;
@property(retain, nonatomic) NSMutableSet *replies; // @synthesize replies=_replies;
@property(retain, nonatomic) MCMessage *parent; // @synthesize parent=_parent;
- (void)dealloc;
- (id)description;

@end

@interface _FilteredListInfo : NSObject
{
    int _taskType;
    NSMutableArray *_filteredMessages;
    NSArray *_changedMessages;
    NSMutableSet *_filteredThreads;
    NSArray *_changedThreads;
    NSDictionary *_changedFlags;
    NSArray *_messagesFilteredIn;
    NSArray *_messagesFilteredOut;
    NSMutableDictionary *_messageSortValues;
    NSDictionary *_snippetsForMessages;
}

+ (id)infoForType:(int)arg1;
@property int taskType; // @synthesize taskType=_taskType;
@property(retain) NSDictionary *snippetsForMessages; // @synthesize snippetsForMessages=_snippetsForMessages;
@property(retain) NSMutableDictionary *messageSortValues; // @synthesize messageSortValues=_messageSortValues;
@property(retain) NSArray *messagesFilteredOut; // @synthesize messagesFilteredOut=_messagesFilteredOut;
@property(retain) NSArray *messagesFilteredIn; // @synthesize messagesFilteredIn=_messagesFilteredIn;
@property(retain) NSDictionary *changedFlags; // @synthesize changedFlags=_changedFlags;
@property(retain) NSArray *changedThreads; // @synthesize changedThreads=_changedThreads;
@property(retain) NSMutableSet *filteredThreads; // @synthesize filteredThreads=_filteredThreads;
@property(retain) NSArray *changedMessages; // @synthesize changedMessages=_changedMessages;
@property(retain) NSMutableArray *filteredMessages; // @synthesize filteredMessages=_filteredMessages;
- (void)dealloc;

@end

@interface MessageMiniMall : NSObject <MessageMall, MFMessageSortContext, MFMessageSortingValueDelegate>
{
    MCInvocationQueue *_filterTasks;
    MCInvocationQueue *_userTasks;
    BOOL _sortedAscending;
    BOOL _wantsToBeSortedAscending;
    BOOL _includeDeleted;
    BOOL _focused;
    BOOL _isInThreadedMode;
    BOOL _wantsToBeInThreadedMode;
    BOOL _displayingToColumn;
    BOOL _selectionIncludesSmartMailbox;
    BOOL _useLibraryIDNumbering;
    BOOL _alwaysShowCopies;
    int _currentFilterSeriesID;
    NSArray *_selectedMailboxes;
    NSArray *_expandedSelectedMailboxes;
    NSMutableArray *_allStores;
    NSMutableSet *_storesWaitingToLoad;
    NSMutableDictionary *_allMessagesByStore;
    NSMutableDictionary *_primaryMessagesByConversationByStore;
    NSMutableDictionary *_nonDeletedMessagesByStore;
    NSMutableDictionary *_sortedMessagesByStore;
    NSMutableDictionary *_sortedNonDeletedMessagesByStore;
    NSMutableArray *_filteredMessages;
    NSMutableArray *_sortedFilteredMessages;
    NSMutableSet *_filteredThreads;
    NSMutableSet *_hiddenMessages;
    NSMutableSet *_undeletedMessages;
    NSMutableSet *_focusedMessages;
    NSMutableSet *_storesBeingOpened;
    NSString *_sortOrder;
    NSString *_secondarySortOrder;
    NSMutableDictionary *_messageSortValues;
    NSMutableDictionary *_messagesByConversationID;
    NSMutableDictionary *_oldestMessageForConversationID;
    NSMutableDictionary *_relatedMessagesByConversationID;
    NSMutableDictionary *_messageThreadingDataByMessage;
    NSMapTable *_messagesByID;
    NSMutableSet *_messageIDsToShowAllCopiesOf;
    NSMutableDictionary *_originalMessageByMessageID;
    NSMutableDictionary *_messageCopiesByMessageID;
    BOOL _filteredMessagesCleared;
    BOOL _filteredListIncludesAllMessages;
    BOOL _isUsedForSearching;
}

+ (id)sortComparatorForThreads;
+ (id)sortComparatorForThreadsWithSortOrderAscending:(SEL)arg1;
+ (void)initialize;
@property(nonatomic) BOOL isUsedForSearching; // @synthesize isUsedForSearching=_isUsedForSearching;
@property BOOL filteredListIncludesAllMessages; // @synthesize filteredListIncludesAllMessages=_filteredListIncludesAllMessages;
- (void)_logSearchDebugInfo:(id)arg1 sortValues:(id)arg2;
- (id)_debugSearchStringForMessage:(id)arg1 sortValues:(id)arg2;
- (id)searchDescriptionForMessage:(id)arg1 sortValue:(id)arg2 andSortOrder:(id)arg3;
- (void)_removeMessage:(id)arg1 fromMallArray:(id)arg2 sortValues:(id)arg3 atIndex:(unsigned long long)arg4 fromFunction:(const char *)arg5 andLine:(int)arg6;
- (unsigned long long)_indexOfMessage:(id)arg1 inMallArray:(id)arg2 sortValues:(id)arg3 usingComparator:(id)arg4 fromFunction:(void)arg5 andLine:(const char *)arg6;
- (unsigned long long)_removeMessage:(id)arg1 fromMallArray:(id)arg2 sortValues:(id)arg3 usingComparator:(id)arg4 fromFunction:(void)arg5 andLine:(const char *)arg6;
- (unsigned long long)_insertMessageIfAbsent:(id)arg1 intoMallArray:(id)arg2 sortValues:(id)arg3 usingComparator:(id)arg4 fromFunction:(void)arg5 andLine:(const char *)arg6;
- (id)description;
- (void)_updateThreadInfoForMessages:(id)arg1;
- (void)_resetThreadInfoFromFilteredMessages;
- (void)updateThreadingDictionaryForMessages:(id)arg1;
- (void)_clearThreadInfo;
- (void)_deduceThreadHierarchyForMessages:(id)arg1;
- (void)_setupNewParentMessageThreadingData:(id)arg1 parent:(id)arg2 conversationID:(id)arg3;
- (void)_cleanUpRelatedMessageDataForConversationIDs:(id)arg1;
- (BOOL)_removeRelatedMessageDataForMessage:(id)arg1 withConversationID:(id)arg2;
- (void)_addRelatedMessageDataForMessage:(id)arg1 withConversationID:(id)arg2;
- (BOOL)_removeConversationDataForMessage:(id)arg1 withConversationID:(id)arg2;
- (void)_addConversationDataForMessage:(id)arg1 withConversationID:(id)arg2;
- (id)allMessagesForConversationID:(long long)arg1;
- (id)primaryMessagesForConversationID:(long long)arg1;
- (BOOL)hasNonDuplicateRelatedMessages:(id)arg1;
- (id)allRelatedMessagesForMessage:(id)arg1;
- (id)originalOfMessage:(id)arg1;
- (id)messagesIncludingHiddenCopies:(id)arg1;
- (void)hideAllCopiesOfMessages:(id)arg1;
- (void)showAllCopiesOfMessage:(id)arg1;
- (id)messageIDsToShowAllCopiesOf;
- (id)unfilteredThreadForMessage:(id)arg1;
- (id)filteredThreadForMessage:(id)arg1;
- (BOOL)_hasFilteredThreadForMessage:(id)arg1;
- (id)threadAtIndex:(unsigned long long)arg1;
- (id)threadForMessage:(id)arg1;
- (id)messageForMessageID:(id)arg1;
- (BOOL)messageIsPartOfAThread:(id)arg1;
- (id)parentOfMessage:(id)arg1;
- (id)repliesToMessage:(id)arg1;
- (void)addMessagesInSameThreadAsMessage:(id)arg1 toSet:(id)arg2;
- (void)_unlockedAddMessagesInSameThreadAsMessage:(id)arg1 toSetOrArray:(id)arg2;
- (void)routeMessages:(id)arg1 fromStores:(id)arg2;
- (void)routeMessages:(id)arg1 fromMailboxes:(id)arg2;
- (void)routeMessages:(id)arg1;
- (void)_setFilteredMessages:(id)arg1 changedMessages:(id)arg2 filteredThreads:(id)arg3 changedThreads:(id)arg4 changedFlags:(id)arg5 messagesFilteredIn:(id)arg6 messagesFilteredOut:(id)arg7 sortValues:(id)arg8 forSeriesID:(int)arg9 updateImmediately:(BOOL)arg10;
- (void)closeAllThreads;
- (void)openAllThreads;
- (BOOL)openThreadsWithIDs:(id)arg1;
- (id)quietlyCloseThreadAtIndex:(unsigned long long)arg1;
- (BOOL)closeThreadAtIndex:(long long)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (id)quietlyOpenThreadAtIndex:(unsigned long long)arg1;
- (BOOL)openThreadAtIndex:(long long)arg1 andSelectMessage:(id)arg2 animate:(BOOL)arg3;
- (void)prepareToDisplayThread:(id)arg1;
- (id)_backgroundUngroupThreads;
- (id)_backgroundGroupMessagesByThread;
- (id)_backgroundResetThreadInfoAndGroupByThread;
- (unsigned int)loadOptions;
- (BOOL)needTo;
- (void)setDisplayingToColumn:(BOOL)arg1;
- (BOOL)displayingToColumn;
- (BOOL)needThreadingInfo;
- (void)toggleThreadedMode;
- (void)setIsInThreadedMode:(BOOL)arg1;
- (BOOL)isInThreadedModeExcludingSearch;
- (BOOL)isInThreadedMode;
- (void)_mergeMessages:(id)arg1 intoMessages:(id)arg2 newThreads:(id *)arg3 changedThreads:(id *)arg4 sortValues:(id)arg5 usingComparator:(id)arg6 concurrent:(void)arg7;
- (id)_updateOriginalsForMessageIDs:(id)arg1;
- (void)_updateCopiesInfoForMessages:(id)arg1;
- (void)_removeThreadedMessagesIn:(id)arg1 from:(id)arg2;
- (id)_backgroundSortNewFilteredMessages:(id)arg1;
- (id)_backgroundMergeMessages:(id)arg1;
- (id)_backgroundRefilterMessages:(id)arg1;
- (void)_insertMembersOfOpenThreads:(id)arg1 usingComparator:(id)arg2;
- (void)_removeMembersOfOpenThreads:(id)arg1;
- (id)_backgroundResortWithPrimarySortOrder:(id)arg1 secondarySortOrder:(id)arg2;
- (void)structureWillChange;
- (void)structureWillChangeFromClosingThread:(id)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (void)structureWillChangeFromOpeningThread:(id)arg1;
- (void)_filterTaskCompleted:(id)arg1 seriesID:(int)arg2;
- (void)_resetFilterQueue;
- (void)_addTaskToFilterQueue:(id)arg1;
- (void)_performFilterTask:(id)arg1 seriesID:(int)arg2;
- (void)_backgroundHandleLibraryConversationsChanged:(id)arg1;
- (void)_libraryConversationsWereChanged:(id)arg1;
- (void)_removeMessages:(id)arg1;
- (void)_libraryMessagesGmailLabelsChanged:(id)arg1;
- (void)_libraryMessagesCompacted:(id)arg1;
- (void)_addedMessagesWithDictionary:(id)arg1 conversationsMembers:(id)arg2 toStore:(id)arg3;
- (void)_backgroundHandleMessagesAdded:(id)arg1;
- (void)_componentStoreMessagesWereAdded:(id)arg1;
- (void)_backgroundHandleStoreFinishedLoading:(id)arg1;
- (void)_componentStoreFinishedLoading:(id)arg1;
- (void)_backgroundHandleMessagesUpdated:(id)arg1;
- (void)_libraryMessagesUpdated:(id)arg1;
- (BOOL)_shouldIncludeConversationMemberMessageInMall:(id)arg1 lastSeenMailboxInfo:(id)arg2;
- (void)reload:(id)arg1;
- (void)_componentStoreStructureChanged:(id)arg1;
- (void)_componentStoreDidOpen:(id)arg1;
- (void)_componentStoreWillOpen:(id)arg1;
- (void)_libraryMessagesFlagsChanged:(id)arg1;
- (id)_knownAndUnknownMessages:(id)arg1 fromMessages:(id)arg2;
- (BOOL)_isKnownMessage:(id)arg1;
- (id)_messagesThatShouldBeDisplayed:(id)arg1;
- (BOOL)_shouldDisplayMessage:(id)arg1 hidingCopies:(BOOL)arg2;
- (BOOL)deletedFlagForMessage:(id)arg1;
- (long long)compareByNumberMessage:(id)arg1 andMessage:(id)arg2 sortedAscending:(BOOL)arg3;
- (BOOL)isStillSearching;
- (id)uniquedString:(id)arg1;
- (void)flushAllCaches;
- (void)invalidateMessage:(id)arg1;
- (void)sendResponseType:(BOOL)arg1 forMeetingMessage:(id)arg2;
- (id)undeleteMessages:(id)arg1 movedToStore:(id)arg2 newMessageIDs:(id)arg3;
- (void)undeleteMessages:(id)arg1;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (void)saveSnippetsForMessages:(id)arg1;
- (id)snippetsForMessages:(id)arg1;
- (BOOL)supportsSnippets;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3 forMessage:(id)arg4;
- (id)attachmentsDirectoryForMessage:(id)arg1;
- (void)setColor:(id)arg1 highlightTextOnly:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3 userRecorded:(BOOL)arg4;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2;
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;
- (id)async_setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)dataForMimePart:(id)arg1;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
- (id)fullBodyDataForMessage:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1;
- (id)headersForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headersForMessage:(id)arg1;
- (id)mailbox;
- (id)account;
- (id)stores;
@property(readonly) BOOL isReadOnly;
- (id)expandedSelectedMailboxesAllowingSearch;
- (id)expandedSelectedMailboxes;
- (id)selectedMailboxes;
- (id)allMailboxes;
- (BOOL)canRebuild;
- (id)_storesToRebuild;
- (void)doCompact;
- (BOOL)canCompact;
- (void)_removeMessagesFromByStoreTables:(id)arg1;
- (void)updateFilteredListByAddingMessages:(id)arg1 removingMessages:(id)arg2;
- (void)_addMessagesToByStoreTables:(id)arg1;
- (void)_addMessages:(id)arg1 toTablesForStore:(id)arg2;
- (id)threadForMessageID:(id)arg1;
- (void)structureDidChangeWithChangedThreads:(id)arg1;
- (void)structureDidChangeByClosingThread:(id)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (void)structureDidChangeFromOpeningThread:(id)arg1 andSelectMessage:(id)arg2 animate:(BOOL)arg3;
- (void)structureDidChange;
- (void)rebuildTableOfContentsAsynchronously;
- (id)unhideMessages:(id)arg1;
- (id)hideMessages:(id)arg1;
- (unsigned long long)unreadCount;
- (unsigned long long)totalCount;
- (id)_backgroundInvertFilteredList;
- (void)_invertFilteredList;
- (void)_refilter;
- (void)_resortWithPrimarySortOrder:(id)arg1 secondarySortOrder:(id)arg2;
- (BOOL)_filterOutMessagesSynchronously:(id)arg1;
- (void)_filterInMessagesSynchronously:(id)arg1;
- (void)_filterInMessages:(id)arg1;
- (id)_addStore:(id)arg1;
- (void)_removeMessagesInStores:(id)arg1 fromCopiesInfoWithStoreCache:(id)arg2;
- (void)_removeMessagesInStores:(id)arg1 fromMessages:(id)arg2 storeCache:(id)arg3;
- (id)_storeForMailbox:(id)arg1 cache:(id)arg2;
- (void)_setMailboxes:(id)arg1;
- (void)setMailboxes:(id)arg1;
- (void)_threadsSpanMailboxesChanged:(id)arg1;
- (void)_storeFinishedLoading:(id)arg1;
- (unsigned int)sortingMessageFlagsForMessage:(id)arg1;
- (unsigned int)messageFlagsForMessage:(id)arg1 size:(unsigned long long *)arg2 appliedFlagColors:(id *)arg3;
- (unsigned long long)sortingSizeForMessage:(id)arg1;
- (unsigned long long)sizeForMessage:(id)arg1;
- (void *)secondarySortFunction;
- (void *)sortFunction;
- (void *)sortFunctionForSortOrder:(id)arg1;
- (BOOL)isSortedByDateReceived;
- (BOOL)isSortedAscending;
- (void)setIncludeDeleted:(BOOL)arg1;
- (BOOL)includeDeleted;
- (void)sortMessages:(id)arg1;
- (id)sortComparatorWithPrimarySortOrder:(SEL)arg1 secondarySortOrder:(id)arg2 sortValues:(id)arg3 context:(id)arg4;
- (id)sortComparatorWithContext:(SEL)arg1 sortValues:(void *)arg2;
- (id)arrayOfSortOrders;
- (id)arrayWithPrimarySortOrder:(id)arg1 secondarySortOrder:(id)arg2;
- (id)secondarySortOrder;
- (id)sortOrder;
- (void)setSortOrder:(id)arg1 ascending:(BOOL)arg2;
- (id)smartMailboxMemberMessagesForMessages:(id)arg1;
- (unsigned long long)_focusedMessagesCount;
- (void)_setFocusedMessages:(id)arg1;
- (void)setFocusedMessages:(id)arg1;
- (BOOL)isFocused;
- (void)setFocused:(BOOL)arg1;
- (void)clearFilteredMessagesAndUpdateImmediately:(BOOL)arg1;
- (void)clearFilteredMessages;
- (id)filteredThreads;
- (unsigned long long)indexOfFilteredMessage:(id)arg1;
- (unsigned long long)indexOfFilteredDocument:(id)arg1;
- (id)numberForMessage:(id)arg1;
- (unsigned long long)indexOfMessage:(id)arg1;
- (unsigned long long)_indexOfMessage:(id)arg1 inStore:(id)arg2 messages:(id)arg3;
- (id)_sortedMessagesForStore:(id)arg1;
- (BOOL)useLibraryIDNumbering;
- (void)setUseLibraryIDNumbering:(BOOL)arg1;
- (BOOL)selectionIncludesSmartMailbox;
- (unsigned long long)indexOfMessageByLibraryID:(id)arg1;
- (void)setSortedFilteredMessages:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1 isChildOfThread:(char *)arg2;
- (id)filteredMessagesInRange:(struct _NSRange)arg1;
- (id)filteredMessages;
- (id)filteredMessagesAtIndexes:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1;
- (unsigned long long)filteredMessagesCount;
- (void)_updateFilteredListIncludesAllMessages;
- (BOOL)isOpened;
- (BOOL)supportsSearching;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearSearch;
- (void)_cancelStoreQueries:(id)arg1;
- (void)dealloc;
- (void)unregisterForNotifications;
- (id)init;

@end

@interface MessageMegaMall : NSObject <MessageMall>
{
    MessageMiniMall *_mailboxesMiniMall;
    MessageMiniMall *_searchMiniMall;
    MessageMiniMall *_currentMiniMall;
    MessageMiniMall *_alternateMiniMall;
    long long _activeSearchField;
    int _activeSearchTarget;
    NSString *_lastQueryStringFragment;
}

+ (id)expandedMailboxes:(id)arg1;
+ (id)notificationQueue;
+ (id)notificationCenter;
- (id)uniquedString:(id)arg1;
- (void)flushAllCaches;
- (void)invalidateMessage:(id)arg1;
- (void)sendResponseType:(BOOL)arg1 forMeetingMessage:(id)arg2;
- (id)undeleteMessages:(id)arg1 movedToStore:(id)arg2 newMessageIDs:(id)arg3;
- (void)undeleteMessages:(id)arg1;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (void)saveSnippetsForMessages:(id)arg1;
- (id)snippetsForMessages:(id)arg1;
- (BOOL)supportsSnippets;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3 forMessage:(id)arg4;
- (id)attachmentsDirectoryForMessage:(id)arg1;
- (void)setColor:(id)arg1 highlightTextOnly:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3 userRecorded:(BOOL)arg4;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3;
- (id)async_setJunkMailLevel:(long long)arg1 forMessages:(id)arg2;
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;
- (id)async_setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;
- (id)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)dataForMimePart:(id)arg1;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
- (id)fullBodyDataForMessage:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3 allowPartial:(BOOL)arg4;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 updateFlags:(BOOL)arg3;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headerDataForMessage:(id)arg1;
- (id)headersForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (id)headersForMessage:(id)arg1;
- (id)mailbox;
- (id)account;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)routeMessages:(id)arg1 fromMailboxes:(id)arg2;
- (void)routeMessages:(id)arg1;
- (void)reload:(id)arg1;
- (void)setDisplayingToColumn:(BOOL)arg1;
- (BOOL)displayingToColumn;
- (void)doCompact;
- (BOOL)canCompact;
- (void)rebuildTableOfContentsAsynchronously;
- (BOOL)canRebuild;
- (BOOL)isOpened;
@property(readonly) BOOL isReadOnly;
- (id)messageForMessageID:(id)arg1;
- (unsigned long long)totalCount;
- (unsigned long long)unreadCount;
- (id)smartMailboxMemberMessagesForMessages:(id)arg1;
- (id)allMessagesForConversationID:(long long)arg1;
- (id)primaryMessagesForConversationID:(long long)arg1;
- (BOOL)hasNonDuplicateRelatedMessages:(id)arg1;
- (id)allRelatedMessagesForMessage:(id)arg1;
- (id)originalOfMessage:(id)arg1;
- (id)messagesIncludingHiddenCopies:(id)arg1;
- (void)hideAllCopiesOfMessages:(id)arg1;
- (id)messageIDsToShowAllCopiesOf;
- (void)showAllCopiesOfMessage:(id)arg1;
- (unsigned int)loadOptions;
- (BOOL)messageIsPartOfAThread:(id)arg1;
- (id)threadForMessageID:(id)arg1;
- (id)unfilteredThreadForMessage:(id)arg1;
- (id)filteredThreadForMessage:(id)arg1;
- (id)parentOfMessage:(id)arg1;
- (id)repliesToMessage:(id)arg1;
- (void)addMessagesInSameThreadAsMessage:(id)arg1 toSet:(id)arg2;
- (void)closeAllThreads;
- (void)openAllThreads;
- (BOOL)openThreadsWithIDs:(id)arg1;
- (id)quietlyCloseThreadAtIndex:(unsigned long long)arg1;
- (BOOL)closeThreadAtIndex:(long long)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (id)quietlyOpenThreadAtIndex:(unsigned long long)arg1;
- (BOOL)openThreadAtIndex:(long long)arg1 andSelectMessage:(id)arg2 animate:(BOOL)arg3;
- (void)prepareToDisplayThread:(id)arg1;
- (void)toggleThreadedMode;
- (void)setIsInThreadedMode:(BOOL)arg1;
- (BOOL)isInThreadedModeExcludingSearch;
- (BOOL)isInThreadedMode;
- (void)sortMessages:(id)arg1;
- (BOOL)isSortedAscending;
- (id)sortOrder;
- (void)setSortOrder:(id)arg1 ascending:(BOOL)arg2;
- (void)setIncludeDeleted:(BOOL)arg1;
- (BOOL)includeDeleted;
- (id)stores;
- (id)expandedSelectedMailboxesAllowingSearch;
- (id)expandedSelectedMailboxes;
- (id)selectedMailboxes;
- (id)allMailboxes;
- (void)setMailboxes:(id)arg1;
- (BOOL)deletedFlagForMessage:(id)arg1;
- (id)unhideMessages:(id)arg1;
- (id)hideMessages:(id)arg1;
- (int)currentSearchTarget;
- (long long)currentSearchField;
- (BOOL)isStillSearching;
- (BOOL)isShowingSearchResults;
- (unsigned int)messageFlagsForMessage:(id)arg1 size:(unsigned long long *)arg2 appliedFlagColors:(id *)arg3;
- (unsigned long long)sizeForMessage:(id)arg1;
- (id)criterionForString:(id)arg1 type:(long long)arg2 scope:(int)arg3;
- (id)criterionForAttachmentType:(id)arg1;
- (void)searchForString:(id)arg1 in:(int)arg2 withOptions:(long long)arg3;
- (id)queryStringFragmentFromSuggestions:(id)arg1;
- (void)searchForSuggestions:(id)arg1 in:(int)arg2 withOptions:(long long)arg3 fromSuggestionsSearchField:(id)arg4;
- (void)clearPreviousQueryString;
- (void)_searchForCriterion:(id)arg1;
- (BOOL)supportsSearching;
- (void)setFocusedMessages:(id)arg1;
- (BOOL)isFocused;
- (BOOL)filteredListIncludesAllMessages;
- (void)clearFilteredMessagesAndUpdateImmediately:(BOOL)arg1;
- (void)clearFilteredMessages;
- (void)clearSearch;
- (id)filteredThreads;
- (unsigned long long)indexOfMessage:(id)arg1;
- (id)numberForMessage:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1 isChildOfThread:(char *)arg2;
- (unsigned long long)indexOfFilteredDocument:(id)arg1;
- (unsigned long long)indexOfFilteredMessage:(id)arg1;
- (id)filteredMessagesInRange:(struct _NSRange)arg1;
- (id)filteredMessages;
- (id)filteredMessagesAtIndexes:(id)arg1;
- (id)filteredMessageAtIndex:(unsigned long long)arg1;
- (unsigned long long)filteredMessagesCount;
- (void)_handleMiniMallNotification:(id)arg1;
- (void)_updateUseLibraryIDNumbering;
- (void)setUsingSearchMiniMall:(BOOL)arg1;
- (BOOL)isUsingSearchMiniMall;
- (id)alternateMiniMall;
- (id)currentMiniMall;
- (void)unregisterForNotifications;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface MessageSaver : NSObject <MCActivityTarget>
{
    NSArray *_messages;
    NSSet *_stores;
    NSSavePanel *_savePanel;
    NSWindow *_window;
    NSURL *_saveDestination;
    unsigned int _haveAttachments:1;
    unsigned int _hideExtension:1;
    unsigned int _includeAttachments:1;
    unsigned int _saveFormat:4;
    unsigned int _headerDetailLevel:4;
    NSView *_accessoryView;
    NSPopUpButton *_formatPopup;
    NSButton *_includeAttachmentsSwitch;
}

+ (void)saveMessages:(id)arg1 headerDetailLevel:(long long)arg2 preferredFormat:(int)arg3 window:(id)arg4;
+ (void)initialize;
@property(nonatomic) NSButton *includeAttachmentsSwitch; // @synthesize includeAttachmentsSwitch=_includeAttachmentsSwitch;
@property(nonatomic) NSPopUpButton *formatPopup; // @synthesize formatPopup=_formatPopup;
@property(retain, nonatomic) NSView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (id)_separator;
- (void)changeIncludeAttachments:(id)arg1;
- (void)changeFormat:(id)arg1;
- (void)_handleSaveError:(id)arg1;
- (void)_saveMessages;
- (void)_updateSavePanelUI;
- (void)_runSavePanel;
- (void)_runSavePanelForStationery;
- (void)_savePanelDidEndWithFileHandlingResult:(long long)arg1;
- (void)_setWindow:(id)arg1;
- (void)_setSaveFormat:(int)arg1;
- (void)_setHeaderDetailLevel:(long long)arg1;
- (void)_setMessages:(id)arg1;
- (void)saveMessagesWithoutPrompting:(id)arg1 toFilePath:(id)arg2 headerDetailLevel:(long long)arg3 format:(int)arg4;
- (void)dealloc;

@end

@interface MessageSelection : NSObject
{
    MCMessage *_initialMessage;
    NSArray *_conversations;
    NSDictionary *_focusedMessagesByConversation;
    NSDictionary *_selectedMessagesForConversation;
    NSArray *_messages;
}

@property(readonly, nonatomic) NSArray *messages; // @synthesize messages=_messages;
@property(readonly, nonatomic) NSDictionary *selectedMessagesByConversation; // @synthesize selectedMessagesByConversation=_selectedMessagesForConversation;
@property(readonly, nonatomic) NSDictionary *focusedMessagesByConversation; // @synthesize focusedMessagesByConversation=_focusedMessagesByConversation;
@property(readonly, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
@property(readonly, nonatomic) MCMessage *initialMessage; // @synthesize initialMessage=_initialMessage;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)_initWithInitialMessage:(id)arg1 conversations:(id)arg2 focusedMessagesByConversation:(id)arg3 selectedMessagesByConversation:(id)arg4 messages:(id)arg5;
- (id)initWithInitialMessage:(id)arg1 conversations:(id)arg2 selectedMessagesByConversation:(id)arg3 messages:(id)arg4;
- (id)initWithInitialMessage:(id)arg1 conversations:(id)arg2 focusedMessagesByConversation:(id)arg3 messages:(id)arg4;

@end

@interface MessageTextView : NSTextView
{
}

- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)drawRect:(struct CGRect)arg1;
- (void)saveAs:(id)arg1;
- (void)showPrintPanel:(id)arg1;
- (void)toggleShowControlCharacters:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)acceptsFirstResponder;

@end

@interface MessageTransfer : NSObject <MCActivityTarget, MessageDeletionTransfer>
{
    NSMutableArray *_operations;
    BOOL _registeredForUndo;
    BOOL _isDeleteOperation;
    BOOL _isArchiveOperation;
    BOOL _undoInProgress;
    BOOL _needToUndoTransfer;
    BOOL _deleteOriginals;
    BOOL _allowsUndo;
    id <MessageTransferDelegate> _delegate;
    NSArray *_sourceLabels;
}

+ (void)queueMailboxDeletions:(id)arg1;
+ (BOOL)_shouldProceedWithMailboxDeletions:(id)arg1;
+ (void)_redo:(id)arg1;
+ (void)_undo:(id)arg1;
+ (void)initialize;
@property(copy) NSArray *sourceLabels; // @synthesize sourceLabels=_sourceLabels;
@property BOOL allowsUndo; // @synthesize allowsUndo=_allowsUndo;
@property BOOL deleteOriginals; // @synthesize deleteOriginals=_deleteOriginals;
@property id <MessageTransferDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_undoActionNameForMessageCount:(unsigned long long)arg1;
- (BOOL)anySourceStoreAllowsDeleteInPlace;
- (id)sourceStores;
- (id)destinationMailboxes;
- (void)_synchronouslyPerformTransfer;
- (void)_postDidEndDocumentTransferNotification:(id)arg1 result:(long long)arg2 destinationAccount:(id)arg3 missedMessages:(id)arg4;
- (void)_postWillBeginDocumentTransferNotification:(id)arg1;
- (void)_redo;
- (void)_undoSettingFlags:(id)arg1 transferringMessages:(id)arg2;
- (void)_undoSettingFlagsCompletedWithMessages:(id)arg1;
- (void)_undo;
- (void)_registerForUndoType:(int)arg1;
- (void)_completedTransferWithError:(id)arg1;
- (void)beginTransfer;
- (BOOL)canBeginTransfer;
- (id)initWithMessages:(id)arg1 targetMailbox:(id)arg2 isDeleteOperation:(BOOL)arg3 isArchiveOperation:(BOOL)arg4;
- (void)dealloc;

@end

@interface _TransferOperation : NSObject
{
    NSMutableArray *_sourceMessages;
    NSMutableArray *_documentIDs;
    id _messagesForGmailLabelsToRemoveLock;
    NSMutableDictionary *_messagesForGmailLabelsToRemove;
    BOOL _editableDocuments;
    MFMessageStore *_sourceStore;
    MFMailbox *_destinationMailbox;
    NSArray *_unreadSourceMessages;
    NSArray *_destinationMessageIDs;
}

@property(readonly, nonatomic) BOOL editableDocuments; // @synthesize editableDocuments=_editableDocuments;
@property(retain) NSArray *destinationMessageIDs; // @synthesize destinationMessageIDs=_destinationMessageIDs;
@property(retain) NSArray *unreadSourceMessages; // @synthesize unreadSourceMessages=_unreadSourceMessages;
@property(readonly, nonatomic) MFMailbox *destinationMailbox; // @synthesize destinationMailbox=_destinationMailbox;
@property(readonly, nonatomic) MFMessageStore *sourceStore; // @synthesize sourceStore=_sourceStore;
- (id)popMessagesForGmailLabelsToRemove;
- (void)addMessage:(id)arg1 forLabelsToRemove:(id)arg2;
@property(readonly) NSDictionary *messagesForGmailLabelsToRemove;
- (void)removeSourceMessages:(id)arg1;
- (void)addSourceMessage:(id)arg1;
@property(retain, nonatomic) NSArray *sourceMessages;
@property(readonly, nonatomic) NSArray *documentIDs; // @synthesize documentIDs=_documentIDs;
- (id)sourceLibraryStore;
- (void)dealloc;
- (id)initWithSourceStore:(id)arg1 destinationMailbox:(id)arg2 editableDocuments:(BOOL)arg3;

@end

@interface _DeleteMailboxTransfer : NSObject <MessageDeletionTransfer>
{
    MCMonitoredInvocation *_invocation;
}

@property(retain, nonatomic) MCMonitoredInvocation *invocation; // @synthesize invocation=_invocation;
- (void)beginTransfer;
- (BOOL)canBeginTransfer;
- (void)dealloc;

@end

@interface MessageView : NSView
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;

@end

@interface MessageViewController : NSViewController <NSMenuDelegate>
{
    BOOL _displayAsSingleton;
    double _pageZoom;
    BannerContainerViewController *_bannerContainerViewController;
    HeaderViewController *_headerViewController;
    NSSegmentedControl *_actionButtons;
    NSScrollView *_bodyScrollView;
    MessageWebDocumentView *_webDocumentView;
    NSTrackingArea *_headerTrackingArea;
}

+ (id)keyPathsForValuesAffectingShowingAllHeaders;
+ (id)keyPathsForValuesAffectingLoaded;
@property(retain, nonatomic) NSTrackingArea *headerTrackingArea; // @synthesize headerTrackingArea=_headerTrackingArea;
@property(retain, nonatomic) MessageWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(retain, nonatomic) NSScrollView *bodyScrollView; // @synthesize bodyScrollView=_bodyScrollView;
@property(retain, nonatomic) NSSegmentedControl *actionButtons; // @synthesize actionButtons=_actionButtons;
@property(retain, nonatomic) HeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(retain, nonatomic) BannerContainerViewController *bannerContainerViewController; // @synthesize bannerContainerViewController=_bannerContainerViewController;
- (void)linkAccessibilityView:(id)arg1;
- (id)viewWhereMessageExists;
- (id)viewWhereMessageIsDisplayed;
- (BOOL)isHeaderViewFullyVisible;
- (id)headerSnapshot;
- (void)bodySnapshotWithSize:(struct CGSize)arg1 completionBlock:(id)arg2;
- (struct CGSize)visibleBodySize;
- (BOOL)validateMenuItem:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)viewSource:(id)arg1;
- (void)showMessageInMailbox:(id)arg1;
- (void)showFilteredHeaders:(id)arg1;
- (void)showAllHeaders:(id)arg1;
- (void)exportAttachmentsToiPhoto:(id)arg1;
- (void)saveAllAttachmentsWithoutPrompting:(id)arg1;
- (void)saveAllAttachments:(id)arg1;
- (void)saveAttachment:(id)arg1;
- (void)quickLookAllAttachments:(id)arg1;
- (void)forwardAction:(id)arg1;
- (void)replyAllAction:(id)arg1;
- (void)replyAction:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)_interpretAction:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_updateHeaderMouseOver;
- (void)_updateHeaderTrackingArea;
- (void)_updateLoadRemoteContent;
- (void)_updateHeaderFont;
- (void)_updateActionButtons;
- (void)_updateWebDocumentView;
- (void)_viewerPreferencesChanged;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) BOOL showingAllHeaders;
@property(nonatomic) double pageZoom;
@property(readonly, nonatomic) MessageViewer *messageViewer;
@property(readonly, nonatomic) BOOL loaded;
@property(nonatomic) BOOL displayAsSingleton;
- (void)_showLoadingProgress;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (id)view;
- (void)dealloc;
- (void)_setupActionButtons;
- (void)_setupBodyScrollView;
- (void)_setupHeaderView;
- (void)awakeFromNib;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _MessageViewerLazyPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)_drawIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface MessageViewerLazyPopUpButton : NSPopUpButton
{
    BOOL _didLazyLoadMenu;
    long long _menuToUse;
}

@property long long menuToUse; // @synthesize menuToUse=_menuToUse;
- (void)initializeMenu;
- (void)setMenu:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface MessageViewer : NSResponder <FlaggedStatusToolbarItemDelegate, MessageViewerSearchFieldFocusDelegate, NSToolbarDelegate, MailboxesOutlineViewControllerDelegate, MailTableViewDelegateDelegate, MCActivityTarget, MessageTransferDelegate, MVMailboxSelectionOwner, MVTerminationHandler, NSAnimationDelegate, NSSpeechSynthesizerDelegate, NSUserInterfaceValidations, NSWindowDelegate, SearchScopeDelegate, SGTSearchFieldQueryScopeDelegate>
{
    id <MessageMall> _messageMall;
    MessageViewerSearchField *_searchField;
    NSToolbarItem *_searchViewItem;
    MailToolbar *_toolbar;
    NSDictionary *_toolbarItems;
    NSWindow *_window;
    FlaggedStatusToolbarItem *_flaggedStatusToolbarItem;
    NSToolbarItem *_fullScreenFlagMenuToolbarItem;
    NSDictionary *_savedAttributes;
    struct __MDQuery *_lowPriorityQuery;
    struct __MDQuery *_highPriorityQuery;
    MCInvocationQueue *_userTasks;
    NSString *_searchQuery;
    NSString *_searchPhrase;
    long long _currentSearchField;
    int _currentSearchTarget;
    long long _selectedTag;
    NSMenu *_messageColumnsMenu;
    NSMenu *_messageSortByMenu;
    NSMenuItem *_columnsMenuItem;
    NSMenuItem *_sortByMenuItem;
    NSMenuItem *_dateReceivedMenuItem;
    NSMenuItem *_dateSentMenuItem;
    NSMenuItem *_dateReceivedTableHeaderMenuItem;
    NSMenuItem *_dateSentTableHeaderMenuItem;
    MailboxPaneBottomView *_mailboxPaneBottomView;
    struct CGSize _messageListUserSize;
    double _mailboxesPaneUserWidth;
    BOOL _shouldPreventTableViewResize;
    BOOL _shouldMakeTableViewSelectionVisible;
    BOOL _showingDefaultSearchString;
    BOOL _updatingSearchField;
    BOOL _allowShowingDeletedMessages;
    BOOL _suppressWindowTitleUpdates;
    BOOL _didSetupUI;
    double _restoreMailboxPaneToWidthAfterDragOperation;
    NSArray *_mailboxesToDisplayWhenVisible;
    NSString *_stringToSearchWhenVisible;
    BOOL _shouldCascadeWhenShowing;
    NSDictionary *_initialWindowState;
    NSArray *_messagesToDeleteAfterPlainTextTransferHasCompleted;
    NSSet *_initiallySelectedMessages;
    NSMutableArray *_transferOperations;
    NSDictionary *_plainTextTransferParameters;
    RichMessageListSortView *_sortView;
    MCSafeBoolCache *_atLeastOneSelectedMessageIsInOutboxCache;
    MCSafeBoolCache *_atLeastOneSelectedMessageIsInDraftsCache;
    NSNumber *_uniqueID;
    BOOL _changingSplitViewOrientation;
    BOOL _initializedSearchDelay;
    double _performSearchDelay;
    NSAnimation *_barContainerViewAnimation;
    NSTimer *_timeMachineRestoreSheetTimer;
    BOOL _timeMachineRestoreIsInProgress;
    FullScreenWindowController *_fullScreenWindowController;
    MailboxesSplitViewController *_mailboxesSplitViewController;
    ContentSplitViewController *_contentSplitViewController;
    BOOL _ignoreSearchBarUpdates;
    BOOL _previouslyHadSentScope;
    TableViewManager *_tableManager;
    NSView *_viewingPaneContainerView;
    ViewingPaneViewController *_viewingPaneViewController;
    MailboxesOutlineViewController *_outlineViewController;
    MailSplitView *_contentSplitView;
    MessageListContainerView *_messageListContainerView;
    MailSplitView *_mailboxesSplitView;
    NSView *_viewerContainer;
    NSView *_mailboxesView;
    NSView *_mailboxesContainer;
    NSLayoutConstraint *_mailboxesWidthConstraint;
    ActivityViewController *_activityViewController;
    NSMenu *_tableHeaderMenu;
    NSMenu *_sortByTableHeaderMenu;
    MessageViewerLazyPopUpButton *_makeNewMailboxButton;
    MessageViewerLazyPopUpButton *_actionButton;
    MailBarContainerView *_mailBarContainerView;
    FavoritesBarView *_favoritesBarView;
    NSWindow *_timeMachineRestoreMessagesWindow;
    NSTextField *_timeMachineRestoreMessagesField;
    NSWindow *_timeMachineRestoreMailboxWindow;
    NSTextField *_timeMachineRestoreMailboxField;
}

+ (id)_messageViewersByUniqueID;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)newDefaultMessageViewer;
+ (void)clearDelayedWindowRestorations;
+ (void)_mailApplicationDidFinishLaunching:(id)arg1;
+ (void)restoreAllViewersFromDefaults;
+ (unsigned long long)deleteOperationForEvent:(id)arg1 isKeyPressed:(BOOL)arg2;
+ (id)_mailboxesForPaths:(id)arg1;
+ (void)searchForString:(id)arg1;
+ (id)frontmostMessageViewerWithOptions:(unsigned long long)arg1;
+ (id)mailboxesBeingViewed;
+ (void)showAllViewers;
+ (void)deregisterViewer:(id)arg1;
+ (void)_registerNewViewer:(id)arg1;
+ (id)existingViewerShowingMessage:(id)arg1;
+ (id)viewerForMailboxWithTag:(unsigned long long)arg1;
+ (id)mailboxForFavoritesBarPosition:(unsigned long long)arg1;
+ (id)existingViewerForMailbox:(id)arg1;
+ (id)allSingleMessageViewers;
+ (id)allMessageViewers;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
+ (id)messageViewerForUniqueID:(id)arg1;
+ (id)toolbarIdentifier;
@property(nonatomic) BOOL previouslyHadSentScope; // @synthesize previouslyHadSentScope=_previouslyHadSentScope;
@property(nonatomic) BOOL ignoreSearchBarUpdates; // @synthesize ignoreSearchBarUpdates=_ignoreSearchBarUpdates;
@property(nonatomic) NSTextField *timeMachineRestoreMailboxField; // @synthesize timeMachineRestoreMailboxField=_timeMachineRestoreMailboxField;
@property(retain, nonatomic) NSWindow *timeMachineRestoreMailboxWindow; // @synthesize timeMachineRestoreMailboxWindow=_timeMachineRestoreMailboxWindow;
@property(nonatomic) NSTextField *timeMachineRestoreMessagesField; // @synthesize timeMachineRestoreMessagesField=_timeMachineRestoreMessagesField;
@property(retain, nonatomic) NSWindow *timeMachineRestoreMessagesWindow; // @synthesize timeMachineRestoreMessagesWindow=_timeMachineRestoreMessagesWindow;
@property(nonatomic) FavoritesBarView *favoritesBarView; // @synthesize favoritesBarView=_favoritesBarView;
@property(nonatomic) MailBarContainerView *mailBarContainerView; // @synthesize mailBarContainerView=_mailBarContainerView;
@property(readonly) NSDictionary *savedAttributes; // @synthesize savedAttributes=_savedAttributes;
@property(nonatomic) MessageViewerLazyPopUpButton *actionButton; // @synthesize actionButton=_actionButton;
@property(nonatomic) MessageViewerLazyPopUpButton *makeNewMailboxButton; // @synthesize makeNewMailboxButton=_makeNewMailboxButton;
@property(nonatomic) NSMenu *sortByTableHeaderMenu; // @synthesize sortByTableHeaderMenu=_sortByTableHeaderMenu;
@property(retain, nonatomic) NSMenu *tableHeaderMenu; // @synthesize tableHeaderMenu=_tableHeaderMenu;
@property(retain, nonatomic) ActivityViewController *activityViewController; // @synthesize activityViewController=_activityViewController;
@property(nonatomic) NSLayoutConstraint *mailboxesWidthConstraint; // @synthesize mailboxesWidthConstraint=_mailboxesWidthConstraint;
@property(nonatomic) NSView *mailboxesContainer; // @synthesize mailboxesContainer=_mailboxesContainer;
@property(retain, nonatomic) NSView *mailboxesView; // @synthesize mailboxesView=_mailboxesView;
@property(nonatomic) NSView *viewerContainer; // @synthesize viewerContainer=_viewerContainer;
@property(nonatomic) MailSplitView *mailboxesSplitView; // @synthesize mailboxesSplitView=_mailboxesSplitView;
@property(nonatomic) MessageListContainerView *messageListContainerView; // @synthesize messageListContainerView=_messageListContainerView;
@property(retain, nonatomic) MailSplitView *contentSplitView; // @synthesize contentSplitView=_contentSplitView;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) MailboxesOutlineViewController *outlineViewController; // @synthesize outlineViewController=_outlineViewController;
@property(retain, nonatomic) ViewingPaneViewController *viewingPaneViewController; // @synthesize viewingPaneViewController=_viewingPaneViewController;
@property(nonatomic) NSView *viewingPaneContainerView; // @synthesize viewingPaneContainerView=_viewingPaneContainerView;
@property(retain, nonatomic) TableViewManager *tableManager; // @synthesize tableManager=_tableManager;
- (void)_alwaysShowDuplicatesDidChange:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (BOOL)usesCustomFullScreenAnimation;
- (BOOL)isModal;
- (BOOL)hasModalWindow;
- (void)_windowDidExitFullScreen:(id)arg1;
- (void)_windowWillExitFullScreen:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)_windowWillEnterFullScreen:(id)arg1;
- (void)initFullScreenController;
- (void)setFullScreenWindowController:(id)arg1;
@property(readonly) FullScreenWindowController *fullScreenWindowController;
- (void)attachModalWindowWithDelegate:(id)arg1;
- (void)willAttachModalWindowWithDelegate:(id)arg1;
- (void)closeModalWindowForcibly:(BOOL)arg1 animate:(BOOL)arg2 animationType:(long long)arg3;
- (void)closeModalWindowForcibly:(BOOL)arg1 animate:(BOOL)arg2;
- (void)presentModalWindowWithDelegate:(id)arg1;
- (BOOL)isFullScreen;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_animationDidEndOrStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
@property(readonly) struct CGRect nonToolbarWindowContentRect;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)toggleShowBarContainer:(id)arg1;
- (void)setWithoutAnimationBarContainerVisibility:(BOOL)arg1 forFullScreen:(BOOL)arg2;
- (void)_createUniqueID;
- (void)_updateSearchItemLabel;
- (id)undoManagerForMessageTransfer:(id)arg1;
- (void)messageTransferDidUndoTransferOfMessages:(id)arg1;
- (void)messageTransferDidTransferMessages:(id)arg1;
- (void)unhideMessagesForMessageTransfer:(id)arg1;
- (void)hideMessagesForMessageTransfer:(id)arg1;
- (void)transfer:(id)arg1 didCompleteWithError:(id)arg2;
- (void)_reportError:(id)arg1;
- (id)_selectedLabels;
- (BOOL)transferMessages:(id)arg1 toMailbox:(id)arg2 deleteOriginals:(BOOL)arg3 allowUndo:(BOOL)arg4 isDeleteOperation:(BOOL)arg5 isArchiveOperation:(BOOL)arg6;
- (void)_synchronouslyMarkAsNotJunkMail:(id)arg1 inStores:(id)arg2;
- (void)_markMessagesAsNotJunkMail:(id)arg1 stores:(id)arg2;
- (void)markAsNotJunkMail:(id)arg1;
- (void)_undoMarkMessagesAsJunkMail:(id)arg1 stores:(id)arg2;
- (void)_synchronouslyMarkAsJunkMail:(id)arg1 inStores:(id)arg2 delete:(BOOL)arg3;
- (void)_deleteJunkedMessages:(id)arg1 inStores:(id)arg2 moveToTrash:(BOOL)arg3;
- (void)_markMessagesAsJunkMail:(id)arg1 stores:(id)arg2;
- (void)markAsJunkMail:(id)arg1;
- (id)searchFieldWidenScopeMenuSpinnerTitleString:(id)arg1;
- (id)searchFieldWidenScopeMenuItemTitleString:(id)arg1;
- (id)searchFieldWidenScopeMenuTitleString:(id)arg1;
- (void)searchFieldWidenQueryScope:(id)arg1;
- (BOOL)searchField:(id)arg1 hasResultsForQuery:(id)arg2;
- (BOOL)searchFieldUsesRestrictedQueryScope:(id)arg1;
- (void)addSenderToContacts:(id)arg1;
- (void)reapplySortingRules:(id)arg1;
- (void)saveSearch:(id)arg1;
- (void)searchScopeChanged:(id)arg1;
- (void)searchScopeWillChange;
- (BOOL)_hasSentScope;
- (void)performSearch:(id)arg1;
- (void)_updateSearchUIForSender:(id)arg1;
- (void)searchDidUpdate;
- (void)searchDidFinish;
- (void)searchWillStart;
- (void)clearUndoRedoStacksUnconditionally:(BOOL)arg1;
- (void)_updateSearchStatusWithDelay;
- (void)_reallyAnimateProgressInidicator;
@property(copy, nonatomic) NSSet *initiallySelectedMessages;
- (void)filterMessagesToMoveOrDelete:(id)arg1;
- (BOOL)archiveMessages:(id)arg1 allowUndo:(BOOL)arg2;
- (BOOL)deleteMessages:(id)arg1 allowMoveToTrash:(BOOL)arg2 allowUndo:(BOOL)arg3;
- (BOOL)transferSelectedMessagesToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (void)messageDragDidEnd;
- (void)ensureMailboxesPaneIsVisible:(id)arg1;
- (void)messageDragMovedTo:(struct CGPoint)arg1;
- (void)messageDragWillStartWithEvent:(id)arg1;
- (void)messageWasDoubleClicked:(id)arg1;
- (void)actionMessageDidChangeInConversationView;
- (void)selectedMessagesDidChangeInMessageList;
- (void)refreshViewingPaneSelection;
- (void)messagesWereSelected:(id)arg1 fromTableViewManager:(id)arg2;
- (void)_updateMallboxes:(id)arg1;
- (id)_columnOrDetailMenuItemTitle;
- (void)_reallyUpdateWindowTitle:(id)arg1;
- (void)_updateWindowTitle:(id)arg1;
- (void)_mailboxDisplayCountChanged:(id)arg1;
- (id)_countStringForType:(BOOL)arg1 isDrafts:(BOOL)arg2 omitUnread:(BOOL)arg3 totalCount:(unsigned long long *)arg4;
- (void)saveDefaultWindowState;
- (void)saveDefaultViewerState;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)_restoreFromDefaultWindowStateDictionary:(id)arg1;
- (id)_defaultWindowStateDictionary;
- (void)_setupFromAttributes;
- (void)_findSomeDefaultsIfNecessary;
- (id)dictionaryRepresentation;
- (void)toggleSizeColumn:(id)arg1;
- (void)toggleAuthorColumn:(id)arg1;
- (void)toggleLocationColumn:(id)arg1;
- (void)toggleDateReceivedColumn:(id)arg1;
- (void)toggleDateSentColumn:(id)arg1;
- (void)toggleToColumn:(id)arg1;
- (void)toggleFromColumn:(id)arg1;
- (void)toggleMessageFlagsColumn:(id)arg1;
- (void)toggleMessageNumbersColumn:(id)arg1;
- (void)toggleContentsColumn:(id)arg1;
- (void)hideDeletions:(id)arg1;
- (void)showDeletions:(id)arg1;
- (void)selectNextInThread:(id)arg1;
- (void)selectPreviousInThread:(id)arg1;
- (void)selectThread:(id)arg1;
- (BOOL)shouldShowThreadControlForMessage:(id)arg1 isSelectedRow:(BOOL)arg2;
- (void)toggleViewRelatedMessages:(id)arg1;
- (void)toggleThreadedMode:(id)arg1;
- (void)closeAllThreads:(id)arg1;
- (void)openAllThreads:(id)arg1;
- (void)unfocus:(id)arg1;
- (void)focus:(id)arg1;
- (void)toggleInboxOnly:(id)arg1;
- (void)toggleAscendingSort:(id)arg1;
- (void)sortByTagOfSender:(id)arg1;
- (void)removeAttachments:(id)arg1;
- (void)_removeAttachmentsFromMessages:(id)arg1 fromStores:(id)arg2;
- (void)_handleAttachmentsRemovedFromMessages:(id)arg1 newMessages:(id)arg2;
- (int)searchTarget;
- (long long)_searchField;
- (void)_setupSearchParametersForTag:(long long)arg1;
- (void)clearSearch:(id)arg1;
- (void)_clearSearchByAnimating:(BOOL)arg1;
- (void)_updateSearchStatus;
@property(copy, nonatomic) NSString *searchPhrase;
- (void)startSearchForSuggestions:(id)arg1;
- (id)suggestionsGenius;
- (void)_searchForSuggestions:(id)arg1;
- (void)_searchForString:(id)arg1;
- (void)_hideSearchResultsInSearchView;
- (void)_showSearchResultsInSearchView;
- (BOOL)_canSearchSelectedMailboxes;
- (BOOL)_canSaveSearchWithTarget:(int)arg1;
- (unsigned long long)_searchResultCount;
@property(readonly, nonatomic) BOOL isShowingSearchResults;
- (void)searchIndex:(id)arg1;
- (id)mailboxSearchCriterionForScope:(int)arg1 containsSentMailbox:(char *)arg2 containsTrashMailbox:(char *)arg3 shouldExcludeJunk:(char *)arg4;
- (id)_criterionForMailbox:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)jumpToSelection:(id)arg1;
- (void)quickLookSelectedAttachments:(id)arg1;
- (void)saveAllAttachments:(id)arg1;
- (void)saveAs:(id)arg1;
- (BOOL)send:(id)arg1;
- (BOOL)_sendMessages:(id)arg1 forDraft:(BOOL)arg2;
- (BOOL)send:(id)arg1 forDraft:(BOOL)arg2 actualMessage:(id)arg3;
- (void)exportAsPDF:(id)arg1;
- (void)showPrintPanel:(id)arg1;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;
- (void)stopSpeaking:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)paste:(id)arg1;
- (void)_pasteData:(id)arg1 pasteboardType:(id)arg2 alternateData:(id)arg3 alternateType:(id)arg4 destination:(id)arg5;
- (long long)_pasteMessages:(id)arg1 unsuccessfulMessages:(id)arg2 flagsToSet:(id)arg3 destinationAccount:(id)arg4 destinationStore:(id)arg5;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)_doCopy:(id)arg1 deleteWhenCopied:(BOOL)arg2;
- (void)_showActivityProgressPanelForCopy:(id)arg1;
- (void)_copyMessagesToPasteboard:(id)arg1 deleteWhenCopied:(BOOL)arg2 pasteboardType:(id)arg3 alternateType:(id)arg4;
- (void)_putMessageDataOntoPasteboard:(id)arg1 attributedString:(id)arg2 shouldDelete:(id)arg3 pasteboardType:(id)arg4;
- (void)rebuildTableOfContents:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)clearFlaggedStatus:(id)arg1;
- (void)toggleFlag:(id)arg1;
- (void)markAsUnreadFromToolbar:(id)arg1;
- (void)markAsReadFromToolbar:(id)arg1;
- (void)markAsUnread:(id)arg1;
- (void)markAsRead:(id)arg1;
- (void)performTextFinderAction:(id)arg1;
- (void)markMessagesAsViewed:(id)arg1;
- (void)markMessageAsViewed:(id)arg1;
- (void)modifyFlaggedStatus:(id)arg1;
- (void)clearFlaggedStatusForMessageListSelection:(BOOL)arg1;
- (void)clearFlaggedStatus;
- (id)_flaggedStatusForMessages:(id)arg1;
- (void)_setFlaggedStatus:(id)arg1 withUndoActionName:(id)arg2;
- (id)_messagesWithoutFlagColor:(BOOL)arg1 fromMessages:(id)arg2;
- (void)toggleFlaggedStatus:(BOOL)arg1 forMessageListSelection:(BOOL)arg2;
- (void)toggleFlaggedStatus:(BOOL)arg1;
- (void)toggleFlaggedStatusInFullScreen:(id)arg1;
- (id)appliedFlagColorsForSelectedMessages;
- (void)_changeFlag:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3 undoActionName:(id)arg4;
- (id)_selectedMessagesWhoseFlag:(unsigned int)arg1 isEqualToState:(BOOL)arg2 action:(SEL)arg3;
- (void)copyMessagesToMailbox:(id)arg1;
- (void)moveMessagesToMailbox:(id)arg1;
- (void)_moveOrCopyMessagesToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (void)renameMailbox:(id)arg1;
- (id)_displaySelectedMessageInSeparateWindow:(id)arg1 withModifiers:(unsigned long long)arg2;
- (id)_documentsToDisplaySelectedMessagesInSeperateWindowWithModifiers:(unsigned long long)arg1;
- (id)displaySelectedMessageInSeparateWindow:(id)arg1;
- (void)forwardWithParentAsAttachment:(id)arg1;
- (void)forwardAsAttachment:(id)arg1;
- (void)forwardMessage:(id)arg1;
- (void)redirectMessage:(id)arg1;
- (BOOL)showEditorWithType:(unsigned long long)arg1 forSelectedMessages:(id)arg2 settings:(id)arg3 completionHandler:(id)arg4;
- (void)_showComposeWindowWithType:(unsigned long long)arg1;
- (void)showAccountInfo:(id)arg1;
- (void)focusMessage;
- (void)focusMailboxes;
- (void)focusMessages;
- (void)selectAllMessages;
- (void)_openMessages:(id)arg1 withModifiers:(unsigned long long)arg2;
- (void)openMessages:(id)arg1;
- (void)archiveMessages:(id)arg1;
- (void)deleteMessages:(id)arg1 allowingMoveToTrash:(BOOL)arg2;
- (void)deleteMessages:(id)arg1;
- (void)undeleteMessages:(id)arg1;
- (void)showAddressPanel:(id)arg1;
- (void)showComposeWindow:(id)arg1;
- (void)replyToOriginalSender:(id)arg1;
- (void)replyAllMessage:(id)arg1;
- (void)replyMessage:(id)arg1;
- (void)checkNewMail:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)smartMailboxMemberMessagesForMessages:(id)arg1;
- (BOOL)shouldDeleteMessagesGivenCurrentState;
- (BOOL)_updatedAtLeastOneSelectedMessageIsInDrafts:(id)arg1;
- (BOOL)atLeastOneSelectedMessageIsInDrafts:(id)arg1;
- (BOOL)_updatedAtLeastOneSelectedMessageIsInOutbox:(id)arg1;
- (BOOL)atLeastOneSelectedMessageIsInOutbox:(id)arg1;
- (BOOL)_messagesContainMessagesWithAttachments:(id)arg1;
- (BOOL)_messages:(id)arg1 containMessagesWithJunkMailLevelEqualTo:(long long)arg2;
- (BOOL)_messages:(id)arg1 containMessagesWithFlaggedStatusEqualTo:(BOOL)arg2;
- (long long)_messages:(id)arg1 stateForFlagColor:(BOOL)arg2;
- (BOOL)_messages:(id)arg1 containMessagesWithReadStatusEqualTo:(BOOL)arg2;
- (void)_setMailboxes:(id)arg1;
- (void)smartMailboxCriteriaChanged:(id)arg1;
- (void)_selectNextMessage:(id)arg1;
- (void)_mailboxesDidChange:(id)arg1;
- (void)_accountsDidChange:(id)arg1;
- (void)_mallStructureDidChange:(id)arg1;
- (void)_mallDidOpen:(id)arg1;
- (BOOL)messageViewerIsFinishedLoadingMessages;
- (void)_updateUnreadCountQueries:(id)arg1;
- (void)mailboxSelectionChanged:(id)arg1;
- (void)_mailboxWasRenamed:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (double)previewSplitPercentage;
- (void)selectMailbox:(id)arg1;
- (void)_moveMessagesToFavoriteWithMailbox:(id)arg1 andPosition:(unsigned long long)arg2;
- (void)_animateMessageSelectionToFavoriteButtonAtPosition:(long long)arg1 withCount:(unsigned long long)arg2 image:(id)arg3 fromPosition:(struct CGPoint)arg4;
- (void)outlineViewDoubleClick:(id)arg1;
- (id)messageThatUserIsProbablyReading;
- (id)currentDisplayedMessage;
- (id)messagesIncludingHiddenCopies:(id)arg1;
- (void)hideAllCopiesOfMessages:(id)arg1;
- (void)showAllCopiesOfMessage:(id)arg1;
- (id)messageIDsToShowAllCopiesOf;
- (id)messageSelectionForPrinting;
- (id)messageSelection;
- (id)messagesTargetedByAction:(SEL)arg1;
- (void)_firstResponderIsViewingPane:(char *)arg1 isMessageList:(char *)arg2;
- (BOOL)outgoingMailboxSelected;
- (void)setSelectedMessages:(id)arg1;
- (id)selectedMessages;
- (void)setSelectedMailboxes:(id)arg1 scrollToVisible:(BOOL)arg2;
- (void)setSelectedMailboxes:(id)arg1;
- (void)didCloseContextMenu:(id)arg1;
- (void)willShowContextMenu:(id)arg1;
- (id)mailboxSelectionWindow;
- (void)revealMailbox:(id)arg1;
- (id)sortedSectionItemsForTimeMachine;
- (id)expandedItems;
- (BOOL)sectionIsExpanded:(id)arg1;
- (BOOL)mailboxIsExpanded:(id)arg1;
- (void)selectPathsToMailboxes:(id)arg1;
- (BOOL)isSelectedMailboxSpecial;
- (id)selectedMailbox;
- (id)selectedMailbox:(BOOL)arg1;
- (id)expandedSelectedMailboxesAllowingSearch;
- (id)expandedSelectedMailboxes;
- (id)selectedMailboxes;
- (void)_setAutorecalculatesContentBorderThickness:(BOOL)arg1;
- (void)_timeMachineRestoreFinished:(id)arg1;
- (void)_beginTimeMachineRestoreSheetIsForMailbox:(id)arg1;
- (void)_displayTimeMachineRestoreSheet:(id)arg1;
- (void)prepareForTimeMachineRestore;
@property(retain, nonatomic) ContentSplitViewController *contentSplitViewController;
@property(retain, nonatomic) MailboxesSplitViewController *mailboxesSplitViewController;
- (BOOL)_shouldUseLayoutContraintsForWindow:(id)arg1;
- (struct CGSize)_minimumPreviewPaneSize;
- (struct CGSize)_minimumMessageListSize;
- (struct CGSize)minimumContentSize;
- (double)_sidebarAnimationDuration;
- (void)toggleMailboxesPane:(id)arg1;
- (void)_disableSplitViewAutosaving;
- (void)_enableSplitViewAutosaving;
- (void)_viewerLayoutPreferenceChanged:(id)arg1;
- (BOOL)_mailboxesPaneIsOpenWideEnoughToUse;
- (void)setMailboxesPaneIsOpen:(BOOL)arg1;
- (BOOL)mailboxesPaneIsOpen;
- (double)mailboxesPaneWidth;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowWillMiniaturize:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)resignAsSelectionOwner;
- (void)takeOverAsSelectionOwner;
- (void)_setUpMenus;
- (void)_setupMailboxOutlineView;
- (void)_setUpWindowContents;
- (id)messageListSortMenu;
- (id)tableHeaderViewGetDefaultMenu:(id)arg1;
- (void)_setupUIAndOrderFront:(BOOL)arg1 andMakeKey:(BOOL)arg2;
- (void)_updateWindowMinimumSize;
- (struct CGImage *)newMessageViewerSnapshotForceNonFullScreen:(BOOL)arg1;
- (void)showAndMakeKey:(BOOL)arg1;
- (void)show;
- (BOOL)_isShowingMessage:(id)arg1;
- (BOOL)_isViewingMailbox:(id)arg1;
- (BOOL)_selectedMailboxesAreOutgoing:(char *)arg1;
- (void)_setStore:(id)arg1;
- (void)storeBeingInvalidated:(id)arg1;
- (void)_unregisterForStoreNotifications;
- (void)_registerForStoreNotifications;
- (void)_unregisterForApplicationNotifications;
- (void)_registerForApplicationNotifications;
- (void)dealloc;
- (void)_messageViewerCommonInit;
- (id)initWithMailboxes:(id)arg1;
- (id)initPlain;
- (id)init;
- (void)intializeLazyPopUpButtons;
- (id)initWithAttributes:(id)arg1;
- (void)awakeFromNib;
- (id)_mailboxesFromAttributes:(id)arg1;
- (void)showFollowupsToMessage:(id)arg1;
- (void)_cantFindFollowupToMessage:(id)arg1;
- (void)_displayFollowup:(id)arg1;
- (void)showCurrentMessageInMailbox;
- (void)revealMessage:(id)arg1 inMailbox:(id)arg2 forceMailboxSelection:(BOOL)arg3;
- (long long)viewerNumber;
- (void)setScriptingProperties:(id)arg1;
- (id)junkMailbox;
- (id)trashMailbox;
- (id)sentMailbox;
- (id)draftsMailbox;
- (id)outbox;
- (id)inbox;
- (void)setVisibleColumns:(id)arg1;
- (id)visibleColumns;
- (BOOL)previewPaneVisible;
- (void)setIsSortedAscending:(BOOL)arg1;
- (BOOL)isSortedAscending;
- (void)setAppleScriptSortColumn:(unsigned int)arg1;
- (unsigned int)appleScriptSortColumn;
- (void)setFocusedMessages:(id)arg1;
- (id)focusedMessages;
- (id)allMessages;
- (id)objectSpecifier;
- (id)uniqueID;
- (void)submenuAction:(id)arg1;
- (void)_synchronizeFullScreenFlagToolbarItem:(id)arg1;
- (void)finishedSettingFlaggedStatus;
- (void)searchFieldDidEndSearching:(id)arg1;
- (void)ensureSearchFieldVisibilityInToolbar;
- (void)_ensureItemVisibilityInToolbar:(long long)arg1 identifier:(id)arg2;
- (void)toolbarDidReorderItem:(id)arg1;
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (void)updateToolbar;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)setupSuggestionsSearchFieldForSentMailboxIfNecessary;
- (void)setupSuggestionsSearchField;
- (void)_setPrioritySuggestionsWithHighPriority:(BOOL)arg1 withLowPriority:(BOOL)arg2;
- (void)_updateSuggestionsMailboxesListAndFlagNames;
- (void)_asyncUpdateSuggestionsMailboxesListAndFlagNames:(id)arg1;
- (long long)_getLowPriorityResultCount;
- (long long)_getHighPriorityResultCount;
- (void)_setupPrioritySuggestions:(id)arg1;
- (void)_updateSuggestionsFlagNames;
- (void)_asyncUpdateSuggestionsFlagNames:(id)arg1;
- (void)configureSegmentedItem:(id)arg1 withDictionary:(id)arg2 forSegment:(long long)arg3;
- (BOOL)validateFlaggedStatusToolbarItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)toolbarConfigurationDict;
- (void)clearToolbarItemsTarget;
- (void)setupToolbar;

@end

@interface MessageViewerSearchField : SGTSearchField
{
    id <MessageViewerSearchFieldFocusDelegate> _focusDelegate;
    BOOL _focused;
}

@property id <MessageViewerSearchFieldFocusDelegate> focusDelegate; // @synthesize focusDelegate=_focusDelegate;
@property(getter=isFocused) BOOL focused;
- (void)windowDidResignKey:(id)arg1;
- (void)_firstResponderDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MessageWebDocumentView : MUIWebDocumentView
{
    BOOL _showRedundantContent;
}

- (void)linkAccessibilityView:(id)arg1;
- (void)toggleHighlightRedundantContent:(id)arg1;
- (void)generateSelectionParsedMessage:(id)arg1;
- (void)generateStyleInlinedParsedMessage:(id)arg1;
- (BOOL)shouldHandleClickForURL:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)setWebDocument:(id)arg1;
@property(nonatomic) BOOL showRedundantContent;
- (void)_messageWebDocumentViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MessageWebDocumentViewGroupManager : NSObject
{
    MUIWebDocumentViewGroup *_viewGroup;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) MUIWebDocumentViewGroup *viewGroup; // @synthesize viewGroup=_viewGroup;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface MessageWebHTMLView : WebHTMLView
{
    NSArray *_attachmentsForContextualMenu;
}

- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)setSelectionFloat:(id)arg1 undoTitle:(id)arg2;
- (BOOL)canFloatSelectedElement;
- (void)floatNone:(id)arg1;
- (void)floatRight:(id)arg1;
- (void)floatLeft:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)messageViewer;
- (void)fixWebArchiveAndRTFDDataOnPasteboard:(id)arg1;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)insertList:(id)arg1;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (void)insertNumberedList:(id)arg1;
- (void)insertBulletedList:(id)arg1;
- (void)exportAttachmentsToIPhoto:(id)arg1;
- (void)importInvitations:(id)arg1;
- (void)chooseApplicationToOpenAttachment:(id)arg1;
- (void)openAttachmentWithApplication:(id)arg1;
- (void)viewAttachmentInline:(id)arg1;
- (id)editingDelegate;
- (void)saveAttachmentToDownloadsDirectory:(id)arg1;
- (void)saveAttachment:(id)arg1;
- (void)quickLookAttachment:(id)arg1;
- (void)quickLookSelectedAttachments:(id)arg1;
- (void)openAttachment:(id)arg1;
- (id)attachmentForEvent:(id)arg1;
- (BOOL)moreThanOneAttachmentSelected;
- (BOOL)allSelectedAttachmentsArePhotos;
- (BOOL)selectionIsOneAttachment;
- (id)selectedAttachments;
- (void)willShowContextualMenuForAttachment:(id)arg1;
- (void)setAttachmentsForContextualMenu:(id)arg1;
- (id)attachmentsForContextualMenu;
- (id)selectedAttributedString;
- (void)_updateFontPanel;
- (void)dealloc;

@end

@interface MessageWebView : TilingWebView
{
}

- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)layoutResizingAttachmentViews;
- (void)keyDown:(id)arg1;

@end

@interface MouseTrackingWindow : NSWindow
{
    BOOL _customFullScreenAnimation;
    BOOL _forceDrawAsMain;
    BOOL _preventBecomingKey;
    unsigned long long _fullScreenState;
}

@property(readonly) unsigned long long fullScreenState; // @synthesize fullScreenState=_fullScreenState;
@property BOOL preventBecomingKey; // @synthesize preventBecomingKey=_preventBecomingKey;
@property BOOL forceDrawAsMain; // @synthesize forceDrawAsMain=_forceDrawAsMain;
- (void)_windowDidResize:(id)arg1;
- (void)_windowDidExitFullScreen:(id)arg1;
- (void)_windowWillExitFullScreen:(id)arg1;
- (void)_windowDidEnterFullScreen:(id)arg1;
- (void)_windowWillEnterFullScreen:(id)arg1;
- (BOOL)_isModalWindowPresent;
@property(readonly) BOOL isFullScreen;
- (BOOL)canBecomeKeyWindow;
- (BOOL)isMainWindow;
- (BOOL)validateMenuItem:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)displayIfNeeded;
- (void)toggleToolbarShown:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)dealloc;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface MTMBufferedController : NSObject <MTMMailboxControllerProtocol>
{
    NSDictionary *_tableOfContents;
    NSMutableDictionary *_accounts;
    NSDictionary *_preferences;
    MTMMailbox *_rootMailbox;
    NSURL *_mailLibraryURL;
}

@property(readonly) NSURL *mailLibraryURL; // @synthesize mailLibraryURL=_mailLibraryURL;
- (void)tearDown;
- (id)revisionIDForURL:(id)arg1;
- (id)accountForAccountID:(id)arg1;
- (id)messageWithID:(id)arg1;
- (BOOL)_loadTableOfContentsIfNeeded;
- (void)mailboxListWasUpdated:(id)arg1;
- (void)mailboxListWillBeUpdated:(id)arg1;
@property(readonly) NSURL *tocURL;
- (void)loadPreferences:(id *)arg1 accounts:(id *)arg2 toc:(id *)arg3 rootMailbox:(id *)arg4 forLibraryURL:(id)arg5;
- (void)dealloc;
- (id)initWithMailLibraryURL:(id)arg1;

@end

@interface MTMBytesFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MTMFullWindowController : MTMWindowController <NSOutlineViewDelegate, NSSplitViewDelegate, NSTableViewDataSource, NSTableViewDelegate, NSWindowDelegate>
{
    MailSplitView *_verticalSplitView;
    NSView *_mailboxesView;
    MTMOutlineView *_outlineView;
    NSTabView *_mailboxTabView;
    MailSplitView *_splitView;
    ColorBackgroundView *_globalRestoreView;
    NSTableView *_messagesView;
    ColorBackgroundView *_messageBackgroundView;
    QLPreviewView *_previewView;
    MTMScroller *_messageScroller;
    BOOL _messageScrollerSavedDontNotify;
    MTMMessageColumnController *_columnController;
    NSArray *_messageColumnOrder;
    NSDictionary *_messageColumnSizes;
    NSArray *_messageSortDescriptors;
    NSTextFieldCell *_textCell;
    MTMOutlineCell *_mailboxCell;
    NSMutableDictionary *_mailboxesDict;
    BOOL _shouldPreventFirstViewResize;
    BOOL _messageScrollerSavedDontNotifyOnResize;
    BOOL _isActivated;
    NSArray *_expectedSelectedMessageIDs;
    unsigned long long _isUpdatingSelectionFromBackend;
    double _expectedMessageScrollerValue;
    double _currentMessageScrollerValue;
    NSArray *_expectedVisibleSelectedMessageIDs;
    MTMFakeMailbox *_displayedMailbox;
    NSWindow *_topLevelWindow;
    NSView *_emptyView;
    NSView<QLPreviewCustomView> *_genericView;
    NSView *_loadingView;
    NSArrayController *_messagesController;
    NSTreeController *_mailboxesController;
    NSArray *_selectedMailboxIndexPaths;
    NSIndexSet *_selectedMessageIndexes;
}

+ (id)keyPathsForValuesAffectingMailboxTargeted;
+ (id)keyPathsForValuesAffectingPlaceholderString;
+ (id)keyPathsForValuesAffectingDisplayState;
+ (Class)specialMailboxClass;
@property(retain) NSIndexSet *selectedMessageIndexes; // @synthesize selectedMessageIndexes=_selectedMessageIndexes;
@property(retain) NSArray *selectedMailboxIndexPaths; // @synthesize selectedMailboxIndexPaths=_selectedMailboxIndexPaths;
@property(retain, nonatomic) NSTreeController *mailboxesController; // @synthesize mailboxesController=_mailboxesController;
@property(retain, nonatomic) NSArrayController *messagesController; // @synthesize messagesController=_messagesController;
@property(retain, nonatomic) NSView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) NSView<QLPreviewCustomView> *genericView; // @synthesize genericView=_genericView;
@property(retain, nonatomic) NSView *emptyView; // @synthesize emptyView=_emptyView;
@property(retain, nonatomic) NSWindow *topLevelWindow; // @synthesize topLevelWindow=_topLevelWindow;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (double)fadeDuration;
- (void)windowDidResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (double)_maxMailboxesViewWidthAllowed;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
@property(retain, nonatomic) NSArray *messageSortDescriptors;
- (id)_computedMessageSortDescriptors;
@property(retain, nonatomic) NSDictionary *messageColumnSizes;
- (id)_computedMessageColumnSizes;
@property(retain, nonatomic) NSArray *messageColumnOrder;
- (id)_computedMessageColumnOrder;
- (BOOL)isTopLevelItem:(id)arg1;
- (void)configureCell:(id)arg1 forItem:(id)arg2;
- (void)mailboxListWasUpdated:(id)arg1;
- (void)mailboxListWillBeUpdated:(id)arg1;
- (void)scrollerWasMovedByUser:(id)arg1;
- (void)scrollerWillBeMovedByUser:(id)arg1;
- (void)_selectionDidChange;
- (id)urlToMessage;
- (void)setShowChangedItemsOnly:(BOOL)arg1;
- (id)restoreMessagePaths;
- (BOOL)shouldRestoreMailboxPaths;
- (id)selectedMessagePaths;
- (id)selectedMailboxPaths;
- (BOOL)mailboxTargeted;
- (id)_subPlaceholderAttributes;
- (id)_placeholderAttributes;
- (id)placeholderString;
- (void)adjustDisplayStateAfterTimeMachineStarted;
- (void)_flushMessageScrollPosition;
- (void)_updateMessageScrollPosition;
- (void)_tryToUpdateSelectedMessageIDs;
- (void)_flushExpectedMessageIDsSelection;
- (void)_tryToSelectMessages:(id)arg1 selectedMailbox:(id)arg2;
- (void)setDisplayState:(id)arg1;
- (id)displayState;
- (void)_resizeSplitViewToPercentage:(double)arg1;
- (BOOL)setupUIWithDisplayState:(id)arg1;
- (id)windowNibName;
- (void)loadWindow;
- (void)dealloc;
@property(retain) NSIndexSet *selectedMessageIndexesInDisplayedMailbox;
- (void)updateMessageListBindingsWithDisplayedMailbox:(id)arg1 scrollerDelta:(double)arg2;
@property(readonly) MTMFakeMailbox *displayedMailbox;
- (id)selectedMailbox;
- (void)deactivate;
- (void)activate;
- (void)_updatePreviewViewURLIfNecessary;
- (void)removeBindings;
- (void)setupBindings;
- (void)awakeFromNib;

@end

@interface MTMLoadingView : NSView
{
    NSProgressIndicator *_progressIndicator;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;

@end

@interface MTMMailbox : NSObject <MFUIMailbox>
{
    NSDictionary *_mailboxDict;
    NSMutableArray *_subMailboxes;
    NSMutableArray *_messages;
    BOOL _messagesLoaded;
    NSEnumerator *_messageEnumerator;
    BOOL _updatePaused;
    NSMutableArray *_pendingMessages;
    MTMMailbox *_parentMailbox;
    id <MTMMailboxControllerProtocol> _controller;
    NSMutableDictionary *_messageColumnAttributes;
}

+ (id)keyPathsForValuesAffectingType;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (Class)mailboxClassForMailboxDictionary:(id)arg1;
+ (void)setSectionOrder:(id)arg1;
- (unsigned long long)numberOfMessage:(id)arg1;
- (void)discardMailbox;
- (void)resumeMailboxUpdate;
- (void)pauseMailboxUpdate;
- (void)loadNextMessagesWithControllingMailbox:(id)arg1 andFetcher:(id)arg2;
- (void)_updateMessages:(id)arg1;
- (BOOL)needsToLoadMessagesInBackground;
- (id)description;
@property(readonly) NSFont *messageListFont;
@property(readonly) NSColor *messageListColor;
@property(readonly) NSString *subRestoreString;
@property(readonly) NSString *restoreString;
@property(readonly) NSString *defaultMessageColumnAttributesKey;
@property(readonly) NSDictionary *messageColumnAttributes;
- (BOOL)_addAttributesFromInfo:(id)arg1;
@property(readonly) NSString *messageColumnConfiguration;
@property(readonly) NSString *restoreMode;
@property(readonly) NSString *displayMode;
@property(readonly) BOOL canCollapse;
@property(readonly) BOOL showSender;
@property(readonly) NSString *senderTitleString;
@property(readonly) NSString *dateTitleString;
- (long long)compareIndexInOutline:(id)arg1;
- (long long)_compareName:(id)arg1;
- (void)sortSubMailboxes;
@property(readonly) SEL sortSelector;
- (unsigned long long)indexInOutline;
- (id)_messagesFolderPathFromMailboxFolderPath:(id)arg1;
- (void)reloadMessages;
- (id)messageWithIdentifier:(id)arg1;
@property(readonly) NSArray *messages;
- (void)_loadMessages;
- (BOOL)isDescendantOfMailboxWithType:(int)arg1;
- (void)_addSubMailbox:(id)arg1;
- (void)_addSubMailboxesFromDictionaries:(id)arg1;
- (id)_sortedMaiboxDictsForMailboxDicts:(id)arg1;
- (BOOL)_shouldSortMailboxes;
- (BOOL)hasChildren;
- (unsigned long long)numberOfChildren;
- (id)subMailboxWithIdentifier:(id)arg1;
- (id)children;
@property(readonly) NSArray *subMailboxes;
@property(readonly) MTMMailbox *parentMailbox;
- (BOOL)isPlaceholder;
- (BOOL)isSmartMailbox;
- (BOOL)isStore;
- (unsigned long long)displayCount;
- (BOOL)isContainer;
@property(readonly) NSString *displayNameInMessageList;
@property(readonly) NSString *displayNameInTitleBar;
- (id)_severalMessagesFormatString;
- (id)_oneMesageString;
- (id)extendedDisplayName;
@property(readonly) NSString *displayNameForList;
- (id)displayName;
@property(readonly) NSArray *paths;
@property(readonly) NSURL *timeMachineURL;
@property(readonly) NSString *path;
- (id)accountURLString;
- (id)account;
@property(readonly) BOOL enabled;
@property(readonly) BOOL asyncLoading;
@property int type;
@property(readonly) long long backupType;
@property(readonly) id revisionID;
- (id)persistentIdentifier;
@property(readonly) id identifier;
- (id)mailboxWithMailboxPath:(id)arg1;
- (id)mailboxPath;
- (id)mailboxWithIndexPath:(id)arg1;
- (id)indexPathFromMailbox:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1 controller:(id)arg2;
@property(nonatomic) id <MTMMailboxControllerProtocol> controller;

@end

@interface MTMFakeMailbox : MTMMailbox
{
    NSMutableArray *_fakeMessages;
    NSMutableIndexSet *_fakeSelectionIndexes;
}

- (id)selectedMessageIndexes;
- (id)messages;
- (void)dealloc;
- (id)initWithMessageDescriptions:(id)arg1;

@end

@interface MTMMailboxFetcher : NSObject
{
    MTMMailbox *_processingMailbox;
    NSMutableArray *_inactiveMailboxes;
    NSConditionLock *_lock;
    BOOL _threadLaunched;
    MTMMailbox *_loadingMailbox;
}

+ (id)sharedFetcher;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)waitForActiveMailboxToBeLoadedWithTimeOut:(double)arg1;
- (BOOL)shouldContinueFetchingMailbox:(id)arg1;
- (void)_protectedSmartAddMailboxToInactiveMailboxes:(id)arg1;
- (void)stopFetchingInactiveMailbox:(id)arg1;
- (void)startFetchingInactiveMailbox:(id)arg1;
- (void)stopFetchingMailbox:(id)arg1;
- (void)startFetchingMailbox:(id)arg1;
- (void)_workerThread;
- (void)_unlockAndNotify;
- (void)_lockWhenThereIsWorkToDo;
- (void)_lock;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface MTMMessage : NSObject
{
    MTMMailbox *_mailbox;
}

@property MTMMailbox *mailbox; // @synthesize mailbox=_mailbox;
@property(readonly) NSString *displayNameInMessageList;
- (unsigned long long)numberOfMessageInCurrentController;
- (BOOL)messageHasChangedFromSnapshot:(id)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long readFlags;
@property(readonly) unsigned long long messageFlags;
@property(readonly) unsigned long long messageSize;
@property(readonly) NSDate *lastViewedDate;
@property(readonly) NSDate *savedDate;
@property(readonly) NSDate *receivedDate;
@property(readonly) NSDate *sentDate;
@property(readonly) NSString *to;
@property(readonly) NSString *author;
@property(readonly) NSString *subject;
@property(readonly) NSURL *URL;
@property(readonly) NSString *path;
@property(readonly) id revisionID;
@property(readonly) id identifier;
@property(readonly) id identifierForURL;

@end

@interface MTMIndexedMessage : MTMMessage
{
    NSString *_identifier;
    NSDictionary *_attributes;
    NSString *_realPath;
    BOOL _realPathComputed;
    BOOL _hasCachedChange;
    BOOL _cachedChange;
    NSString *_to;
    unsigned long long _messageSize;
    unsigned long long _messageFlags;
    unsigned long long _readFlags;
    NSMutableDictionary *_computedAdditionalProperties;
}

- (void)updateAdditionalPropertiesFromComputedProperties;
- (void)computeAdditionalProperties;
- (BOOL)messageHasChangedFromSnapshot:(id)arg1;
- (unsigned long long)readFlags;
- (unsigned long long)messageFlags;
- (unsigned long long)messageSize;
- (id)to;
- (id)savedDate;
- (id)subject;
- (id)URL;
- (id)path;
- (id)identifier;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 attributes:(id)arg2;

@end

@interface MTMDiskMessage : MTMMessage
{
    id _identifier;
    NSString *_path;
    NSString *_subject;
    NSDate *_sentDate;
    NSDate *_receivedDate;
    NSDate *_lastViewedDate;
    NSString *_author;
    NSString *_to;
    unsigned long long _messageSize;
    unsigned long long _messageFlags;
    unsigned long long _readFlags;
    BOOL _hasCachedChange;
    BOOL _cachedChange;
}

- (BOOL)messageHasChangedFromSnapshot:(id)arg1;
- (unsigned long long)readFlags;
- (unsigned long long)messageFlags;
- (unsigned long long)messageSize;
- (id)lastViewedDate;
- (id)receivedDate;
- (id)sentDate;
- (id)to;
- (id)author;
- (id)subject;
- (id)URL;
- (id)path;
- (id)identifier;
- (id)identifierForURL;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface MTMFakeMessage : MTMMessage
{
    NSDictionary *_messageDescription;
}

- (unsigned long long)readFlags;
- (unsigned long long)messageFlags;
- (id)valueForKey:(id)arg1;
- (void)dealloc;
- (id)initWithDescription:(id)arg1;

@end

@interface _MTMHeaderCell : NSTableHeaderCell
{
}

- (struct CGRect)sortIndicatorRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;

@end

@interface MTMMessageColumnController : NSObject
{
    NSMutableDictionary *_columnConfigurations;
    NSString *_activeConfiguration;
    NSDictionary *_activeAttributes;
    NSTableView *_messageTableView;
    NSArrayController *_messagesController;
}

+ (void)initialize;
@property NSArrayController *messagesController; // @synthesize messagesController=_messagesController;
@property NSTableView *messageTableView; // @synthesize messageTableView=_messageTableView;
@property(retain) NSDictionary *activeAttributes;
- (void)_updateActiveAttributes;
- (id)_tableColumnForSortName:(id)arg1;
@property(retain) NSString *activeConfiguration;
- (void)_updateActiveConfiguration;
- (id)_configDictForConfiguration:(id)arg1;
- (void)_removeAllColumns;
- (id)_tableColumnWithIdentifier:(id)arg1 columnDict:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MTMFlagsCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)imageForFlags:(unsigned long long)arg1;

@end

@interface MTMReadCell : MTMFlagsCell
{
}

- (id)imageForFlags:(unsigned long long)arg1;

@end

@interface MTMNumberCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MTMOutlineCell : NSImageTextFieldCell
{
    BOOL _enabled;
}

@property BOOL enabled; // @synthesize enabled=_enabled;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initImageCell:(id)arg1;

@end

@interface MTMOutlineTopLevelCell : NSTextFieldCell
{
    BOOL _enabled;
}

@end

@interface MTMOutlineView : NSOutlineView
{
    MTMFullWindowController *_windowController;
}

- (BOOL)becomeFirstResponder;
- (void)selectAll:(id)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;

@end

@interface MTMScroller : NSScroller
{
    BOOL _isFakeScroller;
    BOOL _dontNotify;
    id _delegate;
}

@property id delegate; // @synthesize delegate=_delegate;
@property BOOL dontNotify; // @synthesize dontNotify=_dontNotify;
- (void)drawKnob;
@property(nonatomic) BOOL isFakeScroller;
- (void)_notifyPostScrollPositionChanged;
- (void)setDoubleValue:(double)arg1;

@end

@interface MTMSpecialMailbox : MTMMailbox
{
    BOOL _isObserving;
}

+ (Class)specialMailboxClassForMailboxType:(long long)arg1;
+ (Class)rootMailboxClass;
- (id)identifier;
- (id)recoverDisplayName;

@end

@interface _MTMRootMailbox : MTMSpecialMailbox
{
}

- (BOOL)_shouldSortMailboxes;
- (id)subMailboxes;
- (id)messages;

@end

@interface _MTMAccountMailbox : MTMSpecialMailbox
{
}

- (id)identifier;
- (id)subRestoreString;
- (id)restoreString;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMMetaMailbox : MTMSpecialMailbox
{
}

- (BOOL)_shouldSortMailboxes;
- (id)subRestoreString;
- (id)restoreString;
- (id)paths;
- (void)loadNextMessagesWithControllingMailbox:(id)arg1 andFetcher:(id)arg2;
- (BOOL)needsToLoadMessagesInBackground;
- (void)_loadMessages;
- (void)discardMailbox;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateMessages:(id)arg1;

@end

@interface _MTMStoredMetaMailbox : MTMSpecialMailbox
{
}

- (BOOL)_shouldSortMailboxes;
- (id)restoreString;
- (id)paths;
- (void)loadNextMessagesWithControllingMailbox:(id)arg1 andFetcher:(id)arg2;
- (void)_updateMessages:(id)arg1;
- (void)_loadMessages;

@end

@interface _MTMSubMetaMailbox : MTMSpecialMailbox
{
}

- (id)messageListFont;
- (id)messageListColor;
- (id)_severalMessagesString;
- (id)_oneMesageString;
- (id)displayNameInMessageList;
- (id)displayNameForList;
- (id)defaultMessageColumnAttributesKey;
- (id)messageColumnConfiguration;
- (id)restoreString;
- (id)restoreMode;
- (id)identifier;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMDisabledSubMetaMailbox : _MTMSubMetaMailbox
{
}

- (BOOL)enabled;

@end

@interface _MTMStoredSubMetaMailbox : _MTMSubMetaMailbox
{
}

- (void)loadNextMessagesWithControllingMailbox:(id)arg1 andFetcher:(id)arg2;
- (void)_updateMessages:(id)arg1;
- (void)_loadMessages;

@end

@interface _MTMInboxMailbox : _MTMMetaMailbox
{
}

- (id)restoreString;
- (id)recoverDisplayName;
- (id)defaultMessageColumnAttributesKey;
- (id)displayName;

@end

@interface _MTMDraftsMailbox : _MTMStoredMetaMailbox
{
}

- (id)_severalMessagesString;
- (id)_oneMesageString;
- (id)defaultMessageColumnAttributesKey;
- (id)messageColumnConfiguration;
- (id)restoreMode;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMSentMailbox : _MTMMetaMailbox
{
}

- (id)defaultMessageColumnAttributesKey;
- (id)messageColumnConfiguration;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMTrashMailbox : _MTMMetaMailbox
{
}

- (id)defaultMessageColumnAttributesKey;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMArchiveMailbox : _MTMMetaMailbox
{
}

- (id)defaultMessageColumnAttributesKey;
- (id)recoverDisplayName;
- (id)displayName;

@end

@interface _MTMJunkMailbox : MTMSpecialMailbox
{
}

- (BOOL)enabled;
- (id)defaultMessageColumnAttributesKey;
- (id)displayName;

@end

@interface _MTMBackupMailbox : MTMSpecialMailbox
{
}

@end

@interface _MTMSmartMailbox : MTMSpecialMailbox
{
}

- (BOOL)isSmartMailbox;
- (BOOL)enabled;
- (id)messageColumnConfiguration;
- (id)identifier;

@end

@interface _MTMSectionMailbox : MTMSpecialMailbox
{
}

- (BOOL)canCollapse;
- (id)displayName;

@end

@interface MTMTableView : NSTableView
{
    NSArrayController *_messagesController;
}

@property(retain, nonatomic) NSArrayController *messagesController; // @synthesize messagesController=_messagesController;
- (void)dealloc;

@end

@interface MTMWindow : NSWindow
{
}

- (double)animationResizeTime:(struct CGRect)arg1;

@end

@interface MTMMessageChangedPredicate : NSPredicate
{
}

+ (id)messageChangedPredicate;
- (BOOL)evaluateWithObject:(id)arg1;

@end

@interface MTMMailboxChangedPredicate : NSPredicate
{
}

+ (id)mailboxChangedPredicate;
- (BOOL)evaluateWithObject:(id)arg1;

@end

@interface MTMWindowController : NSWindowController <MTMMailboxControllerProtocol>
{
    MTMMailbox *_rootMailbox;
    BOOL _activated;
    BOOL _bindingsAreSet;
    MailToolbar *_toolbar;
    NSView *_pinView;
    StarFieldController *_controller;
    NSURL *_mailLibraryURL;
    NSURL *_focusURL;
    NSDictionary *_toolbarItems;
    NSMutableDictionary *_accounts;
    NSDictionary *_preferences;
    NSDictionary *_tableOfContents;
    BOOL _updatingToolbar;
}

+ (void)loadPreferences:(id *)arg1 accounts:(id *)arg2 toc:(id *)arg3 rootMailbox:(id *)arg4 forLibraryURL:(id)arg5;
+ (BOOL)_loadTableOfContents:(id *)arg1 forLibraryURL:(id)arg2;
+ (id)focusURLInCurrentSnapshotForFocusURL:(id)arg1;
+ (id)baseLibraryURLFromMailLibraryURL:(id)arg1;
+ (id)mailLibraryURLFromFocusURL:(id)arg1;
+ (Class)specialMailboxClass;
@property(readonly) BOOL activated; // @synthesize activated=_activated;
- (long long)compare:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)restore:(id)arg1;
@property(readonly) double fadeDuration;
@property BOOL showChangedItemsOnly;
@property(readonly) NSArray *restoreMessagePaths;
@property(readonly) NSArray *restoreMailboxPaths;
@property(readonly) BOOL shouldRestoreMailboxPaths;
@property(readonly) NSArray *selectedMessagePaths;
@property(readonly) NSArray *selectedMailboxPaths;
@property(readonly) MTMMailbox *selectedMailbox;
@property(readonly) BOOL mailboxTargeted;
- (void)mailboxListWasUpdated:(id)arg1;
- (void)mailboxListWillBeUpdated:(id)arg1;
- (void)updateThumbnailAndGenericThumbnailIfNecessary;
@property(readonly) NSAttributedString *placeholderString;
- (void)updateThumbnailAsGenericWindow;
- (void)updateThumbnail;
- (id)revisionIDForURL:(id)arg1;
- (void)adjustDisplayStateAfterTimeMachineStarted;
@property(copy) NSDictionary *displayState;
- (id)accountForAccountID:(id)arg1;
- (void)_setupToolbarWithConfigurationDictionary:(id)arg1;
- (id)messageWithID:(id)arg1;
- (BOOL)_loadTableOfContentsIfNeeded;
@property(readonly) MTMMailbox *rootMailbox;
@property(readonly) NSArray *mailboxes;
@property(readonly) NSDictionary *preferences;
@property(readonly) NSURL *mailLibraryURL;
@property(readonly) NSURL *tocURL;
@property(retain) NSURL *focusURL;
- (void)_updateTimeMachineTargetIfNecessary;
@property(readonly) StarFieldController *controller;
- (void)deactivate;
- (void)activate;
- (BOOL)setupUIWithDisplayState:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)removeBindings;
- (void)setupBindings;
- (id)initWithFocusURL:(id)arg1 bufferedController:(id)arg2 controller:(id)arg3;
- (id)initWithFocusURL:(id)arg1 controller:(id)arg2;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;

@end

@interface MultiImageCell : NSImageCell
{
    NSMutableArray *_images;
    NSMutableArray *_subcells;
    id _accessibilityValue;
}

- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)setImageScaling:(unsigned long long)arg1;
- (void)setImageAlignment:(unsigned long long)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)calcDrawInfo:(struct CGRect)arg1;
- (id)_firstImageName;
- (long long)compare:(id)arg1;
- (id)stringValue;
- (void)_addSubcellsWithImages:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setTitle:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setUsesSingleLineMode:(BOOL)arg1;
- (void)setTruncatesLastVisibleLine:(BOOL)arg1;
- (void)setLineBreakMode:(unsigned long long)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setControlTint:(unsigned long long)arg1;
- (void)setFont:(id)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setSelectable:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setControlView:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_multiImageCellCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)init;

@end

@interface MVComposeAccessoryViewOwner : NSObject
{
}

+ (id)composeAccessoryViewOwner;
- (BOOL)messageWillBeSaved:(id)arg1;

@end

@interface MVMailBundle : NSObject
{
}

+ (id)composeAccessoryViewOwnerClassName;
+ (BOOL)hasComposeAccessoryViewOwner;
+ (id)preferencesPanelName;
+ (id)preferencesOwnerClassName;
+ (BOOL)hasPreferencesPanel;
+ (id)sharedInstance;
+ (void)registerBundle;
+ (id)composeAccessoryViewOwners;
+ (id)allBundles;
- (void)dealloc;

@end

@interface NetscapeEmailImporter : FilesystemEmailImporter
{
}

+ (id)explanatoryText;
+ (id)name;
- (char *)fromString;
- (id)pathExtensions;

@end

@interface NewDeliveryFailure : NSObject <AccountStatusDataSourceDelegate>
{
    AccountStatusDataSource *_deliveryAccountStatusDataSource;
    MCError *_error;
    ComposeViewController *_composeViewController;
    NSPanel *_panel;
    NSTextField *_errorLabel;
    NSTextField *_errorDescriptionLabel;
    NSView *_contents;
    NSTableView *_table;
    NSButton *_tryLaterButton;
    NSButton *_tryOtherButton;
}

@property(nonatomic) NSButton *tryOtherButton; // @synthesize tryOtherButton=_tryOtherButton;
@property(nonatomic) NSButton *tryLaterButton; // @synthesize tryLaterButton=_tryLaterButton;
@property(nonatomic) NSTableView *table; // @synthesize table=_table;
@property(nonatomic) NSView *contents; // @synthesize contents=_contents;
@property(nonatomic) NSTextField *errorDescriptionLabel; // @synthesize errorDescriptionLabel=_errorDescriptionLabel;
@property(nonatomic) NSTextField *errorLabel; // @synthesize errorLabel=_errorLabel;
@property(retain, nonatomic) NSPanel *panel; // @synthesize panel=_panel;
@property(nonatomic) ComposeViewController *composeViewController; // @synthesize composeViewController=_composeViewController;
- (void)_retile;
- (void)_tile;
- (void)_postDeliveryFailureHappened;
- (void)_deliveryAccountsDidChange:(id)arg1;
- (void)_selectedAccountDidChangeTo:(id)arg1;
- (id)_setDynamicDeliveryAccountForAccount:(id)arg1;
- (void)editServerList:(id)arg1;
- (void)tryOtherAccount:(id)arg1;
- (void)editMessage:(id)arg1;
- (void)sendLater:(id)arg1;
- (void)_runChooseAlternateDeliveryAccountSheet;
- (void)reportError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)initWithComposeViewController:(id)arg1;

@end

@interface NoSelectionPlaceholderView : NSView
{
}

- (BOOL)isOpaque;
- (void)_noSelectionPlaceholderViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MailToolbar : NSToolbar
{
    unsigned long long _previousDisplayMode;
    long long _temporaryItemTag;
    BOOL _stateIsTemporary;
    BOOL _previousVisible;
    BOOL _neverShowsBaselineSeparator;
    BOOL _frozen;
}

+ (void)upgradeToolbarWithIdentifier:(id)arg1 toDisplayMode:(unsigned long long)arg2;
+ (void)upgradeToolbarWithIdentifier:(id)arg1 usingBlock:(id)arg2;
+ (id)_plistForToolbarWithIdentifier:(id)arg1;
- (void)validateVisibleItems;
- (void)unfreeze;
- (void)freeze;
- (void)setNeverShowsBaselineSeparator:(BOOL)arg1;
- (void)setShowsBaselineSeparator:(BOOL)arg1;
- (BOOL)showsBaselineSeparator;
- (void)removeItemAtIndex:(long long)arg1;
- (void)insertItemWithItemIdentifier:(id)arg1 atIndex:(long long)arg2;
- (void)setVisible:(BOOL)arg1;
- (void)setDisplayMode:(unsigned long long)arg1;
- (void)revertTemporaryStateIfAny;
- (void)setTemporaryDisplayMode:(unsigned long long)arg1 visible:(BOOL)arg2 requiredItemTag:(long long)arg3 identifier:(id)arg4;
- (id)_customMetrics;
- (BOOL)_allowsSizeMode:(unsigned long long)arg1;

@end

@interface MailToolbarBaselineView : NSView
{
}

- (void)_mainStatusDidChange:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface OofPanelController : NSObject <AccountInfoTabOwner, NSDatePickerCellDelegate>
{
    NSButton *_oofEnabledCheckbox;
    NSButton *_okButton;
    NSProgressIndicator *_getOofSettingsIndicator;
    NSPopUpButton *_scheduleMenu;
    NSDatePicker *_startTimePicker;
    NSDatePicker *_endTimePicker;
    ColorBackgroundView *_internalWebViewBackground;
    ColorBackgroundView *_externalWebViewBackground;
    WebView *_internalWebView;
    WebView *_externalWebView;
    EditingWebMessageController *_internalController;
    EditingWebMessageController *_externalController;
    NSView *_view;
    MFEWSAccount *_account;
    NSDate *_startTime;
    NSDate *_endTime;
}

@property(retain) NSDate *endTime; // @synthesize endTime=_endTime;
@property(retain) NSDate *startTime; // @synthesize startTime=_startTime;
@property(retain) MFEWSAccount *account; // @synthesize account=_account;
@property(retain, nonatomic) NSView *view; // @synthesize view=_view;
- (void)datePickerCell:(id)arg1 validateProposedDateValue:(id *)arg2 timeInterval:(double *)arg3;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)accountInfoWillShowView:(id)arg1;
- (void)accountInfoWillHideView:(id)arg1;
- (void)_updateWebView:(id)arg1 content:(id)arg2;
- (void)_setEnabledForInterfaceElements:(BOOL)arg1;
- (void)_handleOutOfOfficeSettings:(id)arg1;
- (void)showOutOfOfficeSettings;
- (void)scheduleMenuChanged:(id)arg1;
- (void)toggleOofEnabled:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)initWithAccount:(id)arg1;

@end

@interface OptionalView : NSView
{
    BOOL _isResizing;
    NSView *_primaryView;
    NSButton *_optionSwitch;
    NSTextField *_label;
    struct CGRect _originalFrame;
}

@property(nonatomic) struct CGRect originalFrame; // @synthesize originalFrame=_originalFrame;
@property(nonatomic) NSTextField *label; // @synthesize label=_label;
@property(nonatomic) NSButton *optionSwitch; // @synthesize optionSwitch=_optionSwitch;
@property(nonatomic) NSView *primaryView; // @synthesize primaryView=_primaryView;
- (double)widthOffsetIncludingOptionSwitch:(BOOL)arg1;
- (double)widthIncludingOptionSwitch:(BOOL)arg1;
- (void)sizeToFit;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_subviewFrameDidChange:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface OutlineViewProgressIndicatorsController : NSObject
{
    NSOutlineView *_outlineView;
    NSMutableDictionary *_progressIndicators;
    NSMutableDictionary *_fractionsDone;
    NSMutableDictionary *_origins;
    NSMutableDictionary *_roundDeterminateColors;
    NSMutableSet *_scheduledUpdates;
    NSMutableSet *_scheduledRemovals;
    BOOL _updateScheduled;
}

- (void)_removeProgressIndicatorForKey:(id)arg1;
- (void)_updateProgressIndicatorForKey:(id)arg1;
- (void)_processUpdates;
- (void)_scheduleUpdate;
- (void)_setNeedsToRemoveProgressIndicatorForKey:(id)arg1;
- (void)_setNeedsToUpdateProgressIndicatorForKey:(id)arg1;
- (id)_progressIndicatorForKey:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_itemForKey:(id)arg1;
- (id)_keyForItem:(id)arg1;
- (void)setRoundDeterminateColor:(id)arg1 forProgressIndicatorForItem:(id)arg2;
- (void)positionProgressIndicatorForItem:(id)arg1 inRect:(struct CGRect)arg2;
- (void)removeOrphanProgressIndicators;
- (void)removeProgressIndicatorForItem:(id)arg1;
- (void)showDeterminateProgressIndicatorForItem:(id)arg1 fractionDone:(double)arg2;
- (void)showIndeterminateProgressIndicatorForItem:(id)arg1;
- (void)dealloc;
- (id)initWithOutlineView:(id)arg1;
- (id)init;

@end

@interface ParentBannerViewController : BannerViewController
{
    NSMutableArray *_requestedAddresses;
    BOOL _requestIsForSenders;
    BannerImageView *_icon;
    NSTextField *_messageField;
    NSButton *_helpButton;
    NSButton *_respondButton;
    NSString *_childAddress;
    long long _permissionRequestState;
}

@property(nonatomic) long long permissionRequestState; // @synthesize permissionRequestState=_permissionRequestState;
@property(nonatomic) NSString *childAddress; // @synthesize childAddress=_childAddress;
@property(nonatomic) BOOL requestIsForSenders; // @synthesize requestIsForSenders=_requestIsForSenders;
@property(nonatomic) NSButton *respondButton; // @synthesize respondButton=_respondButton;
@property(nonatomic) NSButton *helpButton; // @synthesize helpButton=_helpButton;
@property(nonatomic) NSTextField *messageField; // @synthesize messageField=_messageField;
@property(nonatomic) BannerImageView *icon; // @synthesize icon=_icon;
- (void)rejectChildRequest:(id)arg1;
- (void)approveChildRequest:(id)arg1;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (id)backgroundColor;
- (void)dealloc;
- (id)initWithBannerContainerViewController:(id)arg1;
- (id)nibName;

@end

@interface PassbookBannerViewController : LoadImagesBannerViewController
{
    NSTextField *_messageField;
    GlassButton *_viewPassButton;
    NSMutableArray *_passes;
}

@property(retain, nonatomic) NSMutableArray *passes; // @synthesize passes=_passes;
@property(nonatomic) GlassButton *viewPassButton; // @synthesize viewPassButton=_viewPassButton;
@property(nonatomic) NSTextField *messageField; // @synthesize messageField=_messageField;
- (void)showPasses:(id)arg1;
- (void)updateBannerContents;
- (void)updateWantsDisplay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (void)setWantsDisplay:(BOOL)arg1;
- (void)setView:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)awakeFromNib;
- (BOOL)shouldDisplayToLoadImages;
- (CDStruct_3c058996)iconAlignmentRectInsets;
- (id)backgroundColor;
- (void)dealloc;
- (id)initWithBannerContainerViewController:(id)arg1;
- (id)nibName;

// Remaining properties
@property(nonatomic) BOOL loaded;

@end

@interface PasswordManager : NSObject
{
    IAPasswordUIController *_passwordController;
    NSMutableArray *_pendingAccounts;
    NSMutableSet *_suppressedAccounts;
    long long _lastUserResponse;
    NSCondition *_passwordChanged;
}

+ (void)resetSuppressedAccount:(id)arg1;
+ (void)resetSuppressedAccounts;
+ (BOOL)isShowingPasswordUI;
+ (BOOL)promptForPassword:(id)arg1;
+ (id)_passwordManagerInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_accountsChanged:(id)arg1;
- (void)_accountChanged:(id)arg1;
- (void)_mainWindowChanged:(id)arg1;
- (BOOL)_waitForPasswordCompletion:(id)arg1;
- (BOOL)_isSuppressedAccount:(id)arg1;
- (void)_resetSuppressedAccount:(id)arg1;
- (void)_resetAllSuppressedAccounts;
- (void)_displayPasswordSheetIfNeeded;
- (BOOL)_displayPasswordSheetForAccount:(id)arg1;
@property(retain) IAPasswordUIController *passwordController;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface PhotoExporter : GenericAttachmentFetcher
{
}

+ (void)exportPhotoAttachments:(id)arg1;
+ (BOOL)isPhotoAttachment:(id)arg1;
- (void)downloadedAllAttachments;
- (void)_exportAttachments:(id)arg1;

@end

@interface POPAccountDetails : AccountDetails
{
    NSButton *_deleteMessagesOnServer;
    NSTextField *_bigMessageWarningSize;
    NSButton *_removeSeenMessagesButton;
    NSPopUpButton *_removeIntervalPopup;
}

- (void)_deleteServerMessagesStarted:(id)arg1;
- (void)_deleteServerMessagesCompleted:(id)arg1;
- (void)removeMessagesButtonClicked:(id)arg1;
- (void)deleteSeenMessagesNow:(id)arg1;
- (void)warnIfDeleteMessages:(id)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (void)setupAccountFromValuesInUI:(id)arg1 forValidation:(BOOL)arg2;
- (long long)_popDeletionPolicyFromUI;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;
- (void)dealloc;
- (id)initWithAccountClass:(Class)arg1;

@end

@interface POPAccountSpecialMailboxes : SpecialMailboxes
{
    NSButton *_trashCheckbox;
    BOOL _moveDeletedMessagesToTrash;
}

@property(nonatomic) BOOL moveDeletedMessagesToTrash; // @synthesize moveDeletedMessagesToTrash=_moveDeletedMessagesToTrash;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (BOOL)setupAccountFromValuesInUI:(id)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;
- (id)init;

@end

@interface POPQuota : Quota <NSTableViewDataSource, NSTableViewDelegate>
{
    NSPopUpButton *_showMessagesPopup;
    NSButton *_deleteButton;
    NSMutableAttributedString *_truncatedString;
    NSMutableDictionary *_truncatedParagraphStyle;
    struct QuotaSimpleSortDescriptor _simpleSortDescs[5];
    NSMutableArray *_messageIDs;
}

- (void)_deleteServerMessagesCompleted:(id)arg1;
- (void)_deleteServerMessagesStarted:(id)arg1;
- (BOOL)_updateMessage:(id)arg1;
- (long long)_addMessage:(id)arg1;
- (void)_resortMessages;
- (void)_syncSortDescriptors;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_truncatedAttributedStringForString:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (const struct QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSortDescriptors;
- (void)engineUpdated:(id)arg1;
- (void)engineDidFinish;
- (void)engineDidStart;
- (id)_account;
- (void)showMessagesPopupChanged:(id)arg1;
- (void)_updateUsageField;
- (id)_filterMessages:(id)arg1 showMessageType:(long long)arg2;
- (BOOL)_shouldShowMessage:(id)arg1 showMessageType:(long long)arg2;
- (void)deleteFromServer:(id)arg1;
- (Class)engineClass;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithAccount:(id)arg1;

@end

@interface PowerManager : NSObject
{
    NSObject<OS_dispatch_source> *_fetchCheckPointTimer;
    struct __IOPMConnection *_connection;
    unsigned int _powerAssertion;
    BOOL _registeredForSleepServices;
    id _powerSourceLock;
    struct __CFRunLoopSource *_powerSourceRunLoopSource;
    BOOL _alreadyHeldPowerAssertionThisDarkWake;
    BOOL _shouldLogPowerEvents;
    NSOperationQueue *_workQueue;
    long long _currentPowerState;
    long long _previousPowerState;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) BOOL shouldLogPowerEvents; // @synthesize shouldLogPowerEvents=_shouldLogPowerEvents;
@property BOOL alreadyHeldPowerAssertionThisDarkWake; // @synthesize alreadyHeldPowerAssertionThisDarkWake=_alreadyHeldPowerAssertionThisDarkWake;
@property long long previousPowerState; // @synthesize previousPowerState=_previousPowerState;
@property long long currentPowerState; // @synthesize currentPowerState=_currentPowerState;
@property(readonly, nonatomic) NSOperationQueue *workQueue; // @synthesize workQueue=_workQueue;
- (void)_fetchCheckPointTimerFired;
- (void)_stopFetchCheckPointTimer;
- (void)_startFetchCheckPointTimer;
- (void)_accountBecameReachable:(id)arg1;
- (void)_networkConfigurationChanged:(id)arg1;
- (void)_releasePowerAssertion;
- (void)_holdPowerAssertion;
- (void)_systemFullWoke;
- (void)_systemDarkWoke;
- (void)_systemWillSleep;
- (void)_mailAccountsDidChange:(id)arg1;
- (void)_autoFetchFrequencyChanged:(id)arg1;
- (BOOL)_atLeastOneActiveAccountIsIncludedInAutoFetch;
- (BOOL)_atLeastOneActiveAccountIsUsingIDLE;
- (BOOL)_shouldRegisterForSleepServices;
- (void)_registerForSleepServices:(BOOL)arg1;
- (void)registerForPowerEvents;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface PrintingHTMLGenerator : NSObject
{
    NSMutableString *_headerTableHTML;
    NSString *_senderImageHTML;
    BOOL _shouldCollapseRedundantText;
    ConversationMember *_conversationMember;
    MessageWebDocumentView *_webDocumentView;
    NSImage *_senderImage;
    PrintingHTMLGenerator *_activeGenerator;
}

@property(retain, nonatomic) PrintingHTMLGenerator *activeGenerator; // @synthesize activeGenerator=_activeGenerator;
@property(retain, nonatomic) NSImage *senderImage; // @synthesize senderImage=_senderImage;
@property(nonatomic) BOOL shouldCollapseRedundantText; // @synthesize shouldCollapseRedundantText=_shouldCollapseRedundantText;
@property(nonatomic) MessageWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(nonatomic) ConversationMember *conversationMember; // @synthesize conversationMember=_conversationMember;
- (id)_newHTMLAddressStringsFromAddressList:(id)arg1;
@property(readonly, nonatomic) NSString *senderImageHTML;
@property(readonly, nonatomic) NSString *headerTableHTML;
- (id)_newPrintHTMLUsingPrintingData:(id)arg1 base64EncodedDisplayHTML:(id)arg2;
- (id)_javascriptForPrintingData;
- (void)asyncLoadPrintingHTML:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithConversationMember:(id)arg1 webDocumentView:(id)arg2 shouldCollapseRedundantText:(BOOL)arg3;

@end

@interface PrintingHTMLPrinter : NSObject <NSWindowDelegate>
{
    BOOL _hasPrinted;
    NSString *_printingHTML;
    NSMutableArray *_attachments;
    NSPrintInfo *_printInfo;
    NSString *_jobTitle;
    MUIWebDocumentView *_printView;
    PrintingHTMLPrinter *_activePrinter;
    id _finishedPrintingCompletionBlock;
}

@property(copy, nonatomic) id finishedPrintingCompletionBlock; // @synthesize finishedPrintingCompletionBlock=_finishedPrintingCompletionBlock;
@property(retain, nonatomic) PrintingHTMLPrinter *activePrinter; // @synthesize activePrinter=_activePrinter;
@property(nonatomic) BOOL hasPrinted; // @synthesize hasPrinted=_hasPrinted;
@property(retain, nonatomic) MUIWebDocumentView *printView; // @synthesize printView=_printView;
@property(retain, nonatomic) NSString *jobTitle; // @synthesize jobTitle=_jobTitle;
@property(retain, nonatomic) NSPrintInfo *printInfo; // @synthesize printInfo=_printInfo;
@property(retain, nonatomic) NSMutableArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) NSString *printingHTML; // @synthesize printingHTML=_printingHTML;
- (void)printOperationDidRun:(id)arg1 success:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)_runPrintOperation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)run:(id)arg1;
- (void)dealloc;
- (id)initWithPrintingHTML:(id)arg1 attachments:(id)arg2 printInfo:(id)arg3 jobTitle:(id)arg4;

@end

@interface PrintingManager : NSObject
{
    BOOL _wasCancelled;
    MessageSelection *_selection;
    MessageWebDocumentView *_webDocumentView;
    PrintingManager *_activeDispatcher;
    PrintingProgressPanelWindowController *_progressPanelController;
    double _progressMaxValue;
    double _progressValue;
    double _progressIncrement;
}

+ (void)exportSelectionAsPDF:(id)arg1;
+ (void)printSelection:(id)arg1;
@property(nonatomic) double progressIncrement; // @synthesize progressIncrement=_progressIncrement;
@property double progressValue; // @synthesize progressValue=_progressValue;
@property(nonatomic) double progressMaxValue; // @synthesize progressMaxValue=_progressMaxValue;
@property(retain, nonatomic) PrintingProgressPanelWindowController *progressPanelController; // @synthesize progressPanelController=_progressPanelController;
@property(retain, nonatomic) PrintingManager *activeDispatcher; // @synthesize activeDispatcher=_activeDispatcher;
@property(nonatomic) BOOL wasCancelled; // @synthesize wasCancelled=_wasCancelled;
@property(retain, nonatomic) MessageWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
@property(retain, nonatomic) MessageSelection *selection; // @synthesize selection=_selection;
- (void)_showProgressPanel;
@property(readonly, nonatomic) NSString *progressMessage;
- (void)_generatePrintingHTMLForEnumeratedConversationMembers:(id)arg1 HTMLStorage:(id)arg2 attachmentStorage:(id)arg3 completionHandler:(id)arg4;
- (void)dispatch;
- (void)dealloc;
- (id)initWithSelection:(id)arg1;

@end

@interface _ExportJob : NSObject
{
    BOOL _shouldCollapseRedundantText;
    NSArray *_conversationMembers;
    NSMutableArray *_printingHTMLs;
    NSMutableArray *_attachments;
    NSString *_jobTitle;
    NSPrintInfo *_printInfo;
    unsigned long long _sequenceNumber;
}

@property(nonatomic) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) NSPrintInfo *printInfo; // @synthesize printInfo=_printInfo;
@property(retain, nonatomic) NSString *jobTitle; // @synthesize jobTitle=_jobTitle;
@property(retain, nonatomic) NSMutableArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) NSMutableArray *printingHTMLs; // @synthesize printingHTMLs=_printingHTMLs;
@property(nonatomic) BOOL shouldCollapseRedundantText; // @synthesize shouldCollapseRedundantText=_shouldCollapseRedundantText;
@property(retain, nonatomic) NSArray *conversationMembers; // @synthesize conversationMembers=_conversationMembers;
- (void)dealloc;
- (id)init;

@end

@interface PrintingManagerForExportAsPDF : PrintingManager
{
    NSMutableArray *_exportJobs;
    NSPDFInfo *_pdfInfo;
    unsigned long long _numberOfConversationsNotYetLoaded;
}

@property(nonatomic) unsigned long long numberOfConversationsNotYetLoaded; // @synthesize numberOfConversationsNotYetLoaded=_numberOfConversationsNotYetLoaded;
@property(retain, nonatomic) NSPDFInfo *pdfInfo; // @synthesize pdfInfo=_pdfInfo;
@property(retain, nonatomic) NSMutableArray *exportJobs; // @synthesize exportJobs=_exportJobs;
- (void)_generateJobTitleAndPrintInfoForExportJob:(id)arg1;
- (void)_getSaveURLFromUser:(id)arg1;
- (void)_runEnumeratedExportJobs:(id)arg1;
- (void)_generatePrintingHTMLForEnumeratedExportJobs:(id)arg1;
- (void)_generatePrintingHTMLIfAllConversationMembersAreLoaded;
- (void)dispatch;
- (id)progressMessage;
- (void)dealloc;

@end

@interface PrintingManagerForPrinting : PrintingManager
{
    NSMutableArray *_arraysOfConversationMembersToGenerateHTMLFor;
    unsigned long long _numberOfConversationsNotYetLoaded;
}

@property(nonatomic) unsigned long long numberOfConversationsNotYetLoaded; // @synthesize numberOfConversationsNotYetLoaded=_numberOfConversationsNotYetLoaded;
@property(retain, nonatomic) NSMutableArray *arraysOfConversationMembersToGenerateHTMLFor; // @synthesize arraysOfConversationMembersToGenerateHTMLFor=_arraysOfConversationMembersToGenerateHTMLFor;
- (void)_printIfAllNecessaryConversationMembersHaveBeenLoaded;
- (void)dispatch;
- (id)progressMessage;
- (void)dealloc;

@end

@interface PrintingProgressPanelWindowController : NSWindowController
{
    NSProgressIndicator *_progressIndicator;
    NSTextField *_progressText;
    NSButton *_cancelButton;
}

@property(nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(nonatomic) NSTextField *progressText; // @synthesize progressText=_progressText;
@property(nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (void)cancel:(id)arg1;
- (void)awakeFromNib;
- (id)windowNibName;

@end

@interface ProgressIndicatorCell : NSImageCell
{
    NSProgressIndicator *_progressIndicator;
}

- (void)dealloc;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setProgressIndicator:(id)arg1;

@end

@interface QuickTimeAttachmentView : QTMovieView
{
    MFAttachmentViewController *_attachmentViewController;
}

+ (id)viewForAttachmentViewController:(id)arg1;
+ (void)initialize;
@property MFAttachmentViewController *attachmentViewController; // @synthesize attachmentViewController=_attachmentViewController;
- (void)scrollWheel:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (BOOL)shouldDisplayInline;
- (id)menuForEvent:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (struct CGSize)desiredSizeWithMaximumWidth:(double)arg1;
- (struct CGSize)naturalSize;
- (BOOL)performKeyEquivalent:(id)arg1;

@end

@interface Quota : NSObject <AccountInfoTabOwner>
{
    NSTableView *_quotaTable;
    NSTextField *_usageField;
    NSTimer *_statusTimer;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_progressField;
    NSView *_view;
    MFSizeEngine *_sizeEngine;
    id _compareUsingDescriptors;
}

+ (id)quotaForMailAccount:(id)arg1;
@property(readonly, nonatomic) id compareUsingDescriptors; // @synthesize compareUsingDescriptors=_compareUsingDescriptors;
@property(retain, nonatomic) MFSizeEngine *sizeEngine; // @synthesize sizeEngine=_sizeEngine;
@property(retain, nonatomic) NSView *view; // @synthesize view=_view;
- (void)accountInfoWillShowView:(id)arg1;
- (void)accountInfoWillHideView:(id)arg1;
- (const struct QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSortDescriptors;
- (void)engineUpdated:(id)arg1;
- (void)_stopProgress:(id)arg1;
- (void)_updateProgress:(id)arg1;
- (void)updateProgress:(id)arg1;
- (void)engineDidFinish;
- (void)engineDidStart;
- (void)_accountOfflineStatusDidChange:(id)arg1;
- (Class)engineClass;
- (void)dealloc;
- (id)init;
- (id)initWithAccount:(id)arg1;

@end

@interface QuotaBar : NSView
{
    NSLevelIndicator *_levelIndicator;
}

- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)drawRect:(struct CGRect)arg1;
- (void)setQuotaUsed:(unsigned long long)arg1 limit:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_labelFont;

@end

@interface RedundantContentIdentificationManager : NSObject
{
    NSOperationQueue *_workQueue;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain) NSOperationQueue *workQueue; // @synthesize workQueue=_workQueue;
- (id)_messageWithMessageIDHeaderString:(id)arg1 inConversation:(id)arg2;
- (id)mostRecentAncestorForRedundantTextComparisonForMessage:(id)arg1 inConversation:(id)arg2;
- (id)redundantContentMarkupForMessage:(id)arg1 inConversation:(id)arg2;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface RemoteStoreAccountSpecialMailboxes : SpecialMailboxes
{
    NSButton *_keepDraftsOnServer;
    NSButton *_keepSentMessagesOnServer;
    NSButton *_keepTrashOnServer;
    NSButton *_keepJunkOnServer;
}

- (void)setUIElementsEnabled:(BOOL)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (BOOL)setupAccountFromValuesInUI:(id)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;

@end

@interface RemoteStoreQuota : Quota <NSTableViewDataSource, NSTableViewDelegate>
{
    NSMutableArray *_mailboxes;
    NSButton *_showMessagesButton;
    struct QuotaSimpleSortDescriptor _simpleSortDescs[3];
}

- (void)resortMailboxes;
- (void)syncSortDescriptors;
- (const struct QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSortDescriptors;
- (id)_iconForMailbox:(id)arg1;
- (BOOL)tableShouldIncludeMailbox:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)showMessages:(id)arg1;
- (void)engineUpdated:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface RichMessageListSortView : NSView
{
    _SortBarButton *_sortButton;
    id <RichMessageListSortViewProtocol> _delegate;
    NSLayoutConstraint *_heightConstraint;
    CALayer *_dividerLayer;
}

+ (id)_dividerColor;
+ (id)_backgroundColor;
@property(retain, nonatomic) CALayer *dividerLayer; // @synthesize dividerLayer=_dividerLayer;
@property(nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(nonatomic) id <RichMessageListSortViewProtocol> delegate; // @synthesize delegate=_delegate;
- (void)mouseDown:(id)arg1;
- (id)makeBackingLayer;
- (void)updateLayer;
- (void)setSortTitle:(id)arg1;
- (void)setShowsSortButton:(BOOL)arg1;
- (void)dealloc;
- (void)adjustHeight;
- (unsigned long long)controlSize;
- (BOOL)wantsUpdateLayer;

@end

@interface _SortBarButtonCell : NSButtonCell
{
    NSPopUpButtonCell *_popUpCell;
    BOOL _showingPopUpMenu;
}

- (void)accessibilityPerformShowMenuAction;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)runPopUpInView:(id)arg1;
- (void)showPopUpMenuForButton:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;
- (id)indicatorImage;
- (id)newIndicatorImageWithForegroundColor:(id)arg1 engravingColor:(id)arg2;
- (id)engravingColor;
- (id)foregroundTextColor;
- (double)titleHorizontalInset;
- (double)titleVerticalOffset;
- (double)textToImageSpace;
- (double)insetForMenuArrowImage;
- (double)insetForHighlightY;
- (double)insetForHighlightX;
- (void)dealloc;
- (void)sortBarButtonCellCommonInit;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface _SortBarButton : NSButton
{
}

+ (Class)cellClass;
+ (id)_sortBarButtonFont;
- (id)fontSmoothingBackgroundColor;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (void)showPopUpMenu;
- (void)mouseDown:(id)arg1;
- (id)init;

@end

@interface _RoundedRectTextFieldCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)textColor;
- (id)backgroundColor;
- (BOOL)_isInSelectedRow;
- (BOOL)_isInThreadParentRow;
- (id)_parentRow;
- (id)_selectionColor;
- (id)_darkBackgroundColor;
- (id)_normalBackgroundColor;
- (id)_lightBackgroundColor;

@end

@interface RoundedRectTextField : NSTextField
{
}

+ (Class)cellClass;
- (CDStruct_3c058996)alignmentRectInsets;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SenderPhotoView : NSImageView
{
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    unsigned long long _photoSize;
}

@property(nonatomic) unsigned long long photoSize; // @synthesize photoSize=_photoSize;
@property(retain, nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)updateConstraints;
- (void)dealloc;
- (void)_senderPhotoViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface RichTableCellView : NSTableCellView
{
    BOOL _isChildOfThread;
    BOOL _shouldShowToCc;
    BOOL _shouldShowLocation;
    BOOL _shouldShowSize;
    BOOL _shouldShowThreadDisclosureControl;
    BOOL _shouldShowVIPIndicator;
    NSString *_fromToAuthorEmail;
    NSImageView *_unreadView;
    NSButton *_replyButton;
    SenderPhotoView *_photoView;
    RoundedRectTextField *_toCcIndicator;
    ThreadDisclosureTextField *_threadDisclosureControl;
    NSImageView *_attachmentsView;
    NSImageView *_statusView;
    NSColor *_textColor;
    BOOL _shouldUseDateSent;
    BOOL _shouldShowPhoto;
    BOOL _shouldShowFlaggedStatus;
    BOOL _shouldShowRecipientInsteadOfSender;
    BOOL _hasNonDuplicateRelatedMessages;
    BOOL _isThreadChildSidebarSelectedColor;
    unsigned int _messageFlags;
    NSTextField *_senderTextField;
    NSTextField *_subjectTextField;
    NSTextField *_snippetTextField;
    NSTextField *_dateTextField;
    NSTextField *_sizeTextField;
    unsigned long long _numberOfSnippetLines;
    unsigned long long _messageSize;
    NSIndexSet *_appliedFlagColors;
    NSString *_snippet;
    NSLayoutConstraint *_topOffsetConstraint;
    NSLayoutConstraint *_photoOffsetConstraint;
    NSLayoutConstraint *_subjectOffsetConstraint;
    NSLayoutConstraint *_senderOffsetConstraint;
    NSMutableArray *_flagViews;
    MFCriterion *_mailboxCriterion;
}

+ (double)heightWithNumberOfSnippetLines:(unsigned long long)arg1 style:(unsigned long long)arg2;
+ (void)_resetDateFormats;
+ (id)_defaultParagraphStyle;
+ (void)initialize;
@property(retain, nonatomic) MFCriterion *mailboxCriterion; // @synthesize mailboxCriterion=_mailboxCriterion;
@property(retain, nonatomic) NSMutableArray *flagViews; // @synthesize flagViews=_flagViews;
@property(nonatomic) NSLayoutConstraint *senderOffsetConstraint; // @synthesize senderOffsetConstraint=_senderOffsetConstraint;
@property(retain, nonatomic) NSLayoutConstraint *subjectOffsetConstraint; // @synthesize subjectOffsetConstraint=_subjectOffsetConstraint;
@property(nonatomic) NSLayoutConstraint *photoOffsetConstraint; // @synthesize photoOffsetConstraint=_photoOffsetConstraint;
@property(nonatomic) NSLayoutConstraint *topOffsetConstraint; // @synthesize topOffsetConstraint=_topOffsetConstraint;
@property(nonatomic) BOOL isThreadChildSidebarSelectedColor; // @synthesize isThreadChildSidebarSelectedColor=_isThreadChildSidebarSelectedColor;
@property(copy, nonatomic) NSString *snippet; // @synthesize snippet=_snippet;
@property(retain, nonatomic) NSIndexSet *appliedFlagColors; // @synthesize appliedFlagColors=_appliedFlagColors;
@property(nonatomic) unsigned int messageFlags; // @synthesize messageFlags=_messageFlags;
@property(nonatomic) unsigned long long messageSize; // @synthesize messageSize=_messageSize;
@property(nonatomic) unsigned long long numberOfSnippetLines; // @synthesize numberOfSnippetLines=_numberOfSnippetLines;
@property(nonatomic) BOOL hasNonDuplicateRelatedMessages; // @synthesize hasNonDuplicateRelatedMessages=_hasNonDuplicateRelatedMessages;
@property(nonatomic) BOOL shouldShowRecipientInsteadOfSender; // @synthesize shouldShowRecipientInsteadOfSender=_shouldShowRecipientInsteadOfSender;
@property(nonatomic) BOOL shouldShowFlaggedStatus; // @synthesize shouldShowFlaggedStatus=_shouldShowFlaggedStatus;
@property(nonatomic) BOOL shouldUseDateSent; // @synthesize shouldUseDateSent=_shouldUseDateSent;
@property(nonatomic) NSTextField *sizeTextField; // @synthesize sizeTextField=_sizeTextField;
@property(nonatomic) NSTextField *dateTextField; // @synthesize dateTextField=_dateTextField;
@property(nonatomic) NSTextField *snippetTextField; // @synthesize snippetTextField=_snippetTextField;
@property(nonatomic) NSTextField *subjectTextField; // @synthesize subjectTextField=_subjectTextField;
@property(nonatomic) NSTextField *senderTextField; // @synthesize senderTextField=_senderTextField;
- (void)setThreadDisclosureTarget:(id)arg1;
- (void)setThreadDisclosureAction:(SEL)arg1;
- (void)setReplyTarget:(id)arg1;
- (void)setReplyAction:(SEL)arg1;
- (void)_windowDidChangeKeyStatus:(id)arg1;
- (void)_photoAvailable:(id)arg1;
- (void)_VIPSendersDidChange:(id)arg1;
- (BOOL)_isVIP;
- (void)_updateVIPIndicator;
- (void)_updateDateColor;
- (void)_performUpdateSnippetForThread;
- (void)_updateSnippetForThread:(id)arg1;
- (void)_updateAttachmentsView;
- (void)_updateFlags;
- (id)_anchorViewForNewFlag:(double *)arg1;
- (id)_iconForFlag:(unsigned long long)arg1;
- (void)_updateSnippetTextField:(id)arg1;
- (void)_updateReplyButton;
- (void)_updateUnreadIndicator;
- (void)_updateStatusView;
- (void)_showStatusView:(id)arg1;
- (void)_showAttachmentsView;
- (void)_showThreadControl:(unsigned long long)arg1 isOpen:(BOOL)arg2;
- (void)_showToCCIndicator:(BOOL)arg1;
- (void)_showPhoto:(id)arg1;
- (void)_showReplyButton:(unsigned long long)arg1;
- (void)_showUnreadIndicator:(unsigned long long)arg1;
- (void)prepareForReuse;
@property(readonly, nonatomic) NSImageView *statusView;
@property(readonly, nonatomic) NSImageView *attachmentsView;
@property(readonly, nonatomic) ThreadDisclosureTextField *threadDisclosureControl;
@property(readonly, nonatomic) RoundedRectTextField *toCcIndicator;
@property(readonly, nonatomic) SenderPhotoView *photoView;
@property(readonly, nonatomic) NSButton *replyButton;
@property(readonly, nonatomic) NSImageView *unreadView;
- (void)_loadReplyImages;
- (id)_snippetForMessage;
- (id)_unknownSenderImage;
- (id)_tableView;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;
- (void)updateSnippet:(id)arg1;
- (BOOL)isSelected;
@property(nonatomic) BOOL shouldShowPhoto; // @synthesize shouldShowPhoto=_shouldShowPhoto;
@property(nonatomic) BOOL shouldShowToCc;
@property(nonatomic) BOOL isChildOfThread;
- (void)_updateTextFieldsColor:(id)arg1;
@property(retain, nonatomic) NSColor *textColor;
- (void)setBackgroundStyle:(long long)arg1;
@property(retain, nonatomic) NSString *fromToAuthorEmail;
- (void)setObjectValue:(id)arg1;
- (BOOL)_messageHasAttachments:(id)arg1;
- (id)_subjectFieldValueForMessage:(id)arg1;
- (id)_senderFieldValueForMessage:(id)arg1;
- (id)_senderFont;
- (id)_dateFont;
- (id)_dateStringForMessage:(id)arg1;
- (id)_todayDateFormatter;
- (id)_defaultDateFormatter;
- (id)_messageValue;
- (BOOL)isHighlighted;
@property(nonatomic) BOOL shouldShowThreadDisclosureControl;
@property(nonatomic) BOOL shouldShowSize;
@property(nonatomic) BOOL shouldShowLocation;
- (BOOL)isValidMessageDoubleClick:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_richTableCellViewCommonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface RichTableRowView : NSTableRowView
{
    unsigned long long _rowStyle;
    BOOL _isThreadCollapsing;
    NSTableView *_tableView;
}

@property(nonatomic) BOOL isThreadCollapsing; // @synthesize isThreadCollapsing=_isThreadCollapsing;
@property(nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) unsigned long long rowStyle;
- (void)setEmphasized:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)_drawThreadSeparatorInRect:(struct CGRect)arg1;
- (void)_drawBasicSeparatorInRect:(struct CGRect)arg1;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (BOOL)_isChildOfThread;
- (BOOL)_isInternalThreadChild;
- (BOOL)_isExpandedThreadParent;
- (id)_rowBelow;
- (id)_rowAbove;
- (id)_threadChildBackgroundColor;
- (id)_threadParentBackgroundColor;
- (id)_separatorColor;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RolloverButtonCell : MessageListCell
{
    id _target;
    SEL _action;
}

- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)_mf_shouldSendAction;
- (BOOL)_sendActionFrom:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (SEL)action;
- (id)target;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;

@end

@interface RulesPreferences : NSPreferencesModule <NSTableViewDataSource, NSTableViewDelegate, NSWindowDelegate, SoundPopUpButtonDelegate>
{
    NSTableView *_rulesTable;
    NSButton *_editButton;
    NSButton *_duplicateButton;
    NSButton *_removeButton;
    NSPanel *_ruleDetailPanel;
    NSTextField *_ruleNameField;
    NSButton *_ruleHelpButton;
    NSMutableArray *_actionViews;
    NSMenu *_actionMenu;
    NSScrollView *_actionContainer;
    NSView *_soundActionView;
    NSView *_colorActionView;
    NSView *_transferActionView;
    NSView *_copyActionView;
    NSView *_autoReplyActionView;
    NSView *_autoForwardActionView;
    NSView *_autoRedirectActionView;
    NSView *_markDeletedActionView;
    NSView *_markAsReadActionView;
    NSView *_markAsFlaggedActionView;
    NSView *_stopEvaluatingRulesActionView;
    NSView *_runAppleScriptActionView;
    NSView *_notifyUserActionView;
    NSView *_sendNotificationActionView;
    NSPopUpButton *_colorPopup;
    NSPopUpButton *_colorStylePopup;
    NSPopUpButton *_flagColorPopup;
    SoundPopUpButton *_soundPopup;
    AppleScriptPopUpButton *_appleScriptPopup;
    NSPanel *_responseMessageTextPanel;
    NSTextView *_responseMessageTextView;
    CriteriaUIHelper *_criteriaUIHelper;
    MailboxesChooser *_destinationChooser;
    MailboxesChooser *_copyDestinationChooser;
    BOOL _colorPanelShouldBeHidden;
    long long _currentlySelectedRow;
    MFMessageRule *_ruleBeingValidated;
    MFMessageRule *_ruleBeingEdited;
    BOOL _isDuplicatingRule;
    BOOL _hasPendingChanges;
    MUIAddressField *_forwardRecipientsField;
    MUIAddressField *_redirectRecipientsField;
}

@property(nonatomic) MUIAddressField *redirectRecipientsField; // @synthesize redirectRecipientsField=_redirectRecipientsField;
@property(nonatomic) MUIAddressField *forwardRecipientsField; // @synthesize forwardRecipientsField=_forwardRecipientsField;
- (id)ruleBeingEdited;
- (void)_openAppleScriptDirectoryInFinder;
- (id)titleForSoundFile:(id)arg1;
- (void)_accountMailboxListingDidChange:(id)arg1;
- (void)actionPopupChanged:(id)arg1;
- (void)_actionPopupWillPopup:(id)arg1;
- (void)mailboxSelected:(id)arg1;
- (void)flagsToApplyChanged:(id)arg1;
- (void)responseMessageCancelClicked:(id)arg1;
- (void)responseMessageOKClicked:(id)arg1;
- (void)setResponseMessageClicked:(id)arg1;
- (void)colorStyleChanged:(id)arg1;
- (void)colorPicked:(id)arg1;
- (void)colorChanged:(id)arg1;
- (void)cancelClicked:(id)arg1;
- (void)okClicked:(id)arg1;
- (void)runRuleDetailPanelForRule:(id)arg1 inWindow:(id)arg2 withHelpButtonTag:(long long)arg3;
- (void)_validateActionMenuItem:(id)arg1 currentTag:(long long)arg2;
- (void)addAction:(id)arg1;
- (void)_configureActionsForRule:(id)arg1;
- (void)_configureFlagColorPopup;
- (void)_configureColorPopupForColorStyle:(long long)arg1;
- (void)_addActionForTag:(long long)arg1 atIndex:(long long)arg2;
- (id)_actionViewForTag:(long long)arg1;
- (void)removeAction:(id)arg1;
- (void)_setOtherColor:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)_validateDrag:(id)arg1 proposedRow:(long long)arg2 dragOperation:(unsigned long long)arg3;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)mailTableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (int)mailTableView:(id)arg1 highlightStyleForRow:(long long)arg2 inRect:(struct CGRect *)arg3 color:(id *)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)removeRule:(id)arg1;
- (void)editRule:(id)arg1;
- (void)duplicateRule:(id)arg1;
- (void)createRule:(id)arg1;
- (void)saveChanges;
- (void)initializeFromDefaults;
- (void)_validateButtonState;
- (void)dataWasSynced;
- (BOOL)dataWillBeSynced;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)preferencesNibName;
- (id)viewForPreferenceNamed:(id)arg1;
- (void)awakeFromNib;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface SegmentedToolbarItemSegmentedCell : LazyMenuSegmentedCell
{
}

- (double)_menuDelayTimeForSegment:(long long)arg1;

@end

@interface SegmentedToolbarItemSegmentItem : NSToolbarItem
{
    SegmentedToolbarItem *_parent;
    long long _segmentNumber;
}

@property(nonatomic) long long segmentNumber; // @synthesize segmentNumber=_segmentNumber;
@property(nonatomic) SegmentedToolbarItem *parent; // @synthesize parent=_parent;
- (void)setMenu:(id)arg1;
- (void)setImage:(id)arg1;
- (void)_setTag:(long long)arg1;
- (void)setTag:(long long)arg1;
- (void)_setToolTip:(id)arg1;
- (void)setToolTip:(id)arg1;
- (id)menuFormRepresentation;

@end

@interface SegmentedToolbarItem : NSToolbarItemGroup
{
    BOOL _disableWidthCalculation;
}

@property(nonatomic) BOOL disableWidthCalculation; // @synthesize disableWidthCalculation=_disableWidthCalculation;
- (void)setMenu:(id)arg1 forSegment:(long long)arg2;
- (void)setToolTip:(id)arg1 forSegment:(long long)arg2;
- (void)setTag:(long long)arg1 forSegment:(long long)arg2;
- (void)setTarget:(id)arg1 forSegment:(long long)arg2;
- (id)targetForSegment:(long long)arg1;
- (void)setAction:(SEL)arg1 forSegment:(long long)arg2;
- (SEL)actionForSegment:(long long)arg1;
- (void)setPaletteLabel:(id)arg1 forSegment:(long long)arg2;
- (id)paletteLabelForSegment:(long long)arg1;
- (void)setInsideLabel:(id)arg1 forSegment:(long long)arg2;
- (id)insideLabelForSegment:(long long)arg1;
- (void)setAlternateLabel:(id)arg1 forSegment:(long long)arg2;
- (void)setLabel:(id)arg1 forSegment:(long long)arg2;
- (id)labelForSegment:(long long)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
@property(nonatomic) long long segmentCount;
- (void)_controlAction:(id)arg1;
- (id)control;
- (void)validate;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithItemIdentifier:(id)arg1;

@end

@interface SelfAnimatingProgressIndicator : NSProgressIndicator
{
}

- (void)setIndeterminate:(BOOL)arg1;

@end

@interface Signature : NSObject <NSCopying>
{
    NSString *_uniqueId;
    NSString *_name;
    NSData *_webArchiveData;
    BOOL _isRich;
    BOOL _isSavedAsRich;
    BOOL _isDirty;
    MFSyncedFile *_syncedFile;
}

- (id)syncedFile;
- (id)signaturePath;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isRich;
- (void)setIsRich:(BOOL)arg1;
- (void)setWebArchive:(id)arg1;
- (id)webArchive;
- (id)_sanitizeSignatureFileData:(id)arg1;
- (id)webArchiveData;
- (void)reloadFromDisk;
- (void)setName:(id)arg1;
- (id)name;
- (id)uniqueId;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentation;
- (void)removeContentFromDisk;
- (BOOL)saveContentToDisk;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)initWithName:(id)arg1 uniqueId:(id)arg2;
- (id)objectSpecifier;
- (void)setSignatureContents:(id)arg1;
- (id)signatureContents;
- (void)setSignatureName:(id)arg1;
- (id)signatureName;

@end

@interface _AllSignaturesAccount : NSObject
{
}

- (id)displayName;
- (id)uniqueId;

@end

@interface SignatureBundle : MVMailBundle
{
    NSMutableDictionary *_signatures;
    NSMutableArray *_accounts;
    BOOL _isDirty;
    NSMutableDictionary *_lastDefaultSignatures;
    MFSyncedFile *_syncedFile;
}

+ (id)signaturesFolderPath;
+ (id)allSignaturesAccount;
+ (void)initialize;
- (void)configurePopUpButton:(id)arg1 forAccount:(id)arg2 defaultSignature:(id)arg3 selectionMethod:(int)arg4 showAccount:(BOOL)arg5;
- (void)setPlaceSignatureAboveQuotedText:(BOOL)arg1;
- (BOOL)placeSignatureAboveQuotedText;
- (void)unsetShowsComposeAccessoryView;
- (void)setShowsComposeAccessoryView:(BOOL)arg1;
- (BOOL)showComposeAccessoryView;
- (BOOL)showComposeAccessoryView:(char *)arg1;
- (id)activeSignatureWithId:(id)arg1;
- (id)activeSignatureWithName:(id)arg1;
- (void)setSignatureSelectionMethod:(int)arg1 forAccount:(id)arg2;
- (int)signatureSelectionMethodForAccount:(id)arg1;
- (id)defaultSignatureForAccount:(id)arg1;
- (void)setDefaultSignature:(id)arg1 forAccount:(id)arg2;
- (void)_setDefaultSignatureId:(id)arg1 forAccountId:(id)arg2;
- (void)_signatureBundleChanged:(id)arg1;
- (void)_signatureChanged:(id)arg1;
- (id)syncedFile;
- (id)_accountsMap;
- (id)_serializedSignatures;
- (void)saveChangesToDisk;
- (void)_signatureNameChanged:(id)arg1;
- (void)addSignature:(id)arg1;
- (void)insertSignature:(id)arg1 atIndex:(long long)arg2;
- (void)insertSignature:(id)arg1 atIndex:(long long)arg2 forAccount:(id)arg3;
- (void)removeSignatureAtIndex:(long long)arg1 forAccount:(id)arg2;
- (void)_removeSignature:(id)arg1;
- (void)removeSignatureAtIndex:(long long)arg1;
- (id)signatureAtIndex:(long long)arg1;
- (id)signatureAtIndex:(long long)arg1 forAccount:(id)arg2;
- (id)signaturesForAccount:(id)arg1;
- (unsigned long long)numberOfSignatures;
- (id)_fixAccountIdsInPlist:(id)arg1;
- (void)loadSignaturesFromDisk;
- (id)signatures;
- (BOOL)_deleteSignaturesNotPresentInNewSignatures:(id)arg1;
- (void)_loadAllSignatures:(id)arg1 forAccounts:(id)arg2;
- (BOOL)updateAccountList;
- (id)signatureAccounts;
- (void)_loadLastDefaultSignatures;
- (void)dealloc;
- (id)init;

@end

@interface DeletingTableView : NSTableView
{
}

- (void)keyDown:(id)arg1;

@end

@interface SignaturePreferences : NSPreferencesModule <EditingMessageWebViewDelegate, MVTerminationHandler>
{
    NSTableView *_signaturesTable;
    NSTableView *_accountsTable;
    NSPopUpButton *_selectPopup;
    ColorBackgroundView *_webViewBackground;
    EditingMessageWebView *_webView;
    EditingWebMessageController *_controller;
    NSButton *_textRichnessButton;
    NSTextField *_textRichnessMessageField;
    NSSegmentedControl *_createOrRemoveButton;
    NSButton *_placeSignatureAboveQuote;
    unsigned int _addingNewSignature:1;
    unsigned int _appIsTerminating:1;
    unsigned int _loadedInitialHTML:1;
    MFMailAccount *_selectedAccount;
    MFMailAccount *_allSignaturesAccount;
    NSString *_defaultFontName;
    WebArchive *_savedWebArchive;
    HyperlinkEditor *_hyperlinkEditor;
    BOOL _currentSignatureHasChanges;
}

- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)removeSelectedLink;
- (void)editLink;
- (BOOL)selectionIsInList;
- (void)insertBulletedList:(id)arg1;
- (void)insertNumberedList:(id)arg1;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (BOOL)allowQuoting;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)truncatingAttributes;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_displaySelectedSignatureDetails;
- (id)_webArchiveForEditedSignature;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didAddMailAttachment:(id)arg2;
- (id)webView:(id)arg1 shouldReplaceSelectionWithWebArchive:(id)arg2 givenAction:(int)arg3;
- (BOOL)webView:(id)arg1 shouldInsertNode:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)_updateWebView;
- (BOOL)_validateValuesInUI;
- (void)placeSignatureAboveQuotedText:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_updatePopup;
- (void)webViewDidChange:(id)arg1;
- (void)webViewDidChangeTypingStyle:(id)arg1;
- (void)dataWasSynced;
- (BOOL)dataWillBeSynced;
- (void)changeSignatureRichness:(id)arg1;
- (BOOL)allowsRichText;
- (void)_removeSignature:(id)arg1;
- (void)deleteKey:(id)arg1;
- (BOOL)_endEditingOfSignatureOkayToReload:(BOOL)arg1 needsToReload:(char *)arg2;
- (id)_defaultSignatureContentForSelectedAccount;
- (void)_createSignature:(id)arg1;
- (void)createOrRemoveSignature:(id)arg1;
- (void)_defaultFontMayHaveChanged:(id)arg1;
- (void)_determineDefaultFontName;
- (void)awakeFromNib;
- (void)_accountsDidChange:(id)arg1;
- (void)_unregisterForNotifications;
- (void)_registerForNotifications;
- (BOOL)preferencesWindowShouldClose;
- (void)moduleWillBeRemoved;
- (BOOL)moduleCanBeRemoved;
- (void)moduleWasInstalled;
- (void)willBeDisplayed;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;
- (void)saveChanges;
- (void)_setSelectedAccount:(id)arg1;
- (void)initializeFromDefaults;
- (void)defaultSignatureChanged:(id)arg1;
- (void)_validateButtonState;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface SingleMessageViewer : MessageViewer <MVSelectionOwner, NSToolbarDelegate, MailFullScreenWindowDelegate>
{
    NSOperation *_proxyIconOperation;
    NSOperation *_subjectLoadOperation;
    BOOL _nibLoaded;
    MessageContentController *_contentControllerObserving;
    NSSet *_hiddenCopies;
    NSSet *_relatedMessages;
    BOOL _nextDeleteShouldMoveToTrash;
    NSArray *_messagesToDelete;
    MCMessage *_initialMessage;
    NSArray *_selectedMailboxes;
}

+ (void)restoreAllViewersFromDefaults;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)_mailApplicationDidFinishLaunching:(id)arg1;
+ (id)_createWithSavedAttributes:(id)arg1;
+ (id)_messagesFromDictionary:(id)arg1;
+ (id)_createWithMessage:(id)arg1 hiddenCopies:(id)arg2 relatedMessages:(id)arg3 showRelatedMessages:(BOOL)arg4 expandedSelectedMailboxes:(id)arg5 andAttributes:(id)arg6;
+ (id)newDefaultMessageViewer;
+ (id)toolbarIdentifierForMessageType:(BOOL)arg1 fullScreen:(BOOL)arg2;
+ (id)toolbarIdentifier;
+ (id)viewerForMessage:(id)arg1 hiddenCopies:(id)arg2 relatedMessages:(id)arg3 showRelatedMessages:(BOOL)arg4 showAllHeaders:(BOOL)arg5 expandedSelectedMailboxes:(id)arg6;
+ (id)existingSingleMessageViewerForMessage:(id)arg1;
@property(retain) NSArray *selectedMailboxes; // @synthesize selectedMailboxes=_selectedMailboxes;
@property(retain, nonatomic) NSOperation *subjectLoadOperation; // @synthesize subjectLoadOperation=_subjectLoadOperation;
@property(retain, nonatomic) NSOperation *proxyIconOperation; // @synthesize proxyIconOperation=_proxyIconOperation;
@property(retain, nonatomic) MCMessage *initialMessage; // @synthesize initialMessage=_initialMessage;
- (struct CGRect)nonToolbarWindowContentRect;
- (void)_setAutorecalculatesContentBorderThickness:(BOOL)arg1;
- (void)revealMessage:(id)arg1;
- (void)setShouldDisplayShowInMailboxLink:(BOOL)arg1;
- (BOOL)transferSelectionToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (id)messageStore;
- (id)currentDisplayedMessage;
- (void)selectMessages:(id)arg1;
- (id)selectionExpandingThreadsAndHiddenCopies:(BOOL)arg1;
- (id)selection;
- (BOOL)_replaceWithEditorForType:(unsigned long long)arg1 action:(SEL)arg2;
- (void)editorDidLoad:(id)arg1;
- (BOOL)send:(id)arg1;
- (void)redirectMessage:(id)arg1;
- (void)forwardMessage:(id)arg1;
- (void)replyToOriginalSender:(id)arg1;
- (void)replyAllMessage:(id)arg1;
- (void)replyMessage:(id)arg1;
- (void)archiveMessages:(id)arg1;
- (void)undeleteMessagesAllowUndo:(BOOL)arg1;
- (void)undeleteMessages:(id)arg1;
- (void)_reallyDeleteMessages:(id)arg1 allowingMoveToTrash:(BOOL)arg2;
- (void)fullScreenDeleteAnimationFinished;
- (void)deleteMessages:(id)arg1 allowingMoveToTrash:(BOOL)arg2;
- (BOOL)_displayingSingletonMessage;
- (void)deleteMessages:(id)arg1;
- (void)_noMessagesLeftToDisplay:(id)arg1;
- (void)_messagesCompacted:(id)arg1;
- (void)_messageFlagsDidChange:(id)arg1;
- (void)_messagesWereRemoved:(id)arg1;
- (BOOL)shouldDeleteMessagesGivenCurrentState;
- (BOOL)shouldDeleteMessageGivenCurrentState;
- (BOOL)_isViewingMessage:(id)arg1;
- (void)updateToolbar;
- (void)setupToolbar;
- (void)selectMailbox:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)selectedMessages;
- (void)resignAsSelectionOwner;
- (void)takeOverAsSelectionOwner;
- (void)saveDefaultWindowState;
- (id)dictionaryRepresentation;
- (void)_restoreViewer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)showAndMakeKey:(BOOL)arg1;
- (void)_setupFromAttributes;
- (void)_adjustNewSingleViewerWindowFrame;
- (id)_messageIDDictionaryRepresentationOf:(id)arg1;
- (void)_addMessageIDsFrom:(id)arg1 toDictionary:(id)arg2;
- (id)expandedSelectedMailboxesAllowingSearch;
- (id)expandedSelectedMailboxes;
- (id)messagesIncludingHiddenCopies:(id)arg1;
- (void)dealloc;
- (void)initFullScreenController;
- (id)initWithMailboxes:(id)arg1;
- (id)initPlain;
- (id)initForViewingMessage:(id)arg1 hiddenCopies:(id)arg2 relatedMessages:(id)arg3 showRelatedMessages:(BOOL)arg4 showAllHeaders:(BOOL)arg5 expandedSelectedMailboxes:(id)arg6 withAttributes:(id)arg7;
- (void)loadMessageWindowNib;
- (void)_openEnclosingMailbox:(id)arg1;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (id)filenameToDrag:(id)arg1;
- (void)_reallyUpdateWindowTitle:(id)arg1;
- (void)_updateWindowTitle:(id)arg1;
- (void)_updateWindowProxy:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldCloseForDelete;
- (BOOL)windowShouldClose:(id)arg1;
- (void)restoreFrame;
- (BOOL)mailFullScreenWindowShouldClose:(id)arg1;
- (id)windowForMailFullScreen;

@end

@interface _SlidingView : NSObject
{
    struct CGRect _startFrame;
    struct CGRect _endFrame;
    double _startTime;
    double _duration;
}

- (struct CGRect)frameForTime:(double)arg1;
- (struct CGRect)endFrame;
- (id)initWithStartFrame:(struct CGRect)arg1 endFrame:(struct CGRect)arg2 duration:(double)arg3;

@end

@interface SlidingAnimation : NSObject
{
    id <SlidingAnimationDelegate> _delegate;
    NSMutableDictionary *_views;
    BOOL _isSliding;
    BOOL _isPaused;
}

+ (id)_runLoopModesForAnimation;
- (void)resume;
- (void)pause;
- (BOOL)isSliding;
- (void)setDelegate:(id)arg1;
- (void)stop;
- (void)stopView:(id)arg1;
- (struct CGRect)destinationForView:(id)arg1;
- (void)_sendViewToDestination:(id)arg1;
- (void)setDestinationForView:(id)arg1 to:(struct CGRect)arg2 duration:(double)arg3;
- (void)_showNextFrame;
- (void)_updateTimer;
- (void)_updateViewPosition:(id)arg1 forTime:(double)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SlidingViewsBar : NSView <SlidingAnimationDelegate>
{
    ClippedItemsIndicator *_rightClipIndicator;
    unsigned long long _dropIndex;
    unsigned long long _dragSourceIndex;
    NSMutableArray *_buttons;
    SlidingAnimation *_animation;
    double _draggedItemWidth;
}

+ (double)buttonBottomOffset;
@property double draggedItemWidth; // @synthesize draggedItemWidth=_draggedItemWidth;
@property(retain) SlidingAnimation *animation; // @synthesize animation=_animation;
@property(retain) NSMutableArray *buttons; // @synthesize buttons=_buttons;
@property(retain) ClippedItemsIndicator *rightClipIndicator; // @synthesize rightClipIndicator=_rightClipIndicator;
@property unsigned long long dragSourceIndex; // @synthesize dragSourceIndex=_dragSourceIndex;
- (void)_ensureButtonIsInViewHierarchy:(id)arg1;
- (void)_mainStatusDidChange:(id)arg1;
- (BOOL)isFlipped;
- (void)viewWillBeginDragging:(id)arg1;
- (id)viewPinnedToOverflowIndicator;
- (void)moveSlidingViewToCurrentDropIndex:(id)arg1;
- (BOOL)isSliding;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)updateDropTarget:(id)arg1;
- (double)slidingWidthForView:(id)arg1;
- (double)widthOfDraggingInfo:(id)arg1;
- (void)resumeAnimation;
- (void)pauseAnimation;
- (BOOL)reorderSlidingView:(id)arg1 fromMouseDownEvent:(id)arg2;
- (id)_lastDraggedOrUpEventFollowing:(id)arg1;
- (id)_lastDraggedEventFollowing:(id)arg1;
@property(nonatomic) unsigned long long dropIndex;
- (void)slideButtonsIntoPlace;
- (unsigned long long)dropIndexFromLocalPoint:(struct CGPoint)arg1;
- (unsigned long long)dropIndexFromDraggingInfo:(id)arg1;
- (void)refreshButtons;
- (void)draggedSlidingView:(id)arg1;
- (void)reorderedSlidingView:(id)arg1;
- (double)paddingBetweenButtons;
- (struct CGRect)_constrainProposedButtonFrame:(struct CGRect)arg1;
- (double)minSlidingViewX;
- (double)minButtonX;
- (double)maxButtonX;
- (double)maxButtonXWithClipIndicator;
- (double)maxButtonXWithoutClipIndicator;
- (unsigned long long)lastNonSlidingViewIndex;
- (void)dealloc;
- (void)_slidingViewsBarCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SmartMailboxEditor : NSObject
{
    MFMailbox *_mailboxBeingEdited;
    MFMailbox *_mailboxBeingValidated;
    BOOL _editedMailboxIsNew;
    CriteriaUIHelper *_criteriaUIHelper;
    NSWindow *_makeNewMailboxWindow;
    NSTextField *_nameField;
    NSWindow *_makeNewFolderWindow;
    NSTextField *_groupNameField;
    NSWindow *_notEditableWindow;
    NSTextField *_searchStringField;
    NSTextView *_mailboxesTextView;
    NSView *_criteriaView;
}

+ (BOOL)mailboxIsEditable:(id)arg1;
+ (BOOL)isEditingInProgress;
@property(nonatomic) NSView *criteriaView; // @synthesize criteriaView=_criteriaView;
@property(nonatomic) NSTextView *mailboxesTextView; // @synthesize mailboxesTextView=_mailboxesTextView;
@property(nonatomic) NSTextField *searchStringField; // @synthesize searchStringField=_searchStringField;
@property(retain, nonatomic) NSWindow *notEditableWindow; // @synthesize notEditableWindow=_notEditableWindow;
@property(nonatomic) NSTextField *groupNameField; // @synthesize groupNameField=_groupNameField;
@property(retain, nonatomic) NSWindow *makeNewFolderWindow; // @synthesize makeNewFolderWindow=_makeNewFolderWindow;
@property(nonatomic) NSTextField *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) NSWindow *makeNewMailboxWindow; // @synthesize makeNewMailboxWindow=_makeNewMailboxWindow;
@property(retain, nonatomic) CriteriaUIHelper *criteriaUIHelper; // @synthesize criteriaUIHelper=_criteriaUIHelper;
- (void)_saveEditedMailbox;
- (void)cancelClicked:(id)arg1;
- (void)okClicked:(id)arg1;
- (void)_sheetDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)createNewMailboxGroup;
- (void)editSmartMailbox:(id)arg1 suggestedName:(id)arg2 isNew:(BOOL)arg3;
- (void)dealloc;

@end

@interface SMTPSettings : NSObject <AccountStatusDataSourceDelegate, NSTableViewDataSource>
{
    MFSMTPAccount *_selectedDeliveryAccount;
    AccountStatusDataSource *_deliveryASDS;
    NSMutableArray *_accountsInConflict;
    NSMutableDictionary *_cachedAccountEmployment;
    NSMutableDictionary *_cachedAccountEmploymentStrings;
    BOOL _didRegisterForNotifications;
    NSMutableArray *_deliveryAccounts;
    NSArrayController *_deliveryAccountsController;
    NSPanel *_panel;
    NSTableView *_accountTable;
    NSTextField *_portField;
    NSSegmentedControl *_addRemoveAccountControl;
    NSPopUpButton *_tlsCertificatePopUp;
}

+ (id)sharedPanel;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(nonatomic) NSPopUpButton *tlsCertificatePopUp; // @synthesize tlsCertificatePopUp=_tlsCertificatePopUp;
@property(nonatomic) NSSegmentedControl *addRemoveAccountControl; // @synthesize addRemoveAccountControl=_addRemoveAccountControl;
@property(nonatomic) NSTextField *portField; // @synthesize portField=_portField;
@property(nonatomic) NSTableView *accountTable; // @synthesize accountTable=_accountTable;
@property(retain, nonatomic) NSPanel *panel; // @synthesize panel=_panel;
@property(retain, nonatomic) NSArrayController *deliveryAccountsController; // @synthesize deliveryAccountsController=_deliveryAccountsController;
@property(retain) NSMutableArray *deliveryAccounts; // @synthesize deliveryAccounts=_deliveryAccounts;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)_restoreMailAccountDefaultAccounts;
- (void)_recacheAccountEmployment;
- (void)_removeInvalidAccounts;
- (id)_defaultColumnSortDescriptor;
- (BOOL)_checkForConflicts;
- (void)_accountInfoDidChange:(id)arg1;
- (BOOL)_validateAccounts;
- (void)_updateTLSCertificateForOldAccount:(id)arg1 newAccount:(id)arg2;
- (void)_updatePortFieldEnabled;
- (void)_updatePortNumberForOldAccount:(id)arg1 newAccount:(id)arg2;
- (void)_syncBindings;
- (void)dismissPanel:(id)arg1;
- (void)addRemoveAccountClicked:(id)arg1;
- (void)runSheetRelativeToWindow:(id)arg1 selectedAccount:(id)arg2 didEndDelegate:(id)arg3;
- (void)_updateEnableRemoveAccountControl;
- (void)_updateEnableAddAccountControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface SortByMenuDelegate : NSObject <NSMenuDelegate>
{
    NSMenuItem *_ascendingMenuItem;
    NSMenuItem *_descendingMenuItem;
}

@property NSMenuItem *descendingMenuItem; // @synthesize descendingMenuItem=_descendingMenuItem;
@property NSMenuItem *ascendingMenuItem; // @synthesize ascendingMenuItem=_ascendingMenuItem;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface SoundPopUpButton : NSPopUpButton <NSTableViewDataSource, NSTableViewDelegate>
{
    NSMutableArray *_userSounds;
    NSString *_selectedItem;
    BOOL _configured;
    BOOL _showNone;
    NSButton *_removeSoundButton;
    NSTableView *_soundTableView;
    NSPanel *_soundPanel;
    id <SoundPopUpButtonDelegate> _delegate;
}

@property(nonatomic) id <SoundPopUpButtonDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSPanel *soundPanel; // @synthesize soundPanel=_soundPanel;
@property(nonatomic) NSTableView *soundTableView; // @synthesize soundTableView=_soundTableView;
@property(nonatomic) NSButton *removeSoundButton; // @synthesize removeSoundButton=_removeSoundButton;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)doneClicked:(id)arg1;
- (void)removeSoundClicked:(id)arg1;
- (void)addSoundClicked:(id)arg1;
- (void)_addRemoveMailSound:(id)arg1;
- (void)selectSoundPath:(id)arg1;
- (id)selectedSoundPath;
- (void)_playSound:(id)arg1;
- (void)_popupMenuChanged:(id)arg1;
@property(nonatomic) BOOL showNone;
- (void)_appendSoundsFromDirectories:(id)arg1;
- (void)configureSoundMenu;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_soundPopUpButtonCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;

@end

@interface SourceListBackgroundView : NSView
{
    NSImage *_fullBackground;
}

@property(retain, nonatomic) NSImage *fullBackground; // @synthesize fullBackground=_fullBackground;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)_updateFullBackgroundImage;
- (void)windowMainStateChanged:(id)arg1;
- (void)_superViewFrameChanged:(id)arg1;
- (void)dealloc;
- (void)_sourceListBackgroundViewCommonInit;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SpecialMailboxes : NSObject
{
    NSPopUpButton *_sentMessagesAgePopup;
    NSPopUpButton *_junkAgePopup;
    NSPopUpButton *_trashAgePopup;
    NSView *_view;
}

+ (id)specialMailboxesForAccountClass:(Class)arg1;
@property(retain, nonatomic) NSView *view; // @synthesize view=_view;
- (void)postSpecialMailboxesDidChangeNotification:(id)arg1;
- (void)setUIElementsEnabled:(BOOL)arg1;
- (BOOL)isAccountInformationDirty:(id)arg1;
- (BOOL)setupAccountFromValuesInUI:(id)arg1;
- (void)setupUIFromValuesInAccount:(id)arg1;
- (void)dealloc;

@end

@interface StackController : NSObject <StackElementDelegate, StackRevealGroupDelegate>
{
    CALayer *_stackContainerLayer;
    struct CGSize _stackCenterOffset;
    NSMutableArray *_stackedItems;
    NSMutableSet *_stackedItemsSet;
    NSMutableArray *_orderedItems;
    NSMutableSet *_orderedItemsSet;
    NSMutableDictionary *_stackElementsByItem;
    NSMutableDictionary *_loadRequestDatesByItem;
    StackRevealGroup *_revealGroup;
    double _lastDisplayedItemsUpdateRequest;
    double _lastTransitionToStackState;
    unsigned long long _transactionCount;
    BOOL _updateNeeded;
    BOOL _loadingData;
    BOOL _waitingForTransitionToStackState;
    BOOL _isAnimating;
    BOOL _isTerminating;
    BOOL _isSuspended;
    BOOL _preventReveal;
    BOOL _preventStackBeforeOffscreen;
    BOOL _abortingRevealAnimation;
    BOOL _animateStateTransitions;
    id <StackDataSource> _dataSource;
    id <StackDelegate> _delegate;
    NSArray *_itemsToDisplay;
}

@property(copy, nonatomic) NSArray *itemsToDisplay; // @synthesize itemsToDisplay=_itemsToDisplay;
@property(nonatomic) BOOL animateStateTransitions; // @synthesize animateStateTransitions=_animateStateTransitions;
@property(nonatomic) id <StackDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <StackDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)stackRevealGroupDidFinish:(id)arg1;
- (void)stackRevealGroupDidReveal:(id)arg1;
- (void)stackRevealGroupWillReveal:(id)arg1;
- (id)stackContainerView;
- (void)stackElement:(id)arg1 targetStateDidChangeFrom:(int)arg2 to:(int)arg3;
- (void)stackElement:(id)arg1 currentStateDidChangeFrom:(int)arg2 to:(int)arg3;
- (void)stackElement:(id)arg1 willRemoveLayer:(id)arg2;
- (id)layerForStackElement:(id)arg1;
- (BOOL)stackIsTerminating;
- (struct CGSize)stackCenterOffset;
- (id)stackContainerLayer;
- (void)cancelPendingActions;
- (void)cancelRevealAnimation;
- (void)updateIsAnimating;
@property(nonatomic) BOOL isAnimating;
@property(retain, nonatomic) StackRevealGroup *revealGroup;
- (BOOL)isAnyStackElementBeingStacked;
- (id)stackElementToReshowUnderneathStackElement:(id)arg1;
- (id)orderedStackedElementsAboveStackElement:(id)arg1;
- (id)orderedStackedElementsWithOrientation:(long long)arg1;
- (void)stackDataSourceDidLoadItemData:(id)arg1;
- (void)updateOrientationForStackElement:(id)arg1;
- (void)updateStackElement:(id)arg1;
- (void)updateStackElements;
- (void)setNeedsToUpdateStackElements;
- (void)endTransaction;
- (void)beginTransaction;
- (BOOL)isDataAvailableForStackElement:(id)arg1 loadIfNeeded:(BOOL)arg2;
- (void)removeStackElement:(id)arg1;
- (id)stackElementForItem:(id)arg1 createIfNeeded:(BOOL)arg2 withInitialState:(int)arg3;
- (id)stackElementForItem:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)keyForItem:(id)arg1;
- (void)removeStackedLayers:(BOOL)arg1;
- (void)updateDisplayedItems;
- (void)addStackedItem:(id)arg1;
- (void)setNeedsToUpdateDisplayedItems:(BOOL)arg1 immediately:(BOOL)arg2;
- (void)displayStackedLayersForItems:(id)arg1 animated:(BOOL)arg2;
- (void)dealloc;
- (id)init;

@end

@interface StackElement : NSObject
{
    CALayer *_itemLayer;
    int _currentState;
    int _nextState;
    int _targetState;
    int _previousState;
    id <StackElementDelegate> _delegate;
    id _item;
    long long _orientation;
}

@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(readonly, nonatomic) int previousState; // @synthesize previousState=_previousState;
@property(readonly, nonatomic) id item; // @synthesize item=_item;
@property(nonatomic) id <StackElementDelegate> delegate; // @synthesize delegate=_delegate;
- (struct CGAffineTransform)onStackTransform;
- (struct CGAffineTransform)offscreenTransform;
- (struct CGAffineTransform)_affineTransformWithTranslation:(struct CGSize)arg1;
- (struct CGAffineTransform)fullsizeTransform;
- (void)fadeInUnderneathStack:(BOOL)arg1;
- (void)fadeOutUnderneathStack:(BOOL)arg1;
- (void)moveOutFromStack:(BOOL)arg1;
- (void)moveIntoStack:(BOOL)arg1;
- (void)hide:(BOOL)arg1;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)commitAnimation;
- (void)beginAnimationToState:(int)arg1 withDuration:(double)arg2 beginsFromCurrentState:(BOOL)arg3 didStopSelector:(SEL)arg4 context:(void *)arg5 animated:(BOOL)arg6;
- (id)_operationNameWithState:(int)arg1;
- (void)removeLayer;
@property(readonly, nonatomic) CALayer *layer;
@property(readonly, nonatomic) double stackIndex;
@property(readonly, nonatomic) BOOL isAnimating;
@property(nonatomic) int targetState;
@property(nonatomic) int currentState;
@property(readonly, nonatomic, getter=isVisible) BOOL visible;
- (void)setNextState:(int)arg1 animated:(BOOL)arg2;
- (void)setNextState:(int)arg1;
@property(readonly, nonatomic) int nextState;
- (int)state;
- (id)description;
- (void)dealloc;
- (id)initWithItem:(id)arg1 state:(int)arg2;

@end

@interface StackRevealGroup : NSObject
{
    NSWindow *_window;
    CALayer *_layer;
    NSMutableArray *_stackElements;
    unsigned long long _state;
    double _revealBeginTime;
    id <StackRevealGroupDelegate> _delegate;
}

@property(nonatomic) id <StackRevealGroupDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic, getter=isAnimating) BOOL animating;
@property(readonly, nonatomic, getter=isRevealing) BOOL revealing;
- (void)finish;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)cancel:(BOOL)arg1;
- (void)beginRevealAnimation;
- (void)removeLayer;
@property(readonly, nonatomic) CALayer *layer;
- (void)removeStackElement:(id)arg1;
- (BOOL)containsStackElement:(id)arg1 isTopElement:(char *)arg2;
- (void)dealloc;
- (id)_window;
- (id)initWithStackElements:(id)arg1;

@end

@interface HeaderTruncationAttachmentCell : NSTextAttachmentCell
{
    NSColor *_textColor;
}

@property(copy, nonatomic) NSColor *textColor; // @synthesize textColor=_textColor;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;
- (struct CGPoint)cellBaselineOffset;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)_textAttributes;
- (void)dealloc;

@end

@interface StarFieldController : NSObject
{
    NSMutableDictionary *_windowControllers;
    NSMutableDictionary *_bufferedControllers;
    MTMWindowController *_currentActiveWindowController;
    MTMWindowController *_currentTimeWindowController;
    struct CGRect _mailFrame;
    struct CGRect _initialFrame;
    NSDictionary *_mailDisplayState;
    NSMutableArray *_thumbnailUpdateQueue;
    NSTimer *_updateTimer;
    BOOL _firstThumbnailUpdateRequest;
    BOOL _hasAtLeastSentOneThumbnail;
    BOOL _dismissed;
    MTMMailbox *_pausedMailbox;
    BOOL _isInTimeMachine;
    BOOL _showChangedItemsOnly;
    BOOL _timeMachineStarted;
    NSDictionary *_sharedDisplayState;
}

+ (id)sharedController;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)keyPathsForValuesAffectingIsInTimeMachine;
@property(readonly) BOOL timeMachineStarted; // @synthesize timeMachineStarted=_timeMachineStarted;
@property BOOL showChangedItemsOnly; // @synthesize showChangedItemsOnly=_showChangedItemsOnly;
@property BOOL isInTimeMachine; // @synthesize isInTimeMachine=_isInTimeMachine;
@property(retain) NSDictionary *sharedDisplayState; // @synthesize sharedDisplayState=_sharedDisplayState;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)restoreFromURL:(id)arg1;
- (void)showChangedItemsOnlyToggled:(BOOL)arg1;
- (id)deactivateWindowForURL:(id)arg1;
- (id)activateWindowForURL:(id)arg1 changedItemsOnly:(BOOL)arg2 atFrame:(struct CGRect)arg3;
- (id)revisionIDForURL:(id)arg1;
- (id)_correctedURLForURL:(id)arg1 proposedQueryString:(id)arg2;
- (void)scheduleUpdateForURL:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)updateNextThumbnail;
- (void)markSnapshotAsDirty:(id)arg1;
- (void)updateThumbnailForURL:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)updateAllThumbnails;
- (void)_updateAllThumbnails;
- (void)timeMachineWasDismissed;
- (BOOL)startTimeMachine;
- (void)setActiveWindowController:(id)arg1;
- (void)removeWindowControllerForURL:(id)arg1;
- (id)windowControllerForURL:(id)arg1 forDisplay:(BOOL)arg2 canCreate:(BOOL)arg3;
- (void)appHasExitedTimeMachineAndFinishedRestoring;
- (void)startExitTransitionOfWindowController:(id)arg1;
- (void)_enterTransitionDidEnd:(id)arg1;
- (void)startEnterTransitionOfWindowController:(id)arg1 fromFrame:(struct CGRect)arg2;
@property(readonly) MTMWindowController *activeWindowController;
@property(readonly) MTMWindowController *currentTimeWindowController;
- (void)showCurrentStateMailDisplayState:(id)arg1;
- (id)mainURL;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface StartupManager : NSObject
{
}

+ (BOOL)setupAccountsAndSynchronize:(BOOL)arg1;

@end

@interface Stationery : NSObject
{
    NSDictionary *_descriptionDictionary;
    NSDictionary *_localizedDescriptionDictionary;
    NSBundle *_bundle;
    NSString *_html;
    NSMutableDictionary *_imageData;
    NSImage *_thumbnailImage;
    BOOL _isCustom;
    NSArray *_colors;
    NSString *_defaultColor;
    NSString *_uniqueIDForBaseURL;
}

- (id)description;
- (BOOL)isEqual:(id)arg1;
- (void)setBundlePath:(id)arg1;
- (id)bundlePath;
- (void)addValueToDescription:(id)arg1 forKey:(id)arg2;
- (BOOL)saveToPath:(id)arg1 error:(id *)arg2;
- (void)setValue:(id)arg1 forHeader:(id)arg2;
- (id)addImageWithData:(id)arg1 name:(id)arg2;
- (void)setHTML:(id)arg1;
- (void)setStationeryName:(id)arg1;
- (void)setMinimumWidth:(double)arg1;
- (id)headers;
- (id)setThumbnailImage:(id)arg1;
- (id)thumbnailImage;
- (id)thumbnailImagePath;
- (id)displayName;
- (id)folderName;
- (id)stationeryID;
- (void)changeFolderAndDisplayNameTo:(id)arg1;
- (id)fontsForColor:(id)arg1;
- (id)imagesInCompositeImagesForColor:(id)arg1;
- (id)backgroundImagePathsForColor:(id)arg1 previousColor:(id)arg2;
- (id)imagePathsForColor:(id)arg1;
- (id)nextColorAfterColor:(id)arg1;
- (double)letterWidth;
- (double)letterTopMargin;
- (id)defaultColor;
- (id)colors;
- (void)setUniqueIDForBaseURL:(id)arg1;
- (id)uniqueIDForBaseURL;
- (id)backgroundTile;
- (id)pathToBackgroundTile;
- (BOOL)hasImages;
- (id)_localizeHtml:(id)arg1 withTable:(id)arg2;
- (id)html;
- (id)attachmentsForImages:(id)arg1 typeIsBackground:(BOOL)arg2;
- (id)parsedMessage;
- (void)markAsUserCreatedCustomStationery;
- (BOOL)isUserCreatedCustomStationery;
- (void)setIsCustom:(BOOL)arg1;
- (BOOL)isCustom;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;

@end

@interface StationeryCompositeImage : NSObject
{
    NSData *_baseImageData;
    NSData *_overlayImageData;
    NSArray *_masks;
    NSMutableArray *_userImages;
    StationeryCompositeImageView *_view;
    NSString *_contentID;
    NSString *_mimeType;
    NSString *_preferredFilename;
    BOOL _isReadOnly;
    long long _index;
}

- (id)fileWrapper;
- (BOOL)isPlaceholder;
- (id)filename;
- (void)setFilename:(id)arg1;
- (id)preferredFilename;
- (void)setPreferredFilename:(id)arg1;
- (id)mimeType;
- (void)setMimeType:(id)arg1;
- (id)contentID;
- (void)setContentID:(id)arg1;
- (unsigned long long)approximateSize;
- (long long)index;
- (void)setIndex:(long long)arg1;
- (BOOL)isReadOnly;
- (void)setIsReadOnly:(BOOL)arg1;
- (id)filenameForCompositedImage;
- (id)mimeTypeForCompositedImage;
- (id)dataForCompositedImage;
- (long long)numberOfDropZones;
- (id)userImagesToSave;
- (id)userImages;
- (void)addUserImage:(id)arg1;
- (id)masks;
- (void)setMasks:(id)arg1;
- (id)overlayImage;
- (void)setOverlayImageData:(id)arg1;
- (id)baseImage;
- (void)setBaseImageData:(id)arg1;
- (void)setView:(id)arg1;
- (BOOL)isValid;
- (void)dealloc;
- (id)data;
- (id)initWithData:(id)arg1;
- (id)init;

@end

@interface StationeryCompositeImageMask : NSObject
{
    NSData *_maskImageData;
    NSImage *_maskImage;
    struct CGSize _dropZoneOffset;
    double _dropZoneAngle;
    struct CGSize _dropZoneSize;
    NSData *_placeholderImageData;
    NSImage *_placeholderImage;
}

- (struct CGSize)actualMaskSize;
- (struct CGRect)dropZoneRect;
- (struct CGRect)dropZoneBoundingBox;
- (struct CGSize)dropZoneSize;
- (void)setDropZoneSize:(struct CGSize)arg1;
- (double)dropZoneAngle;
- (void)setDropZoneAngle:(double)arg1;
- (struct CGSize)dropZoneOffset;
- (void)setDropZoneOffset:(struct CGSize)arg1;
- (void)discardPlaceholderImage;
- (id)placeholderImage;
- (void)setPlaceholderImageData:(id)arg1;
- (id)maskImage;
- (void)setMaskImageData:(id)arg1;
- (BOOL)isValid;
- (void)dealloc;
- (id)dictionary;
- (id)initWithDictionary:(id)arg1;

@end

@interface StationeryController : NSObject
{
    Stationery *_stationery;
    BOOL _isStationeryLoaded;
    NSString *_currentColor;
    double _letterTopMargin;
    double _letterWidth;
    id _savedResourceLoadDelegate;
    id _savedFrameLoadDelegate;
    long long _numberOfResourcesNotYetLoaded;
    BOOL _isLoadingStationery;
    BOOL _isChangingStationeryColor;
    BOOL _isLoadingResources;
    BOOL _shouldAnimateTransitions;
    WebView *_webView;
    ComposeBackEnd *_composeBackEnd;
    EditableWebMessageDocument *_messageDocument;
    NSMutableDictionary *_fontElementsWithColors;
    NSMutableArray *_colorsThatHaveBeenDisplayed;
    NSTimer *_flushWindowTimer;
}

- (id)stationeryFromCurrentMessageError:(id *)arg1;
- (void)changeStationeryColor:(id)arg1;
- (void)userClickedOnStationeryBackground:(id)arg1;
- (void)_webViewDidFinishLoadingAllResources;
- (void)_timerDidFire:(id)arg1;
- (void)webView:(id)arg1 didLoadResourceFromMemoryCache:(id)arg2 response:(id)arg3 length:(long long)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)_finishLoadingStationery;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)loadStationery:(id)arg1;
- (void)showColorOptions;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setStationeryIsLoaded:(BOOL)arg1;
- (BOOL)isStationeryLoaded;
- (void)setStationery:(id)arg1;
- (id)stationery;
- (void)setWebView:(id)arg1;
- (void)setComposeBackEnd:(id)arg1;
- (BOOL)isUpdatingWebView;
- (void)dealloc;

@end

@interface StationeryDynamicElement : NSObject
{
    unsigned long long _type;
    NSString *_dateFormat;
}

+ (id)dynamicElementFromDOMElement:(id)arg1;
- (id)description;
- (id)fragmentToReplaceHTMLObjectBackEnd:(id)arg1;
- (void)setDateFormat:(id)arg1;
- (unsigned long long)type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1;

@end

@interface StationeryLoader : NSObject
{
    NSMutableDictionary *_categoriesByDisplayName;
    NSMutableArray *_orderedCategoryDisplayNames;
    NSMutableDictionary *_orderedStationeryByCategoryDisplayName;
}

+ (void)purgeDeletedCustomStationery;
+ (id)pathForCustomCategoryResources;
+ (id)pathForCustomCategory;
+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_synchronouslyPurgeDeletedCustomStationery:(id)arg1;
- (void)purgeDeletedCustomStationery:(id)arg1;
- (void)_reinsertStationeryWithInformation:(id)arg1;
- (void)deleteStationeryWithDictionary:(id)arg1 fromCategoryWithDisplayName:(id)arg2 undoManager:(id)arg3;
- (BOOL)installStationery:(id)arg1;
- (BOOL)_saveCustomStationery:(id)arg1 byMovingFromPath:(id)arg2 error:(id *)arg3;
- (BOOL)saveCustomStationery:(id)arg1 error:(id *)arg2;
- (BOOL)_recursivelyCreateDirectory:(id)arg1 error:(id *)arg2;
- (void)_addToFavoritesInPosition:(long long)arg1 stationeryWithPath:(id)arg2 inCategoryWithDisplayName:(id)arg3;
- (void)addToFavoritesStationeryWithPath:(id)arg1 inCategoryWithDisplayName:(id)arg2;
- (BOOL)customStationeryWithNameExists:(id)arg1 index:(unsigned long long *)arg2;
- (BOOL)stationery:(id)arg1 isInCategoryWithDisplayName:(id)arg2;
- (void)thumbnailCreator:(id)arg1 didCreateThumbnail:(id)arg2 forCustomStationeryWithPath:(id)arg3;
- (void)thumbnailCreatorDidCreateThumbnailForCustomStationery:(id)arg1;
- (void)thumbnailCreatorDidCompletelyFinish:(id)arg1;
- (id)_categoryTOCForCategoryFolderName:(id)arg1 company:(id)arg2 type:(long long)arg3 categoryDisplayName:(id)arg4;
- (void)_updateStationeryInCategoryWithDisplayName:(id)arg1;
- (id)validatedStationeryDictionary:(id)arg1 withName:(id)arg2 categoryBundle:(id)arg3 needsThumbnail:(char *)arg4;
- (id)_validatedCompanyCategoryDictionary:(id)arg1 categoryFolderName:(id)arg2 companyBundle:(id)arg3 type:(long long)arg4;
- (id)_dictionaryForCustomCategoryForCompany:(BOOL)arg1;
- (void)_combinePartialTOCs:(id)arg1;
- (id)_companyTOCWithName:(id)arg1 type:(long long)arg2 isFromCache:(char *)arg3;
- (void)_updateCategories;
- (id)_cacheNameForCompany:(id)arg1 categoryDisplayName:(id)arg2 type:(long long)arg3;
- (void)_cacheTOC:(id)arg1 withName:(id)arg2;
- (id)_cachedTOCWithName:(id)arg1;
- (id)pathForStationeryNamed:(id)arg1 inCategoryWithDisplayName:(id)arg2;
- (id)bundlePathForCategoryWithFolderName:(id)arg1 company:(id)arg2 type:(long long)arg3;
- (void)createAppleUserCompanyBundleIfNecessary;
- (id)pathForFavoritesList;
- (id)orderedStationeryDictionariesForCategoryWithDisplayName:(id)arg1;
- (id)orderedCategoryDictionaries;
- (id)orderedCategoryDisplayNamesIncludingFavorites;
- (void)updateStationery;
- (id)_dictionaryForStationeryWithPath:(id)arg1 inCategoryWithDisplayName:(id)arg2 position:(long long *)arg3;
- (id)_dictionaryForStationeryWithPath:(id)arg1 inCategoryWithDisplayName:(id)arg2;
- (id)pathForStationeryWithID:(id)arg1;
- (id)stationeryWithPath:(id)arg1;
- (id)stationeryWithID:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;

@end

@interface _StationeryThumbnailCreator : NSObject <MCActivityTarget>
{
    id _delegate;
    NSArray *_stationeryPaths;
    NSString *_categoryDisplayName;
    long long _currentStationeryIndex;
    Stationery *_currentStationery;
    WebView *_webView;
    NSWindow *_window;
    EditableWebMessageDocument *_webMessageDocument;
    NSBitmapImageRep *_snapshot;
}

- (void)scaleSnapshotAndSendToDelegate;
- (void)takeSnapshot;
- (void)performTakeSnapshot;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)moveOnToTheNextStationery;
- (void)loadParsedMessage:(id)arg1;
- (void)createWebView;
- (void)createThumbnailsForCustomStationeriesWithPaths:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

@interface _EmptyFavoritesMessageView : NSView
{
}

- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface StationerySelector : NSObject <NSTableViewDataSource, NSTableViewDelegate>
{
    NSTableView *_categoriesTableView;
    ThumbnailMatrix *_thumbnailMatrix;
    DocumentEditor *_documentEditor;
    NSView *_selectorPane;
    ColorBackgroundView *_horizontalScrollerBackground;
    _EmptyFavoritesMessageView *_emptyFavoritesMessageView;
    NSScrollView *_thumbnailsScrollView;
    NSImageView *_thumbnailLeftSideShadowView;
    double _minimumScrollViewContentOriginX;
    StationeryLoader *_stationeryLoader;
    NSArray *_categoryDictionaries;
    NSArray *_stationeryDictionaries;
    NSMutableArray *_deletedStationery;
    NSMutableDictionary *_scrollPositionByCategory;
    BOOL _isFirstShowOfCategoriesForFavorites;
    BOOL _isFirstShowOfCategoriesForExistingStationery;
    BOOL _hasRegisteredForNewThumbnailImageNotifications;
}

- (void)_thumbnailsDidScroll:(id)arg1;
- (BOOL)_draggingPasteboardContainsStationery;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_thumbnailImageIsAvailable:(id)arg1;
- (BOOL)handleDropIntoFavorites;
- (void)startDragSessionFromIndex:(long long)arg1 withImage:(id)arg2 event:(id)arg3;
- (void)deleteStationery:(id)arg1;
- (void)clearStationerySelection;
- (void)selectStationery:(id)arg1;
- (void)_setStationeryDictionaries:(id)arg1;
- (void)_displayStationery:(id)arg1 showDeleteButtons:(BOOL)arg2 beginningAtIndex:(long long)arg3;
- (void)_restoreThumbnailScrollPosition;
- (void)_saveThumbnailScrollPosition;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (void)selectCategory:(id)arg1;
- (void)_stationeryDidChange:(id)arg1;
- (void)_refreshStationery;
- (void)showStationery;
- (double)scrollerProportion;
- (double)scrollerValue;
- (double)horizontalScrollerWidth;
- (double)stationeryPaneHeight;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface StatusCell : NSImageTextFieldCell
{
    long long _statusType;
}

@property(nonatomic) long long statusType; // @synthesize statusType=_statusType;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface SubjectFormatter : NSFormatter
{
}

- (BOOL)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)editingStringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;

@end

@interface TableHeaderView : NSTableHeaderView
{
    BOOL _noSeparatorLines;
}

+ (id)updateHeaderViewForTableView:(id)arg1;
- (BOOL)_drawingEndSeparator;
- (void)setDrawsSeparatorLines:(BOOL)arg1;
- (BOOL)drawsSeparatorLines;

@end

@interface TableViewManager : NSObject <MVSelectionOwner, NSTableViewDelegate, NSTableViewDataSource>
{
    MailTableView *_tableView;
    id <MessageMall> _messageMall;
    NSArray *_tableColumns;
    MessageViewer *_delegate;
    NSMutableArray *_selection;
    BOOL _suspendChangesToScrollingAndSelection;
    NSDictionary *_messageIDsToSelectWhenOpened;
    NSArray *_threadIDsToOpenWhenOpened;
    NSMapTable *_storeStateTable;
    _VisibleStateObject *_visibleStateBeforeSearch;
    long long _windowWidthBeforeSearch;
    NSMutableSet *_mouseTrackers;
    struct {
        unsigned int includeDeleted:1;
        unsigned int isFocused:1;
        unsigned int sortColumnOrderAscending:1;
        unsigned int mailboxSortColumnOrderAscending:1;
        unsigned int isShowingSearchResults:1;
        unsigned int sortColumnOrder:8;
        unsigned int mailboxSortColumnOrder:8;
        unsigned int hasScrolledSinceMailboxChange:1;
        unsigned int userChangedSelectionSinceMailboxChange:1;
        unsigned int threadOpeningIsInProgress:1;
        unsigned int threadClosingIsInProgress:1;
        unsigned int doubleClickThreadOpeningIsInProgress:1;
        unsigned int animatingThreadOpening:1;
        unsigned int animatingThreadClosing:1;
        unsigned int animateInSlowMotion:1;
        unsigned int dontUpdateTrackingRects:1;
        unsigned int useBoldFontForUnreadMessages:1;
        unsigned int clearingSearch:1;
        unsigned int selectionShouldNotChange:1;
        unsigned int selectingMessagesForTransfer:1;
    } _flags;
    BOOL _isRichMessageList;
    BOOL _keepSelectionWhenTogglingThread;
    int _searchTarget;
    long long _searchField;
    BOOL _needsColumnSetup;
    NSFont *_font;
    NSArray *_expandedSelection;
    NSArray *_expandedSelectionForTransfer;
    struct _NSRange _filteredMessagesRange;
    NSMutableAttributedString *_truncatedString;
    NSMutableDictionary *_truncatedStringAttributes;
    NSMutableDictionary *_truncatedParagraphStyle;
    long long _leftmostTextColumn;
    long long _colorHighlightLeftEdge;
    long long _colorHighlightWidth;
    NSMutableSet *_messagesInSelectedThread;
    MFMessageThread *_threadBeingClosed;
    MFMessageThread *_threadBeingOpened;
    struct CGPoint _lastMouseDownInUnreadColumnPoint;
    long long _lastMouseDownInUnreadColumnEventNumber;
    struct CGPoint _currentMouseLocationInWindow;
    long long _numberOfSelectedRowsBeforeTogglingThread;
    long long _selectedRowBeforeTogglingThread;
    BOOL _isDragging;
    BOOL _didAwake;
    BOOL _isShowingToCc;
    BOOL _isShowingContactPhotos;
    unsigned long long _numberOfSnippetLines;
    NSTableColumn *_richTableColumn;
    NSTableHeaderView *_tableHeaderView;
    long long _previouslyViewedMessageRow;
    long long _currentViewedMessageRow;
    int _nextMessageDirection;
    MessageListContainerView *_messageListContainerView;
    BOOL _shouldShowSnapshotView;
    NSFont *_boldFont;
    NSArray *_draggedMessages;
    NSArray *_filteredMessagesFromMouseDown;
    long long _lastRequestedRow;
    NSMutableSet *_messagesBeingFetched;
    NSString *_messageIDToReveal;
    NSImageView *_messageListSnapshotView;
    NSCache *_snippetsForMessage;
    NSObject *_snippetLock;
}

+ (id)specialImageForMessageCount:(unsigned long long)arg1 offset:(struct CGPoint *)arg2;
+ (void)initialize;
+ (id)_getThreadBackgroundColorForThread:(id)arg1;
+ (id)_getDarkerThreadBackgroundColorForThread:(id)arg1;
@property(readonly, nonatomic) NSObject *snippetLock; // @synthesize snippetLock=_snippetLock;
@property(readonly, nonatomic) NSCache *snippetsForMessage; // @synthesize snippetsForMessage=_snippetsForMessage;
@property(nonatomic) BOOL shouldShowSnapshotView; // @synthesize shouldShowSnapshotView=_shouldShowSnapshotView;
@property(retain, nonatomic) NSImageView *messageListSnapshotView; // @synthesize messageListSnapshotView=_messageListSnapshotView;
@property(retain, nonatomic) NSString *messageIDToReveal; // @synthesize messageIDToReveal=_messageIDToReveal;
@property(readonly, nonatomic) NSMutableSet *messagesBeingFetched; // @synthesize messagesBeingFetched=_messagesBeingFetched;
@property(nonatomic) long long lastRequestedRow; // @synthesize lastRequestedRow=_lastRequestedRow;
@property(retain, nonatomic) NSArray *filteredMessagesFromMouseDown; // @synthesize filteredMessagesFromMouseDown=_filteredMessagesFromMouseDown;
@property(copy) NSArray *draggedMessages; // @synthesize draggedMessages=_draggedMessages;
@property(readonly, nonatomic) BOOL isRichMessageList; // @synthesize isRichMessageList=_isRichMessageList;
@property(retain) NSFont *boldFont; // @synthesize boldFont=_boldFont;
- (void)setIncludeDeleted:(BOOL)arg1;
- (BOOL)includeDeleted;
- (id)messageToSelectIfEntireSelectionRemoved:(id)arg1;
- (void)_recordSelectionHistoryForRow:(long long)arg1;
- (void)_resetNextMessageTracking;
- (BOOL)_goUpInsteadOfDown;
- (long long)_indexOfFirstNonDeletedNonSelectedMessage:(long long)arg1 withinRowRange:(struct _NSRange)arg2 goUp:(BOOL)arg3;
- (id)messageMall;
- (id)mailTableView:(id)arg1 rangesForBackgroundShadingInRange:(struct _NSRange)arg2 shadingColors:(id *)arg3 leftColumnColors:(id *)arg4;
- (BOOL)shouldTrackMouse:(id)arg1;
- (void)mailTableView:(id)arg1 gotEvent:(id)arg2;
- (void)_setButtonCellNeedsDisplay;
- (void)_callWillDisplayCellForClickedCell;
- (struct CGPoint)_mouseLocationInWindow;
- (struct CGRect)frameOfClickedCell;
- (void)mailTableView:(id)arg1 willDrawRowsInRange:(struct _NSRange)arg2;
- (id)mailTableView:(id)arg1 dragImageForRowsWithIndexes:(id)arg2 event:(id)arg3 dragImageOffset:(struct CGPoint *)arg4;
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)mailTableView:(id)arg1 didMouseDown:(id)arg2;
- (void)mailTableView:(id)arg1 willMouseDown:(id)arg2;
- (void)mailTableViewDragWillEnd:(id)arg1 operation:(unsigned long long)arg2;
- (BOOL)transferSelectionToMailbox:(id)arg1 deleteOriginals:(BOOL)arg2;
- (void)transfer:(id)arg1 didCompleteWithError:(id)arg2;
- (id)messagesToTransferIsMove:(BOOL)arg1;
- (id)_filterAndExpandMessagesForTransfer:(id)arg1;
- (void)mailTableViewDraggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)archiveMessages:(id)arg1 allowUndo:(BOOL)arg2;
- (BOOL)shouldDeleteMessagesGivenCurrentState:(id)arg1;
- (void)undeleteMessagesAllowingUndo:(BOOL)arg1;
- (void)deleteMessages:(id)arg1 allowMoveToTrash:(BOOL)arg2 allowUndo:(BOOL)arg3;
- (void)_redeleteMessages:(id)arg1 messagesToSelect:(id)arg2;
- (void)undeleteMessages:(id)arg1 allowUndo:(BOOL)arg2;
- (void)_undeleteMessages:(id)arg1 allowUndo:(BOOL)arg2 unreadMessages:(id)arg3;
- (void)selectMessagesForMessageTransferUndo:(id)arg1;
- (void)selectMessagesForMessageTransfer:(id)arg1;
- (void)_adjustScrollPositionForTransferedMessages:(id)arg1 isUndo:(BOOL)arg2;
- (id)_undoActionNameForMessageCount:(unsigned long long)arg1;
- (BOOL)mailTableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)tableView;
- (id)messageStore;
- (id)currentDisplayedMessage;
- (BOOL)shouldViewRelatedMessagesForMessage:(id)arg1;
- (id)parentThreadForChildMessage:(id)arg1;
- (id)messageThatUserIsProbablyReading;
- (void)selectMessages:(id)arg1;
- (void)_selectMessages:(id)arg1 scrollIfNeeded:(BOOL)arg2;
- (id)selection;
- (id)selectionExpandingThreadsAndHiddenCopies:(BOOL)arg1;
- (void)deleteSelectionAllowingMoveToTrash:(BOOL)arg1;
- (void)deleteKeyPressed;
- (void)_snippetsUpdated:(id)arg1;
- (void)_updateRowsWithNewSnippets:(id)arg1;
- (void)_updateSnippetsForMessage:(id)arg1 ignoreExpected:(BOOL)arg2;
- (void)clearSnippetCacheForMessages:(id)arg1;
- (void)mallPrefetchedSnippets:(id)arg1;
- (void)resetSnippetCache;
- (id)_messagesNeedingSnippetsAroundRow:(unsigned long long)arg1;
- (void)_performSnippetFetching;
- (void)_cacheSnippetsAroundRow:(unsigned long long)arg1;
- (id)_snippetFetchQueue;
- (id)_snippetForMessage:(id)arg1;
- (void)_doubleClickedMessage:(id)arg1;
- (id)mailTableViewTopLineColor:(id)arg1;
- (int)mailTableView:(id)arg1 highlightStyleForRow:(long long)arg2 inRect:(struct CGRect *)arg3 color:(id *)arg4;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_cachedMessageDataForRow:(long long)arg1 flags:(unsigned int *)arg2 appliedFlagColors:(id *)arg3;
- (void)invalidateRowDataCache;
- (void)_resetObjectValueForCellView:(id)arg1;
- (void)_prepareCell:(id)arg1 withMessage:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (void)_setupRowView:(id)arg1 atIndex:(long long)arg2;
- (void)_setupRowViewAtRow:(long long)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)mailTableViewDidEndLiveResize:(id)arg1;
- (void)mailTableViewWillStartLiveResize:(id)arg1;
- (void)tableViewFrameChangedDuringLiveResize:(id)arg1;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)updateColorHighlightEdges;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_truncatedAttributedStringForString:(id)arg1 message:(id)arg2 row:(long long)arg3 shouldIndent:(BOOL)arg4;
- (id)_colorForMessage:(id)arg1 inRow:(long long)arg2 withCell:(id)arg3;
- (id)_messageSelectionColor;
- (id)_attributesForTruncatedParagraphStyle;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_datesNeedRedisplay:(id)arg1;
- (void)mailTableViewDidResignFirstResponder:(id)arg1;
- (void)mailTableViewDidBecomeFirstResponder:(id)arg1;
- (void)_redisplayRowsAboveSelected;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)_normalizedSelection:(id)arg1;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)_selectOrDeselectMembersOfThread:(id)arg1 atIndex:(long long)arg2 select:(BOOL)arg3;
- (void)updateViewingPaneToSelection;
- (id)selectedThread;
- (id)_messageSelectionWithDataForPrinting:(BOOL)arg1;
- (id)messageSelectionForPrinting;
- (id)messageSelection;
- (void)_updateSelectedThreadList;
- (void)_setNeedsDisplayThreadColumnForMessagesInSet:(id)arg1;
- (void)_reloadDisplayOnlyForMessagesInSet:(id)arg1 highlightOnly:(BOOL)arg2;
- (BOOL)_isMessageInSelectedThread:(id)arg1;
- (long long)mailTableView:(id)arg1 shouldScrollRowToVisible:(long long)arg2;
- (void)scrollRowToVisible:(long long)arg1 position:(int)arg2;
- (BOOL)isSelectionVisible;
- (void)showSelectionAndCenter:(BOOL)arg1;
- (void)selectPreviousReplyToParent;
- (void)selectNextReplyToParent;
- (void)selectPeer:(BOOL)arg1;
- (void)selectFirstReplyToMessage;
- (void)selectParentOfMessage;
- (void)selectPreviousMessage:(int)arg1;
- (void)selectNextMessage:(int)arg1;
- (BOOL)nextMessageIsBelow;
- (BOOL)selectOldestUnreadOrNewestMessageInThread;
- (BOOL)openSelectedThread;
- (BOOL)stepOutOfSelectedThread;
- (BOOL)stepIntoSelectedThread;
- (void)selectNextMessageMovingUpward:(int)arg1;
- (void)selectNextMessageMovingDownward:(int)arg1;
- (long long)_modifierFlagsForKeyboardNavigation;
- (BOOL)selectionIsExactlyOneOpenThread;
- (BOOL)canSelectNextReplyToParent;
- (BOOL)canSelectFirstReplyToMessage;
- (BOOL)canSelectParentOfMessage;
- (BOOL)canSelectNextThreadedMessage;
- (BOOL)canSelectPreviousThreadedMessage;
- (long long)_indexOfMessageNearest:(long long)arg1 numberOfRows:(long long)arg2 threaded:(BOOL)arg3 downward:(BOOL)arg4;
- (void)toggleThread:(id)arg1 ignoreModifierKeys:(BOOL)arg2;
- (void)toggleThread:(id)arg1;
- (void)closeAllThreads;
- (void)openAllThreads;
- (BOOL)closeThreadAtIndex:(long long)arg1 focusRow:(long long)arg2 animate:(BOOL)arg3;
- (BOOL)openThreadAtIndex:(long long)arg1 andSelectMessage:(id)arg2 animate:(BOOL)arg3;
- (void)invalidateSelectionCache:(id)arg1;
- (void)_threadedModeDidChange:(id)arg1;
- (void)toggleThreadedMode;
- (BOOL)isInThreadedMode;
@property(retain, nonatomic) NSFont *font;
- (void)_updateTableViewRowHeight;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (double)tableViewRowHeightForRichMessageList:(BOOL)arg1;
- (void)makeMessageListFirstResponder;
- (void)selectAllMessagesAndMakeFirstResponder;
- (long long)tableViewNumberOfColumnsToPinToLefthandSide:(id)arg1;
- (BOOL)mailTableView:(id)arg1 shouldAddTableColumn:(id)arg2;
- (BOOL)mailTableView:(id)arg1 shouldRemoveTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (void)_setColumn:(long long)arg1 toVisible:(BOOL)arg2;
- (void)setColumn:(long long)arg1 toVisible:(BOOL)arg2;
- (void)_updateAttributesForMailboxes;
- (BOOL)isColumnVisible:(long long)arg1;
- (BOOL)_isAutomaticInsertionWhileSearchingOkayForColumn:(long long)arg1;
- (BOOL)_isColumnVisibleInSettings:(long long)arg1;
- (id)_unreadColumn;
- (id)_columnWithIdentifierTag:(long long)arg1;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)_updateTableHeaderToMatchCurrentSort;
- (void)_threadColorPreferenceChanged:(id)arg1;
- (void)_snippetLinePreferenceChanged:(id)arg1;
- (void)_contactPhotoPreferenceChanged:(id)arg1;
- (void)_toCcPreferenceChanged:(id)arg1;
- (void)_viewerLayoutPreferenceChanged:(id)arg1;
- (void)_viewerPreferencesChanged:(id)arg1;
- (BOOL)canSelectPreviousMessage;
- (BOOL)canSelectNextMessage;
- (void)readStoreSpecificAttributesFromDictionary:(id)arg1;
- (void)readStoreSpecificAttributesFromMailbox:(id)arg1;
- (void)writeStoreSpecificAttributesToMailbox:(id)arg1;
- (void)writeAttributesToDictionary:(id)arg1;
- (void)readAttributesFromDictionary:(id)arg1;
- (void)setupColumnManagerFromDictionary:(id)arg1;
- (void)_mallConversationsUpdated:(id)arg1;
- (void)_messagesUpdated:(id)arg1;
- (void)_messageMarkedForOverwrite:(id)arg1;
- (void)setMessageMall:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)prepareForWindowClose;
- (void)dealloc;
- (void)_configureTableViewLayoutWithTableColumnResizingMasks:(id)arg1;
- (void)_setupColumnsForTableView;
- (void)showFollowupsToMessageAtRow:(long long)arg1;
- (void)showFollowupsToMessage:(id)arg1;
- (void)richUnreadButtonClicked:(id)arg1;
- (void)_createTintedImages;
- (void)_configureRichMessageListColumn;
- (void)_configureColumnForRolloverCell:(id)arg1 alignment:(unsigned long long)arg2 action:(SEL)arg3;
- (void)_configureColumnForImageCell:(id)arg1 alignment:(unsigned long long)arg2;
- (void)_configureColumnForEndTruncation:(id)arg1;
- (void)_setupTableColumnWidths;
- (void)_setupColumnHeaderIcon:(id)arg1 inColumnWithIdentifier:(id)arg2 accessibilityTitle:(id)arg3 alignment:(unsigned long long)arg4;
- (void)_tableViewScrolled:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)tableViewGetDefaultMenu:(id)arg1;
- (void)_unregisterTableViewNibs;
- (void)_registerTableViewNibs;
- (void)awakeFromNib;
- (id)init;
- (void)setAppleScriptVisibleColumns:(id)arg1;
- (id)appleScriptVisibleColumns;
- (void)setAppleScriptSortColumn:(unsigned int)arg1;
- (unsigned int)appleScriptSortColumn;
- (long long)_columnForAppleScriptColumn:(unsigned int)arg1;
- (BOOL)selectMessageWithIDIfExists:(id)arg1;
- (void)mailTableViewDidMoveToWindow:(id)arg1;
- (void)mailTableView:(id)arg1 willMoveToWindow:(id)arg2;
- (void)openOrCloseThread:(id)arg1 flag:(BOOL)arg2 clickedRow:(long long)arg3 rowToSelectInOpeningThread:(long long)arg4;
- (double)_scrollRectToVisibleAdjustment:(struct CGRect)arg1 visibleRect:(struct CGRect)arg2;
- (BOOL)_isRowVisible:(long long)arg1;
- (double)_getAnimationDuration:(long long)arg1;
- (long long)_indexOfMemberToSelectWhenOpeningThread:(id)arg1;
- (void)updateTrackingRects;
- (void)clearTrackingRects;
- (id)filteredMessages;
- (long long)state;
- (void)setIsSortedAscending:(BOOL)arg1;
- (BOOL)isSortedAscending;
- (void)setSortColumn:(long long)arg1 ascending:(BOOL)arg2;
- (id)sortByStringForColumn:(long long)arg1;
- (long long)sortColumn;
- (BOOL)isSortedChronologically;
- (BOOL)isSortedByDateReceived;
- (void)setFocusedMessages:(id)arg1;
- (BOOL)isFocused;
- (void)searchForString:(id)arg1 in:(int)arg2 withOptions:(long long)arg3;
- (void)searchForSuggestions:(id)arg1 in:(int)arg2 withOptions:(long long)arg3 fromSuggestionsSearchField:(id)arg4;
- (void)_searchForString:(id)arg1 orSuggestions:(id)arg2 in:(int)arg3 withOptions:(long long)arg4 fromSuggestionsSearchField:(id)arg5;
- (BOOL)isShowingSearchResults;
- (void)clearSearch;
- (void)setSelectedMessageIDs:(id)arg1 openThreadIDs:(id)arg2 withOverride:(BOOL)arg3;
- (id)openThreadIDs;
- (id)selectedMessageIDs;
- (BOOL)restoreScrollAndSelectionWithForceSelection:(BOOL)arg1;
- (void)saveScrollAndSelection;
- (void)_saveScrollAndSelection:(BOOL)arg1;
- (id)persistentVisibleStateCreateIfNecessary:(BOOL)arg1;
- (long long)indexOfLastReadMessage;
- (long long)indexOfTopmostVisibleMessageMustBeSelected:(BOOL)arg1 okayIfDeleted:(BOOL)arg2;
- (void)dumpVisibleState;
- (BOOL)_restoreVisibleState:(id)arg1 forceSelToVisible:(BOOL)arg2;
- (void)_recordVisibleState:(id)arg1 deletedAreGoingAway:(BOOL)arg2 considerPinToEnd:(BOOL)arg3;
- (void)_scrollToHappyPlace;
- (void)messageFlagsChanged:(id)arg1;
- (void)messagesCompacted:(id)arg1;
- (void)_updateSearchDelegate;
- (void)mallFinishedLoading:(id)arg1;
- (void)_setupColumns;
- (void)mallStructureChanged:(id)arg1;
- (void)mallSortChanged:(id)arg1;
- (void)setMailboxes:(id)arg1 isSettingUpUI:(BOOL)arg2;
- (void)mallStructureWillChange:(id)arg1;
- (void)_removeMessageListSnapshot;
- (void)_snapshotMessageList;
- (BOOL)_debugThreadAnimation;

@end

@interface TemporaryAttachmentOpener : GenericAttachmentFetcher
{
    NSString *_applicationPath;
}

- (double)temporaryFolderTimeout;
- (void)didSaveAttachment:(id)arg1 toPath:(id)arg2;
- (void)_openAttachmentAtPath:(id)arg1;
- (void)downloadedAllAttachments;
- (void)dealloc;
- (id)initWithAttachments:(id)arg1;
- (id)initWithAttachments:(id)arg1 applicationPath:(id)arg2;

@end

@interface TemporaryItemManager : NSObject <NSFileManagerDelegate>
{
    NSString *_path;
    NSTimer *_timer;
}

+ (id)temporaryItemManagerWithRelativePath:(id)arg1 cleanupInterval:(double)arg2;
+ (void)cleanupAllItems;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
- (void)cleanUpDirectory;
- (void)setExpirationDate:(id)arg1;
- (void)_setUpTimer:(id)arg1;
- (id)expirationDate;
- (id)path;
- (void)dealloc;

@end

@interface _TextButtonCell : NSButtonCell
{
    long long _buttonType;
}

@property long long buttonType; // @synthesize buttonType=_buttonType;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TextButtonToolbarItem : NSToolbarItem
{
}

- (void)setLabel:(id)arg1;
- (id)control;
- (void)validate;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (id)initWithItemIdentifier:(id)arg1;

@end

@interface TextMessageDisplay : NSObject <NSTextViewDelegate>
{
    MessageTextView *_textView;
    NSAttributedString *_rawSourceString;
    BOOL _showControlCharacters;
    NSWindow *_singleWindow;
    MCMessage *_message;
}

+ (void)_removeDisplayForMessage:(id)arg1;
+ (void)displayRawSourceForMessage:(id)arg1;
@property(retain, nonatomic) MCMessage *message; // @synthesize message=_message;
@property(retain, nonatomic) NSWindow *singleWindow; // @synthesize singleWindow=_singleWindow;
- (void)saveAs:(id)arg1;
- (void)toggleShowControlCharacters:(id)arg1;
- (void)showPrintPanel:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)bringToFront;
- (BOOL)validateMenuItem:(id)arg1;
- (id)messageTextView:(id)arg1 willReturnMenu:(id)arg2 forEvent:(id)arg3;
- (void)_displayRawSource;
- (void)_prepareForMessage:(id)arg1;
- (void)_beginBackgroundLoad;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface _ThreadDisclosureTextFieldCell : NSTextFieldCell
{
    BOOL _threadIsOpen;
}

+ (id)_selectionColor;
+ (id)_lightBorderColor;
+ (id)_darkBorderColor;
+ (void)_recacheStaticArrowImages:(id)arg1;
@property(nonatomic) BOOL threadIsOpen; // @synthesize threadIsOpen=_threadIsOpen;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)setBackgroundStyle:(long long)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawThreadControlWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (void)_registerForColorChangeNotifications;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface ThreadDisclosureTextField : NSTextField
{
}

@property(nonatomic) BOOL isOpen;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_updateWithCustomCell;

@end

@interface ThumbnailButtonCell : NSButtonCell
{
    NSButton *_deleteButton;
    long long _trackingRectTag;
}

- (unsigned long long)focusRingType;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (long long)trackingRectTag;
- (void)setTrackingRectTag:(long long)arg1;
- (void)setDeleteButton:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)dealloc;
- (id)initImageCell:(id)arg1;

@end

@interface ThumbnailMatrix : NSMatrix
{
    BOOL _shouldShowButtons;
}

- (BOOL)_performDragFromMouseDown:(id)arg1;
- (struct CGRect)frameOfThumbnailAtIndex:(long long)arg1;
- (void)_addButtonAtIndex:(long long)arg1;
- (void)showDeleteButtons:(BOOL)arg1 beginningAtIndex:(long long)arg2;
- (void)highlightCell:(BOOL)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)awakeFromNib;

@end

@interface ThunderbirdEmailImporter : FilesystemEmailImporter
{
}

+ (id)explanatoryText;
+ (id)name;
- (char *)fromString;
- (id)pathExtensions;

@end

@interface TilingWebView : WebView
{
    unsigned int _isAdjusting:1;
    unsigned int _disableSizeToFit:1;
    double _minHeight;
    double _leftMargin;
}

@property double minHeight; // @synthesize minHeight=_minHeight;
@property double leftMargin; // @synthesize leftMargin=_leftMargin;
- (void)sizeToFit;
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;
@property BOOL disableSizeToFit;

@end

@interface TransparentImageView : NSImageView
{
    NSView *_backgroundView;
}

- (id)accessibilityAttributeValue:(id)arg1;
- (void)awakeFromNib;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _VisibleStateObject : NSObject
{
    BOOL _hadSelection;
    BOOL _selectionWasVisible;
    BOOL _scrollerWasAtEnd;
    BOOL _forceSelToVisible;
    MCMessage *_messageToPin;
    double _msgUpperLeft;
    NSMutableDictionary *_selectedMessageIDs;
    NSArray *_openThreadIDs;
}

@property(retain, nonatomic) NSArray *openThreadIDs; // @synthesize openThreadIDs=_openThreadIDs;
@property(retain, nonatomic) NSMutableDictionary *selectedMessageIDs; // @synthesize selectedMessageIDs=_selectedMessageIDs;
@property(nonatomic) double msgUpperLeft; // @synthesize msgUpperLeft=_msgUpperLeft;
@property(retain, nonatomic) MCMessage *messageToPin; // @synthesize messageToPin=_messageToPin;
@property(nonatomic) BOOL forceSelToVisible; // @synthesize forceSelToVisible=_forceSelToVisible;
@property(nonatomic) BOOL scrollerWasAtEnd; // @synthesize scrollerWasAtEnd=_scrollerWasAtEnd;
@property(nonatomic) BOOL selectionWasVisible; // @synthesize selectionWasVisible=_selectionWasVisible;
@property(nonatomic) BOOL hadSelection; // @synthesize hadSelection=_hadSelection;
- (void)dealloc;

@end

@interface _MouseTracker : NSObject
{
    NSView *_view;
    struct CGRect _trackingRect;
    long long _trackingRectTag;
    BOOL _mouseOver;
    id _delegate;
}

- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_updateMouseIsOver;
- (BOOL)mouseOver;
- (id)view;
- (struct CGRect)trackingRect;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithTrackingRect:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TypeAheadWindow : FullScreenModalCapableWindow
{
    BOOL _shouldFlushTypeAheadEvents;
    BOOL _sendMouseDownNotifications;
}

+ (BOOL)handleEvent:(id)arg1;
- (void)performTextFinderAction:(id)arg1;
- (BOOL)canEnterFullScreenMode;
- (void)sendMouseDownNotifications:(BOOL)arg1;
- (void)sendEvent:(id)arg1;
- (void)close;
- (void)_flushTypeAheadEvents;
- (void)becomeKeyWindow;
- (void)flushTypeAheadEventsWhenAppropriate;
- (void)startRecordingTypeAheadEvents;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 screen:(id)arg5;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface UnfoldAnimationController : NSObject
{
    NSWindow *_window;
    NSOpenGLContext *_glContext;
    QCRenderer *_renderer;
    NSTimer *_timer;
    struct CGSize _size;
    double _foldTop;
    double _foldHeight;
    double _startTime;
    double _duration;
    id _completionBlock;
}

@property(readonly, nonatomic) double overflowHeight;
- (void)_renderTimer:(id)arg1;
- (void)stopAnimation;
- (void)startAnimationWithDestinationImage:(id)arg1 completionBlock:(id)arg2;
- (void)setFoldHeight:(double)arg1;
- (void)prepareAnimationWithBackgroundImage:(id)arg1 sourceImage:(id)arg2 foldTop:(double)arg3 contentTop:(double)arg4 contentBottom:(double)arg5 sideMargin:(double)arg6 screenRect:(struct CGRect)arg7 parentWindow:(id)arg8;
- (void)dealloc;

@end

@interface UserNotificationCenterController : NSObject <NSUserNotificationCenterDelegate>
{
    BOOL _isRichList;
    MFMailbox *_userNotificationMailbox;
    unsigned long long _userNotificationScope;
    NSMutableDictionary *_messagesInNeedingSnippetsInMailboxes;
    NSMutableSet *_messagesSentBySelf;
    NSMutableSet *_forcedNotificationMessageIDs;
    unsigned long long _numberOfSnippetLines;
    BOOL _shouldLogUserNotificationEvents;
    NSOperationQueue *_operationQueue;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (BOOL)_shouldSendUserNotificationForMessage:(id)arg1 inMailbox:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didDismissAlert:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldActivateForNotification:(id)arg2;
- (void)setUserNotificationScope:(unsigned long long)arg1 mailbox:(id)arg2;
- (unsigned long long)userNotificationScope;
- (void)_deleteUserNotificationWithKey:(id)arg1 object:(id)arg2;
- (void)_mailAccountsChanged:(id)arg1;
- (void)_viewerLayoutPreferenceChanged:(id)arg1;
- (void)_messagesWereReadOrDeleted:(id)arg1;
- (void)_sendUserNotificationForSenderName:(id)arg1 subject:(id)arg2 snippet:(id)arg3 messageID:(id)arg4 accountID:(id)arg5 mailboxPersistentID:(id)arg6 messageDate:(id)arg7 isVip:(BOOL)arg8;
- (void)_postUserNotificationForMessagesInMailboxes:(id)arg1 withSnippets:(id)arg2;
- (void)_messageSnippetsUpdated:(id)arg1;
- (id)_snippetsForMessagesInMailboxes:(id)arg1;
- (void)_ruleWasMatched:(id)arg1;
- (void)_messagesGmailLabelsChanged:(id)arg1;
- (void)_messagesWereAdded:(id)arg1;
- (void)_snippetLinePreferenceChanged:(id)arg1;
- (id)userNotificationMailbox;
- (void)_setUserNotificationMailbox:(id)arg1;
- (void)_mailboxWillBeInvalidated:(id)arg1;
- (void)_clearNotificationsForDeletedAccounts;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface UserScriptGenerator : NSObject
{
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSArray *userScripts;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;

@end

@interface UserStyleSheetGenerator : NSObject
{
    NSString *_styleSheetString;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)_generateStyleSheetString;
@property(retain, nonatomic) NSString *userStyleSheetString;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)dealloc;
- (id)init;

@end

@interface VerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface ViewerPreferences : NSPreferencesModule <NSTableViewDataSource>
{
    NSButton *_highlightThreadCheckbox;
    NSColorWell *_threadHighlightColorWell;
    NSButton *_loadURLsSwitch;
    NSButton *_showUnreadMessagesInBoldSwitch;
    NSButton *_useSmartAddressesSwitch;
    NSPopUpButton *_headerDetailPopup;
    NSTableView *_customHeaderTable;
    NSSegmentedControl *_addRemoveHeaderControl;
    NSPanel *_customHeaderPanel;
    NSMutableArray *_filteredHeaders;
    BOOL _isEditingHeader;
    NSPopUpButton *_snippetLinesPopup;
    NSButton *_classicLayoutButton;
    NSButton *_toCcButton;
    NSButton *_contactPhotosButton;
    NSButton *_viewRelatedMessagesButton;
}

+ (void)postSnippetLinesPreferenceChanged;
+ (void)postContactPhotoPreferenceChanged;
+ (void)_postToCcPreferenceChanged;
+ (void)postLayoutPreferenceChanged;
+ (void)postViewingPreferencesChanged;
- (void)viewRelatedMessagesClicked:(id)arg1;
- (void)contactPhotosClicked:(id)arg1;
- (void)toCcClicked:(id)arg1;
- (void)classicLayoutClicked:(id)arg1;
- (void)snippetLinesChanged:(id)arg1;
- (void)showUnreadMessagesInBoldChanged:(id)arg1;
- (void)threadHighlightColorChanged:(id)arg1;
- (void)highlightThreadClicked:(id)arg1;
- (void)headerDetailLevelChanged:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)addRemoveHeaderClicked:(id)arg1;
- (void)cancelClicked:(id)arg1;
- (void)okClicked:(id)arg1;
- (void)_endEditingHeader;
- (void)_removeInvalidHeaders;
- (void)_headerTableEndedEditing:(id)arg1;
- (void)_headerTableBeganEditing:(id)arg1;
- (void)_editCustomHeadersClicked;
- (void)useSmartAddressesClicked:(id)arg1;
- (void)loadURLsClicked:(id)arg1;
- (void)initializeFromDefaults;
- (void)_updateCustomHeaderUI;
- (void)_initializeHeaderDetailLevelPopup;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)windowTitle;
- (id)titleForIdentifier:(id)arg1;
- (BOOL)isResizable;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface ViewingPaneView : NSView
{
    BOOL _showTopDividerEdgeOnly;
    NSImageView *_snapshotView;
    NSView *_contentView;
    NSMutableArray *_subviewConstraints;
    CALayer *_edgeLayer;
    CALayer *_shadowLayer;
}

@property(nonatomic) CALayer *shadowLayer; // @synthesize shadowLayer=_shadowLayer;
@property(nonatomic) CALayer *edgeLayer; // @synthesize edgeLayer=_edgeLayer;
@property(retain, nonatomic) NSMutableArray *subviewConstraints; // @synthesize subviewConstraints=_subviewConstraints;
@property(retain, nonatomic) NSImageView *snapshotView; // @synthesize snapshotView=_snapshotView;
@property(nonatomic) BOOL showTopDividerEdgeOnly;
@property(nonatomic) BOOL showDividerEdge;
@property(nonatomic) BOOL showingSnapshot;
@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
- (void)didAddSubview:(id)arg1;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)dealloc;
- (id)_buildShadowLayer;
- (id)_buildEdgeLayer;
- (id)makeBackingLayer;
- (void)_createSnapshotView;
- (void)_viewingPaneViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ViewingPaneViewController : NSViewController
{
    NoSelectionPlaceholderView *_placeholderView;
    ConversationViewController *_conversationViewController;
    MailStackViewController *_stackViewController;
    NSView *_snapshotView;
}

@property(retain, nonatomic) NSView *snapshotView; // @synthesize snapshotView=_snapshotView;
@property(retain, nonatomic) MailStackViewController *stackViewController; // @synthesize stackViewController=_stackViewController;
@property(retain, nonatomic) ConversationViewController *conversationViewController; // @synthesize conversationViewController=_conversationViewController;
@property(retain, nonatomic) NoSelectionPlaceholderView *placeholderView; // @synthesize placeholderView=_placeholderView;
- (void)_snapshotTimeout;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setShowTopDividerEdgeOnly:(BOOL)arg1;
- (void)setShowDividerEdge:(BOOL)arg1;
- (void)_displayStackView;
- (void)_displayConversationView;
- (void)_displayNoSelectionPlaceholder;
- (id)currentMessageSelection;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setView:(id)arg1;
- (id)view;
- (void)loadView;
- (void)dealloc;
- (id)init;

@end

@interface ViewTextAttachmentCell : NSViewTextAttachmentCell
{
    NSView *_view;
    NSView *_containingView;
    struct CGSize _viewSize;
}

- (void)dealloc;
- (void)releaseView:(id)arg1;
- (struct CGSize)cellSize;
- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (id)view;
- (void)setControlView:(id)arg1;
- (id)controlView;
- (id)initWithView:(id)arg1;
- (void)_viewFrameChanged:(id)arg1;
- (void)_viewFrameChanged;

@end

@interface WebDocumentGenerator : NSObject
{
    MCMessage *_message;
    NSSet *_messagesInConversation;
    MCActivityMonitor *_loadMonitor;
    MUIWebDocument *_webDocument;
    id _asyncLoadCompletionHandler;
}

+ (id)_loadQueue;
@property(copy, nonatomic) id asyncLoadCompletionHandler; // @synthesize asyncLoadCompletionHandler=_asyncLoadCompletionHandler;
@property(retain, nonatomic) MUIWebDocument *webDocument; // @synthesize webDocument=_webDocument;
@property(retain, nonatomic) MCActivityMonitor *loadMonitor; // @synthesize loadMonitor=_loadMonitor;
@property(retain, nonatomic) NSSet *messagesInConversation; // @synthesize messagesInConversation=_messagesInConversation;
@property(retain, nonatomic) MCMessage *message; // @synthesize message=_message;
- (void)cancelLoad;
- (void)asyncLoad:(id)arg1;
- (id)_dataDetectorsContext;
- (void)dealloc;
- (id)initWithMessage:(id)arg1 messagesInConversation:(id)arg2;

@end

@interface WebMessageController : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate>
{
    WebView *_webView;
    MFWebMessageDocument *_document;
    id _parentController;
    NSView *_mainFrameDocumentView;
    NSString *_sender;
    BOOL _finishedFirstLayout;
    BOOL _isForURLSharing;
    id _delegate;
    id _itemToShare;
    WebArchive *_webArchiveForSharing;
    struct CGRect _frameOfItemToShare;
}

+ (id)webResourcesForAttachments:(id)arg1 urls:(id)arg2;
@property(retain, nonatomic) WebArchive *webArchiveForSharing; // @synthesize webArchiveForSharing=_webArchiveForSharing;
@property(nonatomic) BOOL isForURLSharing; // @synthesize isForURLSharing=_isForURLSharing;
@property(nonatomic) struct CGRect frameOfItemToShare; // @synthesize frameOfItemToShare=_frameOfItemToShare;
@property(retain, nonatomic) id itemToShare; // @synthesize itemToShare=_itemToShare;
@property id parentController; // @synthesize parentController=_parentController;
@property(readonly) MFWebMessageDocument *document; // @synthesize document=_document;
@property id delegate; // @synthesize delegate=_delegate;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)_openLinkBehind:(id)arg1;
- (void)_openLink:(id)arg1;
- (void)setMainFrameDocumentView:(id)arg1;
- (id)mainFrameDocumentView;
- (void)adjustFontSizeBy:(float)arg1;
- (void)dealloc;
- (void)stopLoading;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (BOOL)hasFinishedFirstLayout;
- (BOOL)hasFinishedLoading;
- (void)documentResized;
- (void)setSender:(id)arg1;
@property(retain) WebView *webView;
- (void)setDocument:(id)arg1;
- (id)init;
- (id)initWithDocument:(id)arg1;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2;
- (unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (BOOL)considerBaseURLsInternal;
- (BOOL)_isInternalURL:(id)arg1;
- (void)adjustSpellingAndGrammarMenuItems:(id)arg1;

@end

@interface WebViewEditor : NSObject <EditingMessageWebViewDelegate, NSUserInterfaceValidations>
{
    EditingMessageWebView *_webView;
    ComposeBackEnd *_backEnd;
    DocumentEditor *_documentEditor;
    HyperlinkEditor *_hyperlinkEditor;
    EditingWebMessageController *_messageController;
    WebFrame *_frameAllowedToLoadContent;
    NSArray *_attachmentsForContextualMenu;
    NSMutableSet *_largeFilesAddedWhileEditing;
    BOOL _finalSpellCheckingIsInProgress;
    BOOL _containsRichText;
    BOOL _containsRichTextFlagIsValid;
    BOOL _needToCheckRichnessInRange;
    DOMHTMLAnchorElement *_linkWhoseTextIsBeingEdited;
    NSDictionary *_infoForRichnessTest;
}

@property(readonly) ComposeBackEnd *composeBackEnd; // @synthesize composeBackEnd=_backEnd;
@property(retain) NSDictionary *infoForRichnessTest; // @synthesize infoForRichnessTest=_infoForRichnessTest;
- (void)webViewDidEndLiveResize:(id)arg1;
- (void)webViewWillStartLiveResize:(id)arg1;
- (void)largeFileAdded:(id)arg1;
- (id)largeFilesAddedWhileEditing;
- (void)saveChangedDocument:(id)arg1;
- (void)saveDocument:(id)arg1;
- (void)pasteAsMarkup;
- (void)replaceSelectionWithFragment:(id)arg1;
- (BOOL)_isOkayToInsertAttachment:(id)arg1;
- (void)insertAttributedStringOfAttachments:(id)arg1 allAttachmentsAreOkay:(BOOL)arg2;
- (void)addAttachmentsForFiles:(id)arg1;
- (void)redisplayChangedAttachment:(id)arg1;
- (void)viewAttachments:(id)arg1 inLine:(BOOL)arg2;
- (void)removeAttachments:(id)arg1;
- (id)directoryForAttachment:(id)arg1;
- (id)selectedAttachmentNode;
- (id)attachmentForEvent:(id)arg1;
- (id)selectedAttachments;
- (void)replaceRiskyAttachmentsWithLinks;
- (BOOL)removeAttachmentsLeavingPlaceholder:(BOOL)arg1;
- (void)webView:(id)arg1 willRemoveMailAttachment:(id)arg2;
- (void)webView:(id)arg1 didAddMailAttachment:(id)arg2;
- (void)webViewWillInsertContentsOfWebpage:(id)arg1;
- (BOOL)webViewShouldReplaceSelectionWithContentsOfWebpage:(id)arg1;
- (void)webViewMainDocumentBaseURIDidChange:(id)arg1;
- (BOOL)webView:(id)arg1 shouldInsertAttachments:(id)arg2 context:(id)arg3;
- (id)webView:(id)arg1 shouldReplaceSelectionWithWebArchive:(id)arg2 givenAction:(int)arg3;
- (id)_validRangeFromSelection:(id)arg1;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)webViewDidChange:(id)arg1;
- (BOOL)webView:(id)arg1 shouldInsertNode:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldInsertText:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (void)appendAttributedString:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
- (void)appendParsedMessage:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
- (void)appendFragment:(id)arg1 toDocument:(id)arg2 asQuote:(BOOL)arg3;
@property(readonly) BOOL isSelectionEditable;
- (void)beginConvertToRichTextAlert:(id)arg1;
- (id)alertForConvertingToRichText;
- (BOOL)webView:(id)arg1 shouldApplyStyle:(id)arg2 toElementsInDOMRange:(id)arg3;
- (void)webViewDidInsertRichText:(id)arg1;
- (BOOL)webView:(id)arg1 shouldDeleteDOMRange:(id)arg2;
- (void)_checkRichnessForEditedRange:(id)arg1;
- (void)changeComposeModeInBackEndAndView:(long long)arg1;
- (void)invalidateRichTextCache;
@property BOOL containsRichText;
@property BOOL allowsRichText;
- (void)removeAllFormattingFromWebView;
- (BOOL)webView:(id)arg1 canInsertFromPasteboard:(id)arg2 forDrag:(BOOL)arg3;
- (BOOL)webView:(id)arg1 shouldShowDeleteInterfaceForElement:(id)arg2;
- (void)setFloat:(id)arg1 ofNode:(id)arg2 inView:(id)arg3 undoTitle:(id)arg4;
- (void)_setFloat:(id)arg1 ofNode:(id)arg2 inView:(id)arg3 undoTitle:(id)arg4;
- (void)decreaseListNestingLevel:(id)arg1;
- (void)increaseListNestingLevel:(id)arg1;
- (void)convertToBulletedList:(id)arg1;
- (void)convertToNumberedList:(id)arg1;
- (void)insertListWithNumbers:(BOOL)arg1 undoTitle:(id)arg2;
- (void)insertBulletedList:(id)arg1;
- (void)insertNumberedList:(id)arg1;
- (BOOL)_selectionIsInEmptyListItem;
- (BOOL)selectionIsInListTypes:(id)arg1;
- (BOOL)selectionIsInList;
- (void)changeIndentationIfAllowed:(long long)arg1;
- (void)decreaseIndentation;
- (void)increaseIndentation;
@property(readonly) BOOL allowQuoting;
- (void)insertList:(id)arg1;
- (void)webViewDidChangeSelection:(id)arg1;
- (void)removeSelectedLink;
- (void)editLink;
- (void)editLink:(id)arg1;
- (void)_editLink;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)updateIgnoredWordsForHeader:(id)arg1;
- (BOOL)finalSpellCheckingIsInProgress;
- (void)setFinalSpellCheckingIsInProgress:(BOOL)arg1;
- (void)finalSpellCheckCompleted:(id)arg1;
- (void)endFinalSpellCheck;
- (BOOL)startFinalSpellCheck;
- (void)setCheckGrammarWithSpelling:(BOOL)arg1;
- (void)setInlineSpellCheckingEnabled:(BOOL)arg1;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)setFrameAllowedToLoadContent:(id)arg1;
- (void)setMessageController:(id)arg1;
@property(readonly) EditableWebMessageDocument *document;
- (void)setBackEnd:(id)arg1;
- (id)documentEditor;
@property(readonly) BOOL useDesignMode;
- (id)webView;
- (void)close;
- (void)setUp;
- (void)earlySetUp;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface WebViewLoadOperation : NSOperation
{
    WebView *_webView;
    NSData *_data;
    NSURLRequest *_urlRequest;
    NSInvocation *_loadInvocation;
    NSInvocation *_didLoadInvocation;
    BOOL _isExecuting;
    BOOL _isFinished;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)_webViewDidLoad:(id)arg1;
- (void)_end;
- (void)cancel;
- (void)main;
- (void)start;
- (BOOL)isFinished;
- (void)_setIsExecuting:(BOOL)arg1;
- (BOOL)isExecuting;
- (BOOL)isConcurrent;
- (id)description;
- (void)dealloc;
- (id)init;
- (void)_webViewLoadOperationCommonInitWithWebView:(id)arg1;
- (id)initWithWebView:(id)arg1 loadInvocation:(id)arg2 didLoadInvocation:(id)arg3;
- (id)initWithWebView:(id)arg1 loadInvocation:(id)arg2;
- (id)initWithWebView:(id)arg1 urlRequest:(id)arg2;
- (id)initWithWebView:(id)arg1 data:(id)arg2;

@end

@interface WindowTransformAnimation : NSAnimation
{
    FullScreenModalCapableWindow *_window;
    ModalDimmingWindow *_dimmingWindow;
    long long _dimmingFade;
    struct CGPoint _anchorPoint;
    double _maxScreenPosition;
    BOOL _cancelled;
    long long _animationType;
}

+ (id)windowTransformAnimationWithWindow:(id)arg1 dimmingWindow:(id)arg2 type:(long long)arg3;
@property BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(readonly) long long animationType; // @synthesize animationType=_animationType;
- (void)dealloc;
- (void)setCurrentProgress:(float)arg1;
- (void)cancelAnimation;
- (void)startAnimation;
- (void)setWindowMagnificationForProgress:(double)arg1 anchorPoint:(struct CGPoint)arg2;
- (void)setWindowFlyInTranslationProgress:(double)arg1;
- (unsigned long long)_animationCurveForAnimationType:(long long)arg1;
- (double)_animationDurationForAnimationType:(long long)arg1;
- (id)initWithWindow:(id)arg1 dimmingWindow:(id)arg2 type:(long long)arg3;
- (id)initWithDuration:(double)arg1 animationCurve:(unsigned long long)arg2;

@end

@interface MFAccount (MailUIExtras)
+ (id)mailAccountOfClass:(Class)arg1 withHostname:(id)arg2 username:(id)arg3;
+ (id)mailAccountWithName:(id)arg1;
+ (BOOL)exchangeAccountExists;
+ (BOOL)_existsAccountOfClass:(Class)arg1;
- (id)authSchemeBindingProxies;
- (void)configureAuthenticationPopUp:(id)arg1 withAuthSchemes:(id)arg2;
- (void)configureAuthenticationPopUp:(id)arg1;
- (void)_addAuthScheme:(id)arg1 toPopUp:(id)arg2;
@end

@interface MFDeliveryAccount (MailUIExtras)
- (id)remoteMailAccountsEmployedByString;
@end

@interface MFEWSAccount (MailUIExtras)
- (void)configureAuthenticationPopUp:(id)arg1 withAuthSchemes:(id)arg2;
- (void)configureAuthenticationPopUp:(id)arg1;
@end

@interface NSView (AttachmentDragSession)
- (BOOL)isCurrentAttachmentDragSourceView;
@end

@interface NSView (MailQuickLookAdditions)
- (id)quickLookTransitionImage;
- (struct CGRect)quickLookRectForFrame:(struct CGRect)arg1;
@end

@interface NSAttributedString (MailAttributedStringToHTML)
- (id)webArchiveForRange:(struct _NSRange)arg1;
- (id)webArchiveForRange:(struct _NSRange)arg1 fixUpNewlines:(BOOL)arg2;
- (id)webArchiveForRange:(struct _NSRange)arg1 signatureID:(id *)arg2;
- (id)webArchiveForRange:(struct _NSRange)arg1 signatureID:(id *)arg2 fixUpNewlines:(BOOL)arg3;
@end

@interface DOMNode (MailHTMLAttachments)
- (void)convertImagesToObjectsForAttachments:(id)arg1 excludeRemoteImages:(BOOL)arg2;
@end

@interface DOMElement (MailHTMLAttachments)
- (BOOL)getNewElement:(id *)arg1 usingAttachments:(id)arg2 excludeRemoteImages:(BOOL)arg3;
@end

@interface DOMHTMLImageElement (MailHTMLAttachments)
- (BOOL)getNewElement:(id *)arg1 usingAttachments:(id)arg2 excludeRemoteImages:(BOOL)arg3;
@end

@interface NSSpellChecker (AllocationOverride)
+ (id)allocWithZone:(struct _NSZone *)arg1;
@end

@interface NSView (ResizingAnimation)
- (void)setFrame:(struct CGRect)arg1 animate:(BOOL)arg2 repositionOtherSiblings:(BOOL)arg3;
- (void)setFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
@end

@interface DOMNode (MailExtras)
- (void)insertAsSiblingAfterNode:(id)arg1;
- (void)insertAsSiblingBeforeNode:(id)arg1;
- (void)convertBackgroundImageURLsUsingDictionary:(id)arg1;
- (BOOL)convertInlineStationeryBackgroundImageURL;
- (void)addInlineBackgroundImageURLToArray:(id)arg1;
- (id)findElementWithTag:(id)arg1 className:(id)arg2 andIdName:(id)arg3;
- (id)findElementWithTag:(id)arg1 andClass:(id)arg2;
- (void)stationeryAttachmentPlaceholderNodes:(id *)arg1;
- (id)stationeryAttachmentPlaceholderNodes;
- (void)objectElementChildNodes:(id *)arg1;
- (id)objectElementChildNodes;
- (void)descendants:(id *)arg1 withClassName:(id)arg2;
- (id)descendantsWithClassName:(id)arg1;
- (id)lastEditableElement;
- (void)editableElements:(id *)arg1;
- (id)editableElements;
- (id)tilingDiv;
- (id)tilingElements;
- (void)stationeryDynamicElementNodes:(id *)arg1;
- (id)stationeryDynamicElementNodes;
- (BOOL)convertInternalImagesToObjects;
- (id)attributedStringWithDocument:(id)arg1;
- (void)fixParagraphsAndQuotesFromMicrosoft;
- (void)fixParagraphsAndQuotesFromMicrosoftNodesToRemove:(id)arg1;
- (void)recursivelyFixParagraphs;
- (void)recursivelyRemoveMailAttributes;
- (void)restoreEditableElementsEdited:(id *)arg1 unedited:(id *)arg2;
- (void)recursivelyRemoveMailAttributes:(BOOL)arg1 convertObjectsToImages:(BOOL)arg2 convertEditableElements:(BOOL)arg3 removeDefaultColorStyle:(BOOL)arg4;
- (BOOL)_isAppleStringAttachmentSpan;
- (BOOL)containsRichTextForMessageFont:(id)arg1;
@property(readonly) DOMHTMLElement *containingListElement;
- (BOOL)containsOnlySelectionMarkers;
- (BOOL)isInEditableRegion;
- (id)topmostEditableAncestor;
- (long long)outlineNestingLevel;
- (id)precedingListItem;
- (id)containingListItem;
- (id)topmostContainingNodeWithNameInArray:(id)arg1;
- (id)firstContainingNodeWithNameInArray:(id)arg1;
- (id)descendantNamed:(id)arg1;
- (id)nestedListElement;
- (BOOL)isAtEndOfContainerNode:(id)arg1;
- (BOOL)isAtBeginningOfContainerNode:(id)arg1;
- (unsigned int)offsetOfChild:(id)arg1;
- (id)commonAncestorWithNode:(id)arg1;
- (BOOL)isDescendantOfNode:(id)arg1;
- (id)firstDescendantBlockQuote;
- (id)highestContainingBlockQuote;
- (id)containingBlockQuote;
- (long long)quoteLevelDelta;
- (long long)quoteLevel;
- (BOOL)hasNoSignificantContentsOtherThanAttachments;
- (BOOL)hasNoSignificantContentsOrWhitespace;
- (BOOL)hasNoSignificantContents;
- (BOOL)_hasNoSignificantContentsOrWhitespace:(BOOL)arg1 orAttachments:(BOOL)arg2;
- (BOOL)hasNoContents;
@property(readonly) BOOL isListElement;
@property(readonly) BOOL isBody;
- (BOOL)isNodeThatAffectsTyping;
- (id)blockNodeAncestor;
- (BOOL)isBlockLevelElement;
- (id)appendBlockPlaceholder;
- (id)stringValue;
- (id)_mail_traversePreviousNode;
- (id)_mail_traverseNextSiblingStayingWithin:(id)arg1;
- (id)_mail_traverseNextNodeStayingWithin:(id)arg1;
@property(readonly) DOMNode *previousNode;
@property(readonly) DOMNode *nextNode;
- (id)nextSiblingOrAunt;
@property(readonly) BOOL _mail_isAttached;
- (BOOL)isTemporaryCursorMarker;
- (void)removeStrayLinefeeds;
- (void)_removeStrayLinefeedsAtBeginning;
- (void)_removeStrayLinefeedsAtEnd;
- (id)XPathRelativeTo:(id)arg1;
@end

@interface DOMCharacterData (MailExtras)
- (id)debugDescription;
@end

@interface DOMRange (MailExtras)
- (BOOL)hasNoSignificantContents;
- (BOOL)hasNoSignificantContentsOtherThanAttachments;
- (BOOL)hasNoSignificantContentsOrWhitespace;
- (BOOL)runSelectorOnContents:(SEL)arg1;
- (BOOL)containsListElements;
- (BOOL)isEditable;
- (void)setWithStringRepresentation:(id)arg1;
- (BOOL)containsRange:(id)arg1;
- (BOOL)isEqualToRange:(id)arg1;
- (id)stringRepresentation;
- (id)attachmentsFromDocument:(id)arg1;
- (void)attachments:(id *)arg1 urls:(id *)arg2 fromDocument:(id)arg3;
- (id)attachmentsByURLFromDocument:(id)arg1;
- (BOOL)containsRichTextForMessageFont:(id)arg1;
- (id)rangeOfContainingBlock;
- (void)balanceContainers;
- (void)fixIfStartIsAtEndOfContainerNode;
- (void)fixIfEndpointIsAtBeginningOfLine;
- (void)getBlockBoundaryParent:(id *)arg1 nextSibling:(id *)arg2 atStart:(BOOL)arg3;
- (id)attributedStringWithDocument:(id)arg1;
- (id)stringValue;
- (void)hoistRange;
- (BOOL)includeTemporarySelectionMarkers;
- (BOOL)isEquivalentToCollapsedRange;
- (id)lastNode;
- (id)firstNode;
@end

@interface DOMElement (MailExtras)
- (void)scrollToBottom;
- (BOOL)hasMarginsOfZero;
- (BOOL)isBlockLevelElement;
@end

@interface DOMHTMLElement (MailQuoteLevel)
- (long long)quoteLevelDelta;
@end

@interface DOMDocument (MailExtras)
- (id)createBlockPlaceholder;
@end

@interface DOMCSSValue (MailExtras)
- (BOOL)matchesFontFamily:(id)arg1;
@end

@interface DOMHTMLElement (MailExtras)
+ (BOOL)isRichTextStyle:(id)arg1;
+ (BOOL)isRichTextStyleCheckingOnlyFont:(id)arg1;
+ (BOOL)isRichTextStyleNotCheckingFont:(id)arg1;
- (BOOL)hasClassName:(id)arg1;
- (void)attachment:(id *)arg1 url:(id *)arg2 fromDocument:(id)arg3;
- (void)restoreEditableElementsEdited:(id *)arg1 unedited:(id *)arg2;
- (void)recursivelyRemoveMailAttributes:(BOOL)arg1 convertObjectsToImages:(BOOL)arg2 convertEditableElements:(BOOL)arg3 removeDefaultColorStyle:(BOOL)arg4;
- (BOOL)isRichTextElementForMessageFont:(id)arg1;
- (BOOL)isRichTextElementType;
@end

@interface DOMHTMLObjectElement (AttachmentLocator)
- (void)attachment:(id *)arg1 url:(id *)arg2 fromDocument:(id)arg3;
@end

@interface DOMDocumentFragment (MailExtras)
- (void)insertTextAtBeginning:(id)arg1 atEnd:(id)arg2;
@property(readonly) DOMDocumentFragment *unwrappedFragment;
@end

@interface DOMHTMLDocument (MailExtras)
+ (id)listElements;
- (id)createElement:(id)arg1 class:(id)arg2 id:(id)arg3 editable:(id)arg4;
- (BOOL)convertStationeryBackgroundImageURLs;
- (id)backgroundImageURLs;
- (id)generatorMeta;
- (id)head;
- (id)createFragmentForURL:(id)arg1 text:(id)arg2;
- (id)createSpanElementWithTabs:(long long)arg1;
- (id)createFragmentForWebArchive:(id)arg1 baseURL:(id)arg2 bodyAsDiv:(BOOL)arg3;
- (id)createFragmentForWebArchive:(id)arg1 baseURL:(id)arg2;
- (id)createFragmentForWebArchive:(id)arg1;
- (id)createNonemptyDivElementWithPlainStyle;
- (id)createMessageQuoteElement;
- (id)createFragmentForStringLosingBR:(id)arg1;
- (id)createDocumentFragmentWithMarkupString:(id)arg1;
@property(readonly) BOOL containsSelectionMarkers;
@end

@interface MFWebMessageDocument (Attachments)
- (void)addAttachmentsFromArchive:(id)arg1 attachmentDelegate:(id)arg2;
- (void)addAttachmentsFromResource:(id)arg1 attachmentDelegate:(id)arg2;
- (id)mimeBodyForAttachmentWithURL:(id)arg1;
@end

@interface WebHTMLView (MailAdditions)
- (void)changeDocumentBackgroundColor:(id)arg1;
@end

@interface NSAlert (MFErrorSupport)
+ (id)alertForError:(id)arg1 firstButton:(id)arg2 secondButton:(id)arg3 thirdButton:(id)arg4;
- (void)setKeyEquivalent:(id)arg1 onButtonWithTitle:(id)arg2;
- (void)setEscapeKeyEquivalentOnButtonWithTitle:(id)arg1;
@end

@interface NSView (FavoriteButtonAnimation)
- (void)resumeAnimation;
- (void)pauseAnimation;
@end

@interface CALayer (MailCALayerAdditions)
- (id)snapshotFromPresentationLayer;
@end

@interface NSEvent (MailAdditions)
- (BOOL)_mv_isMouseEvent;
@end

@interface NSFontManager (ToReplaceWithOurOwn)
+ (id)allocWithZone:(struct _NSZone *)arg1;
@end

@interface NSMediaLibraryBrowserController (MailAdditions)
+ (id)mv_sharedMailPhotoBrowser;
@end

@interface NSString (MailAdditions)
- (BOOL)matchesLocalizedDateIntervalFrom:(id *)arg1 to:(id *)arg2;
- (BOOL)doesMatchLocalizedDateName:(id)arg1;
- (void)drawEtchedInRect:(struct CGRect)arg1 withTopColor:(id)arg2 bottomColor:(id)arg3 shadowBelow:(BOOL)arg4 font:(id)arg5 centered:(BOOL)arg6 flipped:(BOOL)arg7 truncate:(BOOL)arg8;
- (void)_drawInRect:(struct CGRect)arg1 font:(id)arg2 color:(id)arg3 truncate:(BOOL)arg4;
@end

@interface NSView (MailAdditions)
- (id)newRenderedSnapshotForLayerBackedView:(struct CGRect)arg1;
- (id)newSnapshotForLayerBackedView;
- (struct CGRect)rectInScreenCoords:(struct CGRect)arg1;
- (id)newSnapshotIgnoringSubviewsWithRect:(struct CGRect)arg1;
- (id)newRenderedSnapshotWithRect:(struct CGRect)arg1 allowAlpha:(BOOL)arg2 forceScaleFactor:(long long)arg3;
- (id)newFullRenderedSnapshot;
- (id)newSnapshotWithRect:(struct CGRect)arg1;
- (BOOL)_testIsHIDPI;
@end

@interface NSWindow (MailWindowAdditions)
+ (void)updateMailPreferredBackingLocationFromDefaults;
- (void)setMailPreferredBackingLocationFromDefaults;
- (void)_setMailDeferredBackingLocationFromDefaults;
@end

@interface MCMessage (MailViewerAdditions)
- (void)handleBounceMessage:(id)arg1;
- (id)handleRedirectMessage:(id)arg1;
- (id)handleForwardMessage:(id)arg1;
- (id)handleReplyToMessage:(id)arg1;
- (void)handleOpenAppleEvent:(id)arg1;
@end

@interface MFMailbox (MessageListAdditions)
- (BOOL)smartMailboxUsesLastViewedDate;
@end

@interface WebHTMLView (ToReplaceViewWithOurOwn)
+ (id)allocWithZone:(struct _NSZone *)arg1;
@end

@interface NSWindow (BetterDescription)
- (id)debugDescription;
@end

@interface NSControl (MailAdditions)
- (void)sizeToFitAndAdjustWindowHeight;
@end

@interface NSUserDefaults (FontAdditions)
@property double messageListFontSize;
@property(retain) NSString *messageListFontName;
- (void)setMessageListFont:(id)arg1;
- (id)messageListFont;
@end

@interface NSFont (MailAdditions)
+ (id)validFontFamilyName:(id)arg1 fixedPitchOnly:(BOOL)arg2;
+ (id)fontWithBaseFont:(id)arg1 overlayFont:(id)arg2;
+ (void)setMessageListFont:(id)arg1;
+ (id)messageListFont;
+ (void)setFixedWidthFont:(id)arg1;
+ (id)fixedWidthFont;
+ (void)setMessageFont:(id)arg1;
+ (id)messageFont;
+ (id)prefsAddressFieldFont;
+ (id)addressFieldFont;
- (BOOL)isEqualNameAndSize:(id)arg1;
@end

@interface NSOutlineView (MailAdditions)
- (id)editedItem;
- (id)copyOfItemAndDescendance:(id)arg1;
- (void)_collectDescendants:(id *)arg1 ofItem:(id)arg2;
- (BOOL)item:(id)arg1 isDescendantOf:(id)arg2;
@end

@interface NSPopUpButton (MailAdditions)
- (void)reloadData;
- (double)sizeToFitWidth;
- (void)_selectItemWithTagAndSynchronizeTitle:(long long)arg1;
@end

@interface NSPreferences (ActiveModule)
- (id)currentModule;
- (id)activeModule;
@end

@interface NSPreferencesModule (ActiveModule)
+ (id)activeInstance;
@end

@interface NSToolbar (MailAdditions)
+ (id)segmentedOrBorderlessItemForItemIdentifier:(id)arg1 withDictionary:(id)arg2;
+ (id)darkGrayItemForItemIdentifier:(id)arg1 withDictionary:(id)arg2;
+ (id)borderlessItemForItemIdentifier:(id)arg1 withDictionary:(id)arg2;
+ (id)segmentedItemForItemIdentifier:(id)arg1 withDictionary:(id)arg2;
+ (void)configureSegmentedItem:(id)arg1 withDictionary:(id)arg2 forSegment:(long long)arg3;
- (id)configureToolbarItems;
- (id)itemWithTag:(long long)arg1;
@end

@interface NSView (MailToolbarBaselineView)
- (id)toolbarBaselineColorForceMain:(BOOL)arg1;
@end

@interface NSNib (MailSharedNibLoading)
+ (BOOL)loadSharedNib:(long long)arg1 owner:(id)arg2;
@end

@interface NSView (SlidingExtras)
- (void)setFrameWithRedraw:(struct CGRect)arg1;
- (void)setSlidingFrame:(struct CGRect)arg1;
- (struct CGRect)slidingFrame;
@end

@interface NSString (HTMLConversion)
- (id)webArchiveForRange:(struct _NSRange)arg1 signatureID:(id *)arg2;
- (id)webArchiveForRange:(struct _NSRange)arg1;
- (id)markupString;
@end

@interface NSEvent (MailViewerEvent)
- (void)_setModifierFlags:(unsigned long long)arg1;
@end

@interface WebView (MailExtras)
- (void)setAllDelegates:(id)arg1;
@end

@interface WebFrame (SizingExtras)
- (void)selectAttachmentView:(id)arg1;
- (void)adjustAttachmentView:(id)arg1;
- (void)adjustToDocumentView;
- (void)_setSize:(struct CGSize)arg1 ofElement:(id)arg2;
@end

@interface NSView (LocatingFrameViews)
- (id)enclosingScrollViewIgnoringWebScrollbars;
- (id)enclosingWebView;
- (id)enclosingFrameView;
@end

@interface WebPreferences (MessageDefaultsSupport)
+ (id)richTextComposeWebPreferences;
+ (id)plainTextComposeWebPreferences;
+ (id)unrenderedMailWebPreferences;
+ (id)richTextMailWebPreferences;
+ (id)plainTextMailWebPreferences;
- (void)_configureFixedFont:(id)arg1;
- (void)_configureCommonRichTextPreferences;
- (void)_configureCommonPlainTextPreferences;
- (void)_configureCommonPreferences;
- (void)_configureComposeRichPreferences:(id)arg1;
- (void)_configureComposePlainTextPreferences:(id)arg1;
- (void)_configureRichTextMessagePreferences:(id)arg1;
- (void)_configurePlainTextMessagePreferences:(id)arg1;
@end

